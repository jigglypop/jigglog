{"version":3,"sources":["webpack:///./src/components/Bio/styled.tsx","webpack:///./src/components/Bio/index.tsx","webpack:///./src/components/Common/Clearfix/index.tsx","webpack:///./src/components/Post/styled.tsx","webpack:///./src/components/Comment/style.tsx","webpack:///./src/components/Comment/CommentUser.tsx","webpack:///./src/customhooks/removecomment.ts","webpack:///./src/components/Comment/DeleteComment.tsx","webpack:///./src/components/Recomment/style.tsx","webpack:///./src/components/Recomment/WriteReComment.tsx","webpack:///./src/customhooks/writerecomment.ts","webpack:///./src/components/Recomment/ReCommentUser.tsx","webpack:///./src/customhooks/removerecomment.ts","webpack:///./src/components/Recomment/DeleteReComment.tsx","webpack:///./src/components/Recomment/ReCommentItem.tsx","webpack:///./src/components/Recomment/ReCommentsComponent.tsx","webpack:///./src/components/Comment/CommentItem.tsx","webpack:///./src/components/Comment/WriteComment.tsx","webpack:///./src/customhooks/writecomment.ts","webpack:///./src/components/Comment/CommentsComponent.tsx","webpack:///./src/customhooks/postcomment.tsx","webpack:///./src/components/Post/index.tsx","webpack:///./src/templates/Post.jsx","webpack:///./src/components/Common/PrintButton/index.tsx","webpack:///./src/components/Common/PrintButton/styled.tsx","webpack:///./node_modules/@material-ui/core/esm/Grid/Grid.js"],"names":["BioWrapper","styled","div","CircleWrapper","Bio","Grid","container","item","xs","className","to","src","AUTHOR","MYNAME","DESCRIPTION","GITHUB_ID","href","target","rel","viewBox","style","margin","padding","d","FACEBOOK_ID","INSTARGRAM_ID","Clearfix","ButtonInline","PostWrapper","PostContent","props","lines","answer","dels","ClearMobile","Button","button","ImageWrapper","WarpVisible","Visible","VisibleTable","TocItemDiv","SmallTextDiv","UnderDiv","UpperDiv","OpenTextDiv","WriteCommentButton","CommentDiv","CommentCountDiv","CommentItemsDiv","CommentItemDiv","CommentItemUpperDiv","TimeDiv","DeleteWrapperDiv","Cancel","Confirm","CommenItemContentDiv","CommenItemLowerDiv","CommentNameDiv","CommentUserDiv","WriteCommentDiv","CommentUser","name","useRemoveComment","timer","useSelector","state","removecomment","data","error","loading","dispatch","useDispatch","useEffect","comments","postComments","cleanRemoveComments","onChangeRemove","e","value","clearTimeout","setTimeout","changeRemoveComment","key","onGoRemoveComment","commentId","_removecomment","postId","window","location","pathname","postRemoveComment","DeleteComment","autoComplete","type","placeholder","onChange","onClick","WriteReCommentButton","ReCommentDiv","ReCommentCountDiv","ReCommentItemsDiv","ReCommentItemDiv","ReCommentItemUpperDiv","ReCommentNameDiv","ReCommentUserDiv","WriteReCommentDiv","WriteReComment","writerecomment","changeWriteReComment","cleanWriteReComments","onChangeReComment","onSubmitReComment","postWriteReComment","useWriteReComment","ReCommentUser","useRemoveReComment","removerecomment","cleanRemoveReComments","onChangeRemoveRe","changeRemoveReComment","onGoRemoveReComment","recommentId","_removerecomment","postRemoveReComment","DeleteReComment","ReCommentItem","recomment","time","Date","created","toString","id","content","ReCommentsComponent","recomments","length","map","index","CommentItem","comment","openId","setOpen","WriteCommentComponent","writecomment","changeWriteComment","cleanWriteComments","onChangeComment","onSubmitComment","postWriteComment","useWriteComment","CommentsComponent","postcomments","readPostComment","cleanPostComments","setOpenId","usePostComments","WriteComment","PostTemplate","post","html","frontmatter","title","date","images","image","useState","tocEls","setTocEls","tocItems","document","querySelectorAll","forEach","tocitem","classList","add","observer","IntersectionObserver","entries","entry","isIntersecting","items","remove","entryId","replace","tocItem","querySelector","toctextitem","tocEl","observe","disconnect","setAnswer","blankAnswer","useCallback","setLines","blankLines","setDels","blankDels","PREFIX","includes","require","alt","lg","md","sm","PrintButton","str","split","slice","formattedDate","marginBottom","dangerouslySetInnerHTML","__html","innerText","targettext","currentTarget","scrollTo","top","offsetTop","behavior","pageQuery","Post","printPage","global","print","PrintTitle","SPACINGS","GRID_SIZES","getOffset","val","arguments","undefined","parse","parseFloat","concat","String","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","_props$component","component","Component","_props$container","_props$direction","direction","_props$item","_props$justify","justify","_props$lg","_props$md","_props$sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","_props$zeroMinWidth","zeroMinWidth","other","root","StyledGrid","theme","boxSizing","display","flexWrap","width","minWidth","flexDirection","justifyContent","breakpoint","styles","themeSpacing","generateGutter","breakpoints","keys","reduce","accumulator","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid"],"mappings":"4XAEaA,EAAaC,IAAOC,IAAV,yEAAGD,CAAH,kVAmCVE,EAAgBF,IAAOC,IAAV,4EAAGD,CAAH,gNC2DXG,EAhFH,kBACV,kBAACJ,EAAD,KACE,kBAACK,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,wBAAIC,UAAU,aAEhB,kBAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC,OAAD,CAAME,GAAI,WACR,yBAAKC,IAAI,kBAGb,kBAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,uBAAGC,UAAU,WACVG,WAGL,kBAACP,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,uBAAGC,UAAU,WACVI,WAGL,kBAACR,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,UAAU,WAC3B,wBAAIA,UAAU,YACd,uBAAGA,UAAU,WACVK,gBAIL,kBAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACZO,YACC,uBACEC,KAAI,6BAAwBD,aAC5BE,OAAO,SACPC,IAAI,sBACJT,UAAU,UAEV,kBAACN,EAAD,KACE,yBAAKgB,QAAQ,YAAYC,MAAO,CAAEC,OAAQ,EAAGC,QAAS,IACpD,0BAAMC,EAAE,w2BAIZ,MAEN,kBAAClB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACZgB,cACC,uBACER,KAAI,mCAA8BQ,eAClCP,OAAO,SACPC,IAAI,sBACJT,UAAU,UAEV,kBAACN,EAAD,KACE,yBAAKgB,QAAQ,YAAYC,MAAO,CAAEC,OAAQ,EAAGC,QAAS,IACpD,0BAAMC,EAAE,oNAIZ,MAEN,kBAAClB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACZiB,gBACC,uBACET,KAAI,qCAAgCS,iBACpCR,OAAO,SACPC,IAAI,sBACJT,UAAU,UAEV,kBAACN,EAAD,KACE,yBAAKgB,QAAQ,YAAYC,MAAO,CAAEC,OAAQ,EAAGC,QAAS,IACpD,0BAAMC,EAAE,sjCAIZ,S,wBC/EGG,EATEzB,IAAOC,IAAV,2DAAGD,CAAH,4DCAD0B,EAAe1B,IAAOC,IAAV,2EAAGD,CAAH,MAEZ2B,EAAc3B,IAAOC,IAAV,0EAAGD,CAAH,kYAyJX4B,GApHiB5B,IAAOC,IAAV,6EAAGD,CAAH,0gCAoHAA,IAAOC,IAAV,0EAAGD,CAAH,o3CAoDN,SAAC6B,GAAD,OAAWA,EAAMC,SAkCjB,SAACD,GAAD,OAAWA,EAAME,UAGjB,SAACF,GAAD,OAAWA,EAAMG,SA+DtBC,GANajC,IAAOC,IAAV,yEAAGD,CAAH,+EAMIA,IAAOC,IAAV,0EAAGD,CAAH,8CAKXkC,EAASlC,IAAOmC,OAAV,qEAAGnC,CAAH,wJAaNoC,EAAepC,IAAOC,IAAV,2EAAGD,CAAH,udAyCZqC,EAAcrC,IAAOC,IAAV,0EAAGD,CAAH,sFAOXsC,EAAUtC,IAAOC,IAAV,sEAAGD,CAAH,wWA+BPuC,EAAevC,IAAOC,IAAV,4EAAGD,CAAH,yHAwEZwC,GA7DkBxC,IAAOC,IAAV,+EAAGD,CAAH,ozBA6DFA,IAAOC,IAAV,0EAAGD,CAAH,qT,YC3dVyC,EAAezC,IAAOC,IAAV,sEAAGD,CAAH,iMAcZ0C,EAAW1C,IAAOC,IAAV,kEAAGD,CAAH,8DAKR2C,EAAW3C,IAAOC,IAAV,kEAAGD,CAAH,sFASR4C,EAAc5C,IAAOC,IAAV,qEAAGD,CAAH,sEAQX6C,EAAqB7C,IAAOmC,OAAV,4EAAGnC,CAAH,4YAuClB8C,GAPU9C,IAAOC,IAAV,iEAAGD,CAAH,4CAOMA,IAAOC,IAAV,oEAAGD,CAAH,mFAOV+C,EAAkB/C,IAAOC,IAAV,yEAAGD,CAAH,+EAUfgD,EAAkBhD,IAAOC,IAAV,yEAAGD,CAAH,mBAUfiD,GANkBjD,IAAOC,IAAV,yEAAGD,CAAH,mBAMEA,IAAOC,IAAV,yEAAGD,CAAH,mGAOdkD,EAAsBlD,IAAOC,IAAV,8EAAGD,CAAH,mNAmBnBmD,EAAUnD,IAAOC,IAAV,kEAAGD,CAAH,iEAUPoD,EAAmBpD,IAAOC,IAAV,2EAAGD,CAAH,gHAYhBqD,EAASrD,IAAOC,IAAV,iEAAGD,CAAH,mEASNsD,EAAUtD,IAAOC,IAAV,kEAAGD,CAAH,0KAePuD,EAAuBvD,IAAOC,IAAV,+EAAGD,CAAH,+FAYpBwD,EAAqBxD,IAAOC,IAAV,6EAAGD,CAAH,gDAMlByD,EAAiBzD,IAAOC,IAAV,yEAAGD,CAAH,wPAkBd0D,EAAiB1D,IAAOC,IAAV,yEAAGD,CAAH,oJAcd2D,EAAkB3D,IAAOC,IAAV,0EAAGD,CAAH,mXCpNb4D,EARK,SAAC,GAA2B,IAAzBC,EAAyB,EAAzBA,KACnB,OACI,kBAACH,EAAD,KACI,4BAAKG,K,0ZCJV,SAASC,IAAmB,IAI7BC,EAJ6B,EACeC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,iBAAhFA,EADyB,EACzBA,cAAeC,EADU,EACVA,KAAMC,EADI,EACJA,MAAOC,EADH,EACGA,QAC9BC,EAAWC,cA8BjB,OANAC,qBAAW,WACLL,GAAQA,EAAKM,WACfH,EAASI,YAAaP,EAAKM,WAC3BH,EAASK,kBAEX,CAACL,EAAUH,IACN,CAAED,gBAAeC,OAAMC,QAAOC,UAASO,eA3BvB,SAACC,GACpB,IAAMhB,EAAQgB,EAAE7D,OAAO6C,KACjBiB,EAASD,EAAE7D,OAAO8D,MACpBf,GACAgB,aAAahB,GAEjBA,EAAQiB,YAAW,WACF,cAATnB,GAAiC,aAATA,GACxBS,EAASW,YAAoB,CAAEC,IAAKrB,EAAMiB,MAAOA,OAEtD,MAiBuDK,kBAbpC,SAACC,GACzB,IAAIC,E,+VAAiB,CAAH,GAAQnB,GAC1BmB,EAAeD,UAAYA,EAC3BC,EAAeC,OAASC,OAAOC,SAASC,SACxCnB,EAASoB,YAAkBL,MCzB/B,IAiBeM,GAjBO,SAAC,GAAyC,IAAvCP,EAAuC,EAAvCA,UAAuC,EACPtB,IAA7CM,EADoD,EACpDA,MAAOQ,EAD6C,EAC7CA,eAAgBO,EAD6B,EAC7BA,kBAC/B,OACI,kBAAC/B,EAAD,KACI,wBAAI5C,UAAU,YAAY4D,GAC1B,kBAACd,EAAD,KACI,6BACI,2BAAOsC,aAAa,eAAe/B,KAAK,WAAWgC,KAAK,WAAWC,YAAY,OAAOC,SAAU,SAAClB,GAAD,OAAMD,EAAeC,QAG7H,kBAACxB,EAAD,KACI,kBAACR,EAAD,CAAoBmD,QAAS,kBAAMb,EAAkBC,KAAY,qCCZpE3C,GAAezC,IAAOC,IAAV,sEAAGD,CAAH,iMAcZ0C,GAAW1C,IAAOC,IAAV,kEAAGD,CAAH,8DAKR2C,GAAW3C,IAAOC,IAAV,kEAAGD,CAAH,sFAURiG,GAAuBjG,IAAOmC,OAAV,8EAAGnC,CAAH,4YAuCpBkG,IAPUlG,IAAOC,IAAV,iEAAGD,CAAH,4CAOQA,IAAOC,IAAV,sEAAGD,CAAH,gHAQZmG,GAAoBnG,IAAOC,IAAV,2EAAGD,CAAH,+EAUjBoG,GAAoBpG,IAAOC,IAAV,2EAAGD,CAAH,mBAUjBqG,IANoBrG,IAAOC,IAAV,2EAAGD,CAAH,mBAMEA,IAAOC,IAAV,0EAAGD,CAAH,6FAOhBsG,GAAwBtG,IAAOC,IAAV,gFAAGD,CAAH,iQAuBrBmD,GAAUnD,IAAOC,IAAV,kEAAGD,CAAH,iEAUPoD,GAAmBpD,IAAOC,IAAV,2EAAGD,CAAH,gHAYhBqD,GAASrD,IAAOC,IAAV,iEAAGD,CAAH,mEASNsD,GAAUtD,IAAOC,IAAV,kEAAGD,CAAH,0KAePuD,GAAuBvD,IAAOC,IAAV,+EAAGD,CAAH,+FAYpBwD,GAAqBxD,IAAOC,IAAV,6EAAGD,CAAH,gDAMlBuG,GAAmBvG,IAAOC,IAAV,2EAAGD,CAAH,wPAkBhBwG,GAAmBxG,IAAOC,IAAV,2EAAGD,CAAH,oJAchByG,GAAoBzG,IAAOC,IAAV,4EAAGD,CAAH,uV,aC7N9B,IA0Be0G,GA1BQ,WAAM,MCEtB,WAA8B,IAiB7B3C,EAjB6B,EACgBC,aAAY,SAACC,GAAD,OAAsBA,EAAM0C,kBAAjFA,EADyB,EACzBA,eAAgBxC,EADS,EACTA,KAAMC,EADG,EACHA,MAAOC,EADJ,EACIA,QAC/BC,EAAWC,cAgCjB,OA9BAC,qBAAW,WACPF,EAASsC,aAAqB,CAAE1B,IAAK,SAAUJ,MAAOS,OAAOC,SAASC,cACxE,IAGFjB,qBAAW,WACHL,GAAQA,EAAKM,WACbH,EAASI,YAAaP,EAAKM,WAC3BH,EAASuC,mBAEf,CAACvC,EAAUH,IAoBN,CAAEwC,iBAAgBxC,OAAMC,QAAOC,UAASyC,kBAhBrB,SAACjC,GACvB,IAAMhB,EAAQgB,EAAE7D,OAAO6C,KACjBiB,EAASD,EAAE7D,OAAO8D,MACpBf,GACAgB,aAAahB,GAEjBA,EAAQiB,YAAW,WACF,YAATnB,GAA+B,SAATA,GAA4B,aAATA,GACzCS,EAASsC,aAAqB,CAAE1B,IAAKrB,EAAMiB,MAAOA,OAEvD,MAM2DiC,kBAHxC,WACtBzC,EAAS0C,aAAmBL,MDjCwBM,GAAhD7C,EADiB,EACjBA,MAAO0C,EADU,EACVA,kBAAmBC,EADT,EACSA,kBAElC,OACI,kBAACN,GAAD,KACI,kBAAC,GAAD,KACI,8BAAUb,aAAa,UAAU/B,KAAK,UAAUiC,YAAY,KAAKC,SAAU,SAAClB,GAAD,OAAMiC,EAAkBjC,MACnG,wBAAIrE,UAAU,YAAY4D,IAE9B,kBAAC,GAAD,KACI,kBAAC,GAAD,KACI,6BACI,2BAAOwB,aAAa,eAAe/B,KAAK,OAAOiC,YAAY,MAAMC,SAAU,SAAClB,GAAD,OAAMiC,EAAkBjC,OAEvG,6BACI,2BAAOe,aAAa,eAAe/B,KAAK,WAAWgC,KAAK,WAAWC,YAAY,OAAOC,SAAU,SAAClB,GAAD,OAAMiC,EAAkBjC,QAGhI,6BACI,kBAACoB,GAAD,CAAsBD,QAASe,GAAmB,uCERvDG,GARO,SAAC,GAA6B,IAA3BrD,EAA2B,EAA3BA,KACrB,OACI,kBAAC2C,GAAD,KACI,4BAAK3C,K,qWCJV,SAASsD,KAAqB,IAK/BpD,EAL+B,EACeC,aAAY,SAACC,GAAD,OAAsBA,EAAMmD,mBAAlFA,EAD2B,EAC3BA,gBAAiBjD,EADU,EACVA,KAAMC,EADI,EACJA,MAAOC,EADH,EACGA,QAChCC,EAAWC,cA+BjB,OANAC,qBAAW,WACLL,GAAQA,EAAKM,WACfH,EAASI,YAAaP,EAAKM,WAC3BH,EAAS+C,mBAEX,CAAC/C,EAAUH,IACN,CAAEiD,kBAAiBjD,OAAMC,QAAOC,UAASiD,iBA3BvB,SAACzC,GACtB,IAAMhB,EAAQgB,EAAE7D,OAAO6C,KACjBiB,EAASD,EAAE7D,OAAO8D,MACpBf,GACAgB,aAAahB,GAEjBA,EAAQiB,YAAW,WACF,gBAATnB,GAAmC,aAATA,GAC1BS,EAASiD,aAAsB,CAAErC,IAAKrB,EAAMiB,MAAOA,OAExD,MAiB2D0C,oBAbtC,SAACC,GAC3B,IAAIC,E,kWAAmB,IAAKN,GAC5BM,EAAiBD,YAAcA,EAC/BC,EAAiBpC,OAASC,OAAOC,SAASC,SAC1CnB,EAASqD,aAAoBD,MC1BjC,IAiBeE,GAjBS,SAAC,GAA6C,IAA3CH,EAA2C,EAA3CA,YAA2C,EACTN,KAAjD/C,EAD0D,EAC1DA,MAAOkD,EADmD,EACnDA,iBAAkBE,EADiC,EACjCA,oBACjC,OACI,kBAAC,GAAD,KACI,wBAAIhH,UAAU,YAAY4D,GAC1B,kBAAC,GAAD,KACI,6BACI,2BAAOwB,aAAa,eAAe/B,KAAK,WAAWgC,KAAK,WAAWC,YAAY,OAAOC,SAAU,SAAClB,GAAD,OAAMyC,EAAiBzC,QAG/H,kBAAC,GAAD,KACI,kBAACoB,GAAD,CAAsBD,QAAS,kBAAMwB,EAAoBC,KAAc,qCC4BxEI,GAxBO,SAAC,GAAkC,IAAhCC,EAAgC,EAAhCA,UACfC,EAAO,IAAIC,KAAKF,EAAUG,SAChC,OACI,6BACI,kBAAC5B,GAAD,KACI,kBAACE,GAAD,KACI,kBAAC,GAAD,CAAe1C,KAAMiE,EAAUjE,QAEnC,kBAACyC,GAAD,KACI,kBAAC,GAAD,KACI,4BAAKyB,EAAKG,aAEd,kBAAC,GAAD,CAAiBT,YAAaK,EAAUK,GAAK,MAEjD,kBAAC,GAAD,KACI,4BAAKL,EAAUM,UAEnB,kBAAC,GAAD,SCTDC,GArBa,SAAEC,GAC1B,OAAIA,EAEI,kBAACpC,GAAD,KACI,kBAACC,GAAD,KACI,4BAAKmC,EAAWA,WAAWC,OAA3B,YAEJ,kBAAC,GAAD,MACA,kBAACnC,GAAD,KACCkC,EAAWA,WAAWE,KAAI,SAACV,EAAgBW,GAAjB,OACvB,kBAAC,GAAD,CAAeX,UAAWA,EAAW5C,IAAKuD,SAKlD,kBAACvC,GAAD,OCiCGwC,GA9BK,SAAC,GAA+C,IAA7CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,QAC9Bd,EAAO,IAAIC,KAAKW,EAAQV,SAC9B,OACI,6BACI,kBAAChF,EAAD,KACI,kBAACQ,EAAD,KACI,kBAAC,EAAD,CAAaI,KAAM8E,EAAQ9E,QAE/B,kBAACX,EAAD,KACI,kBAACC,EAAD,KACI,4BAAK4E,EAAKG,aAEd,kBAAC,GAAD,CAAe9C,UAAWuD,EAAQR,GAAK,MAE3C,kBAAC5E,EAAD,KACI,4BAAKoF,EAAQP,UAEjB,kBAAC5E,EAAD,KACI,kBAACZ,EAAD,CAAaoD,QAAS,kBAAM6C,EAAQF,EAAQR,MACvCS,IAAWD,EAAQR,GAChB,4BAAKQ,EAAQL,WAAWC,OAAxB,gBACA,4BAAKI,EAAQL,WAAWC,OAAxB,uBAIdK,IAAWD,EAAQR,IAAM,kBAAC,GAAD,CAAqBG,WAAYK,EAAQL,e,aCvChF,IA0BeQ,GA1Be,WAAM,MCJ7B,WAA4B,IAiB3B/E,EAjB2B,EACgBC,aAAY,SAACC,GAAD,OAAsBA,EAAM8E,gBAA/EA,EADuB,EACvBA,aAAc5E,EADS,EACTA,KAAMC,EADG,EACHA,MAAOC,EADJ,EACIA,QAC7BC,EAAWC,cAgCjB,OA9BAC,qBAAW,WACPF,EAAS0E,aAAmB,CAAE9D,IAAK,SAAUJ,MAAOS,OAAOC,SAASC,cACtE,IAGFjB,qBAAW,WACHL,GAAQA,EAAKM,WACbH,EAASI,YAAaP,EAAKM,WAC3BH,EAAS2E,mBAEf,CAAC3E,EAAUH,IAoBN,CAAE4E,eAAc5E,OAAMC,QAAOC,UAAS6E,gBAhBrB,SAACrE,GACrB,IAAMhB,EAAQgB,EAAE7D,OAAO6C,KACjBiB,EAASD,EAAE7D,OAAO8D,MACpBf,GACAgB,aAAahB,GAEjBA,EAAQiB,YAAW,WACF,YAATnB,GAA+B,SAATA,GAA4B,aAATA,GACzCS,EAAS0E,aAAmB,CAAE9D,IAAKrB,EAAMiB,MAAOA,OAErD,MAMuDqE,gBAHtC,WACpB7E,EAAS8E,aAAiBL,MD3BsBM,GAA5CjF,EADwB,EACxBA,MAAO8E,EADiB,EACjBA,gBAAiBC,EADA,EACAA,gBAEhC,OACI,kBAACxF,EAAD,KACI,kBAAChB,EAAD,KACI,8BAAUiD,aAAa,UAAU/B,KAAK,UAAUiC,YAAY,KAAKC,SAAU,SAAClB,GAAD,OAAMqE,EAAgBrE,MACjG,wBAAIrE,UAAU,YAAY4D,IAE9B,kBAAC1B,EAAD,KACI,kBAACD,EAAD,KACI,6BACI,2BAAOmD,aAAa,eAAe/B,KAAK,OAAOiC,YAAY,MAAMC,SAAU,SAAClB,GAAD,OAAMqE,EAAgBrE,OAErG,6BACI,2BAAOe,aAAa,eAAe/B,KAAK,WAAWgC,KAAK,WAAWC,YAAY,OAAOC,SAAU,SAAClB,GAAD,OAAMqE,EAAgBrE,QAG9H,6BACI,kBAAChC,EAAD,CAAoBmD,QAASmD,GAAiB,uCEvBlE,IAsBeG,GAtBW,WAAK,MCAxB,WAA2B,MACKtF,aAAY,SAACC,GAAD,OAAsBA,EAAMsF,gBAAnE9E,EADsB,EACtBA,SAAUN,EADY,EACZA,KAAMyE,EADM,EACNA,OAClBtE,EAAWC,cA2BjB,OAzBAC,qBAAW,WACPF,EAASkF,YAAgBjE,OAAOC,SAASC,aAC3C,IAEFjB,qBAAW,WAIP,OAHIL,GAAQA,EAAKM,UACbH,EAASI,YAAaP,EAAKM,WAExB,WACHH,EAASmF,kBAEf,CAACnF,EAAUH,IAcN,CAAEM,WAAUmE,SAAQC,QAXX,SAACV,GACTA,IAAOS,GACPtE,EAASoF,YAAU,KACnBpF,EAASsC,aAAqB,CAAE1B,IAAK,YAAaJ,MAAO,QAEzDR,EAASoF,YAAUvB,IACnB7D,EAASsC,aAAqB,CAAE1B,IAAK,YAAaJ,MAAOqD,QDvB3BwB,GAA9BlF,EADmB,EACnBA,SAAUmE,EADS,EACTA,OAAQC,EADC,EACDA,QAC1B,OAAIpE,EAEI,kBAAC3B,EAAD,KACI,kBAACC,EAAD,KACI,4BAAK0B,EAAS8D,OAAd,mCAEJ,kBAACqB,GAAD,MACA,kBAAC5G,EAAD,KACCyB,EAAS+D,KAAI,SAACG,EAASF,GAAV,OACV,kBAAC,GAAD,CAAaE,QAASA,EAASzD,IAAKuD,EAAOG,OAAQA,EAAQC,QAASA,SAK5E,kBAAC/F,EAAD,O,8xCEmBZ,IAgOe+G,GA3NM,SAAC,GAWA,QAVpB1F,KACE2F,KACEC,EAQgB,EARhBA,KAQgB,IAPhBC,YACEC,EAMc,EANdA,MACAC,EAKc,EALdA,KAKc,IAJdC,OAIc,gBAJL,GAIK,QAEbC,OAFa,MAEL,KAFK,OAIQC,mBAAc,MAJtB,GAIbC,EAJa,KAILC,EAJK,KAKpB/F,qBAAU,WACR,IAAMgG,EAAWC,SAASC,iBAAiB,UAC3CF,EAASG,SAAQ,SAACC,EAASnC,GACzBmC,EAAQC,UAAUC,IAAlB,qBAAoCrC,OAEtC8B,EAAUC,GACV,IAAMO,EAAW,IAAIC,sBAAqB,SAACC,GACzCA,EAAQN,SAAQ,SAACO,GACf,GAAIA,EAAMC,eAAgB,CACLV,SAASC,iBAAiB,YAClCC,SAAQ,SAACS,GAAD,OAAWA,EAAMP,UAAUQ,OAAO,kBACrD,IAAMC,EAAUJ,EAAMlK,OAAOR,UAAU+K,QAAQ,cAAe,IACxDC,EAAUf,SAASgB,cAAT,kBAAkCH,IAC5CI,EAAcjB,SAASgB,cAAT,sBAAsCH,IACtDE,GAAWE,GACbF,EAAQX,UAAUC,IAAI,sBAU9B,OALIN,GACFA,EAASG,SAAQ,SAACgB,GAChBZ,EAASa,QAAQD,MAGd,kBAAMZ,GAAYA,EAASc,gBACjC,IA/BiB,SAkCQxB,mBAAS,IAlCjB,GAkCbtI,EAlCa,KAkCL+J,EAlCK,KAmCdC,EAAcC,uBAAY,WAE5BF,EADa,KAAX/J,EACQ,SAEA,MAEX,CAACA,IAzCgB,KA4CMsI,mBAAS,IA5Cf,GA4CbvI,EA5Ca,KA4CNmK,EA5CM,KA6CdC,EAAaF,uBAAY,WAE3BC,EADY,KAAVnK,EACO,SAEA,MAEV,CAACA,IAnDgB,KAsDIuI,mBAAS,UAtDb,GAsDbrI,EAtDa,KAsDPmK,EAtDO,KAuDdC,EAAYJ,uBAAY,WAE1BG,EADW,KAATnK,EACM,SAEA,MAET,CAACA,IAeJ,OACE,oCACE,kBAAC,IAAD,KACE,yCAAWqK,UAAX,OAAoBpC,IACpB,0BAAMpG,KAAK,WAAWuE,QAAO,UAAKiE,UAAL,OAAcpC,MAE7C,kBAACtI,EAAD,KACE,kBAACvB,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC6B,EAAD,KACE,yBAAK5B,UAAU,WACb,yBAAKA,UAAU,YACZ4J,GACC,yBACE1J,IACE0J,EAAMkC,SAAS,MACXlC,EACAmC,UAAQ,YAAenC,IAE7BoC,IAAI,MAIV,yBAAKhM,UAAU,WAAWyJ,MAIhC,kBAAC7J,EAAA,EAAD,CACEE,MAAI,EACJmM,GAAI,EACJC,GAAI,EACJC,IAAI,EACJpM,IAAI,EACJC,UAAU,iBAEV,kBAAC8B,EAAD,KACE,kBAAC,EAAD,MACA,kBAACD,EAAD,KACE,yBAAK7B,UAAU,aACb,kBAAC0B,EAAD,CAAQ2D,KAAK,SAASG,QAAS+F,GAC7B,uCAGJ,yBAAKvL,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eACF,UAAVuB,EAAqB,kBAAC,IAAD,MAAe,kBAAC,IAAD,UAK7C,kBAACM,EAAD,KACE,yBAAK7B,UAAU,aACb,kBAAC0B,EAAD,CAAQ2D,KAAK,SAASG,QAASkG,GAC7B,uCAGJ,yBAAK1L,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eACH,UAATsB,EAAoB,kBAAC,IAAD,MAAe,kBAAC,IAAD,UAK5C,kBAACO,EAAD,KACE,yBAAK7B,UAAU,aACb,kBAAC0B,EAAD,CAAQ2D,KAAK,SAASG,QAASoG,GAC7B,uCAGJ,yBAAK5L,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eACJ,UAARwB,EAAmB,kBAAC,IAAD,MAAe,kBAAC,IAAD,YAQ/C,kBAAC5B,EAAA,EAAD,CAAME,MAAI,EAACmM,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIpM,GAAI,IACnC,kBAAC0B,EAAD,KACE,kBAACP,EAAD,KACE,kBAAC,EAAD,KACE,kBAACkL,EAAA,EAAD,SAIN,kBAAChL,EAAD,CAAaG,OAAQA,EAAQD,MAAOA,EAAOE,KAAMA,GAC/C,4BAvLQ,SAAE6K,GAAe,SACNA,EAAIC,MAAM,KADJ,UAC9B5C,OAD8B,MACvB,GADuB,SACnBnC,OADmB,MACZ,GADY,EAErC,gBAAUmC,EAAV,YAAkBnC,EAAKgF,MAAM,EAAG,IAqLfC,CAAc9C,GAAnB,iBACA,wBAAI/I,MAAO,CAAE8L,aAAc,UAC3B,yBACE9E,GAAG,gBACH+E,wBAAyB,CAAEC,OAAQpD,GACnC5I,MAAO,CAAE8L,aAAc,aAK7B,kBAAC7M,EAAA,EAAD,CACEE,MAAI,EACJmM,GAAI,EACJC,GAAI,EACJC,IAAI,EACJpM,IAAI,EACJC,UAAU,iBAEV,kBAAC+B,EAAD,KACG+H,GACC,GAAIA,GAAQ9B,KAAI,SAAClI,EAAYmI,GAAb,OACd,kBAACjG,EAAD,CACE0C,IAAKuD,EACLjI,UAAS,kBAAaF,EAAK8M,WAC3BjF,GAAE,iBAAYM,GACdzC,QAAS,SAACnB,GAAD,OAhIX,SAACA,GACf,IAAMwI,EAAmB5C,SAASgB,cAAT,sBACR5G,EAAEyI,cAAcnF,GAAGoD,QAAQ,UAAW,MAEnD8B,GACF9H,OAAOgI,SAAS,CACdC,IAAKH,EAAWI,UAAY,IAC5BC,SAAU,WAyHkB1H,CAAQnB,KAExB,4BAAKvE,EAAK8M,kBAMtB,kBAAChN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,UCrPGoN,IAFE9D,UANM,SAAChI,GAAD,OACnB,kBAAC,IAAWA,EACV,kBAAC+L,GAAS/L,KAMQ,e,mCCbtB,6DAkBe+K,IAXK,WAChB,IAAMiB,EAAY7B,uBAAY,WAC5B8B,EAAOC,UACN,IACH,OACI,kBAAC,IAAD,CAAQlI,KAAK,SAASG,QAAS6H,GAC3B,kBAAC,IAAD,MACA,kBAAC,IAAD,kB,+ECdZ,oFAEa3L,EAASlC,IAAOmC,OAAV,qEAAGnC,CAAH,4KAWNgO,EAAahO,IAAOC,IAAV,yEAAGD,CAAH,gF,kCCbvB,wGAoBIiO,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1CC,EAAa,CAAC,QAAQ,EAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IA4CnE,SAASC,EAAUC,GACjB,IAAInO,EAAMoO,UAAU9F,OAAS,QAAsB+F,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,EAC1EE,EAAQC,WAAWJ,GACvB,MAAO,GAAGK,OAAOF,EAAQtO,GAAKwO,OAAOC,OAAON,GAAK7C,QAAQmD,OAAOH,GAAQ,KAAO,MA6B1E,IA6HHnO,EAAoB,cAAiB,SAAcyB,EAAO8M,GAC5D,IAAIC,EAAsB/M,EAAMgN,aAC5BA,OAAuC,IAAxBD,EAAiC,UAAYA,EAC5DE,EAAoBjN,EAAMkN,WAC1BA,OAAmC,IAAtBD,EAA+B,UAAYA,EACxDE,EAAUnN,EAAMmN,QAChBC,EAAgBpN,EAAMrB,UACtB0O,EAAmBrN,EAAMsN,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAmBxN,EAAMxB,UACzBA,OAAiC,IAArBgP,GAAsCA,EAClDC,EAAmBzN,EAAM0N,UACzBA,OAAiC,IAArBD,EAA8B,MAAQA,EAClDE,EAAc3N,EAAMvB,KACpBA,OAAuB,IAAhBkP,GAAiCA,EACxCC,EAAiB5N,EAAM6N,QACvBA,OAA6B,IAAnBD,EAA4B,aAAeA,EACrDE,EAAY9N,EAAM4K,GAClBA,OAAmB,IAAdkD,GAA+BA,EACpCC,EAAY/N,EAAM6K,GAClBA,OAAmB,IAAdkD,GAA+BA,EACpCC,EAAYhO,EAAM8K,GAClBA,OAAmB,IAAdkD,GAA+BA,EACpCC,EAAiBjO,EAAMkO,QACvBA,OAA6B,IAAnBD,EAA4B,EAAIA,EAC1CE,EAAcnO,EAAMoO,KACpBA,OAAuB,IAAhBD,EAAyB,OAASA,EACzCE,EAAYrO,EAAMsO,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAYvO,EAAMtB,GAClBA,OAAmB,IAAd6P,GAA+BA,EACpCC,EAAsBxO,EAAMyO,aAC5BA,OAAuC,IAAxBD,GAAyCA,EACxDE,EAAQ,YAAyB1O,EAAO,CAAC,eAAgB,aAAc,UAAW,YAAa,YAAa,YAAa,YAAa,OAAQ,UAAW,KAAM,KAAM,KAAM,UAAW,OAAQ,KAAM,KAAM,iBAE1MrB,EAAY,YAAKwO,EAAQwB,KAAMvB,EAAe5O,GAAa,CAAC2O,EAAQ3O,UAAuB,IAAZ0P,GAAiBf,EAAQ,cAAcP,OAAOC,OAAOqB,MAAazP,GAAQ0O,EAAQ1O,KAAMgQ,GAAgBtB,EAAQsB,aAA4B,QAAdf,GAAuBP,EAAQ,gBAAgBP,OAAOC,OAAOa,KAAuB,SAATU,GAAmBjB,EAAQ,WAAWP,OAAOC,OAAOuB,KAAwB,YAAflB,GAA4BC,EAAQ,kBAAkBP,OAAOC,OAAOK,KAAgC,YAAjBF,GAA8BG,EAAQ,oBAAoBP,OAAOC,OAAOG,KAA6B,eAAZa,GAA4BV,EAAQ,cAAcP,OAAOC,OAAOgB,MAAmB,IAAPnP,GAAgByO,EAAQ,WAAWP,OAAOC,OAAOnO,MAAc,IAAPoM,GAAgBqC,EAAQ,WAAWP,OAAOC,OAAO/B,MAAc,IAAPD,GAAgBsC,EAAQ,WAAWP,OAAOC,OAAOhC,MAAc,IAAPD,GAAgBuC,EAAQ,WAAWP,OAAOC,OAAOjC,MAAc,IAAP0D,GAAgBnB,EAAQ,WAAWP,OAAOC,OAAOyB,MACl2B,OAAoB,gBAAoBf,EAAW,kBAAS,CAC1D5O,UAAWA,EACXmO,IAAKA,GACJ4B,OAGDE,EAAa,aAvKG,SAAgBC,GAClC,OAAO,kBAAS,CAEdF,KAAM,GAGNnQ,UAAW,CACTsQ,UAAW,aACXC,QAAS,OACTC,SAAU,OACVC,MAAO,QAITxQ,KAAM,CACJqQ,UAAW,aACXvP,OAAQ,KAKVkP,aAAc,CACZS,SAAU,GAIZ,sBAAuB,CACrBC,cAAe,UAIjB,8BAA+B,CAC7BA,cAAe,kBAIjB,2BAA4B,CAC1BA,cAAe,eAIjB,iBAAkB,CAChBH,SAAU,UAIZ,uBAAwB,CACtBA,SAAU,gBAIZ,wBAAyB,CACvB9B,WAAY,UAId,4BAA6B,CAC3BA,WAAY,cAId,0BAA2B,CACzBA,WAAY,YAId,0BAA2B,CACzBA,WAAY,YAId,0BAA2B,CACzBF,aAAc,UAIhB,8BAA+B,CAC7BA,aAAc,cAIhB,4BAA6B,CAC3BA,aAAc,YAIhB,iCAAkC,CAChCA,aAAc,iBAIhB,gCAAiC,CAC/BA,aAAc,gBAIhB,oBAAqB,CACnBoC,eAAgB,UAIlB,sBAAuB,CACrBA,eAAgB,YAIlB,2BAA4B,CAC1BA,eAAgB,iBAIlB,0BAA2B,CACzBA,eAAgB,gBAIlB,0BAA2B,CACzBA,eAAgB,iBA/ItB,SAAwBP,EAAOQ,GAC7B,IAAIC,EAAS,GAgBb,OAfAlD,EAAStD,SAAQ,SAAUoF,GACzB,IAAIqB,EAAeV,EAAMX,QAAQA,GAEZ,IAAjBqB,IAIJD,EAAO,WAAW1C,OAAOyC,EAAY,KAAKzC,OAAOsB,IAAY,CAC3D3O,OAAQ,IAAIqN,OAAON,EAAUiD,EAAc,IAC3CN,MAAO,eAAerC,OAAON,EAAUiD,GAAe,KACtD,YAAa,CACX/P,QAAS8M,EAAUiD,EAAc,SAIhCD,EAgIJE,CAAeX,EAAO,MAAOA,EAAMY,YAAYC,KAAKC,QAAO,SAAUC,EAAavM,GAGnF,OApMJ,SAAsBwM,EAAchB,EAAOQ,GACzC,IAAIC,EAAS,GACbjD,EAAWvD,SAAQ,SAAUgH,GAC3B,IAAIzM,EAAM,QAAQuJ,OAAOyC,EAAY,KAAKzC,OAAOkD,GAEjD,IAAa,IAATA,EAUJ,GAAa,SAATA,EAAJ,CAUA,IAAIb,EAAQ,GAAGrC,OAAOmD,KAAKC,MAAMF,EAAO,GAAK,KAAQ,IAAM,KAG3DR,EAAOjM,GAAO,CACZ4M,UAAWhB,EACXiB,SAAU,EACVC,SAAUlB,QAfVK,EAAOjM,GAAO,CACZ4M,UAAW,OACXC,SAAU,EACVC,SAAU,aAZZb,EAAOjM,GAAO,CACZ4M,UAAW,EACXC,SAAU,EACVC,SAAU,WAyBG,OAAfd,EACF,kBAASQ,EAAcP,GAEvBO,EAAahB,EAAMY,YAAYW,GAAGf,IAAeC,EA6JjDe,CAAaT,EAAaf,EAAOxL,GAC1BuM,IACN,OA4C+B,CAClC5N,KAAM,WADS,CAEdzD,GAmBY","file":"component---src-templates-post-jsx-7c23aedde5e0ba270be7.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const BioWrapper = styled.div`\r\n  .divider {\r\n    margin-top: 50px;\r\n    margin-bottom: 20px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n    height: 3px;\r\n    background-color: gray;\r\n  }\r\n  img {\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n  .biotext {\r\n    color: black;\r\n    font-size: 13px;\r\n    margin-top: 10px;\r\n    font-weight: 800;\r\n  }\r\n  .myname {\r\n    color: black;\r\n    font-size: 13px;\r\n    margin-top: 10px;\r\n    font-weight: 800;\r\n  }\r\n  .gridgap {\r\n    margin-top: 10px;\r\n  }\r\n  .circle {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\n\r\nexport const CircleWrapper = styled.div`\r\n  margin: 10px;\r\n  display: flex;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 45px;\r\n  width: 45px;\r\n  border-radius: 50%;\r\n  text-align: center;\r\n  border: 1.5px solid #ebebeb;\r\n  svg {\r\n    width: 20px;\r\n    height: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  AUTHOR,\r\n  DESCRIPTION,\r\n  MYNAME,\r\n  GITHUB_ID,\r\n  INSTARGRAM_ID,\r\n  FACEBOOK_ID,\r\n} from \"../../constants\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"gatsby\";\r\nimport { \r\n  CircleWrapper,\r\n  BioWrapper\r\n} from './styled'\r\n\r\nconst Bio = () => (\r\n  <BioWrapper>\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <hr className=\"divider\"/>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Link to={\"/resume\"}>\r\n          <img src=\"/github.png\" />\r\n        </Link>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <p className=\"biotext\">\r\n          {AUTHOR}\r\n        </p>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <p className=\"biotext\">\r\n          {MYNAME}\r\n        </p>\r\n      </Grid>\r\n      <Grid item xs={12} className=\"gridgap\">\r\n        <hr className=\"divider\"/>\r\n        <p className=\"biotext\">\r\n          {DESCRIPTION}\r\n        </p>\r\n      </Grid>\r\n\r\n      <Grid item xs={4}>\r\n        {GITHUB_ID ? (\r\n          <a\r\n            href={`https://github.com/${GITHUB_ID}`}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer noopener\"\r\n            className=\"circle\"\r\n          >\r\n            <CircleWrapper>\r\n              <svg viewBox=\"0 0 26 28\" style={{ margin: 0, padding: 0 }}>\r\n                <path d=\"M10 19c0 1.141-0.594 3-2 3s-2-1.859-2-3 0.594-3 2-3 2 1.859 2 3zM20 19c0 1.141-0.594 3-2 3s-2-1.859-2-3 0.594-3 2-3 2 1.859 2 3zM22.5 19c0-2.391-1.453-4.5-4-4.5-1.031 0-2.016 0.187-3.047 0.328-0.812 0.125-1.625 0.172-2.453 0.172s-1.641-0.047-2.453-0.172c-1.016-0.141-2.016-0.328-3.047-0.328-2.547 0-4 2.109-4 4.5 0 4.781 4.375 5.516 8.188 5.516h2.625c3.813 0 8.188-0.734 8.188-5.516zM26 16.25c0 1.734-0.172 3.578-0.953 5.172-2.063 4.172-7.734 4.578-11.797 4.578-4.125 0-10.141-0.359-12.281-4.578-0.797-1.578-0.969-3.437-0.969-5.172 0-2.281 0.625-4.438 2.125-6.188-0.281-0.859-0.422-1.766-0.422-2.656 0-1.172 0.266-2.344 0.797-3.406 2.469 0 4.047 1.078 5.922 2.547 1.578-0.375 3.203-0.547 4.828-0.547 1.469 0 2.953 0.156 4.375 0.5 1.859-1.453 3.437-2.5 5.875-2.5 0.531 1.062 0.797 2.234 0.797 3.406 0 0.891-0.141 1.781-0.422 2.625 1.5 1.766 2.125 3.938 2.125 6.219z\" />\r\n              </svg>\r\n            </CircleWrapper>\r\n          </a>\r\n        ) : null}\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        {FACEBOOK_ID ? (\r\n          <a\r\n            href={`https://www.facebook.com/${FACEBOOK_ID}`}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer noopener\"\r\n            className=\"circle\"\r\n          >\r\n            <CircleWrapper>\r\n              <svg viewBox=\"0 0 16 28\" style={{ margin: 0, padding: 0 }}>\r\n                <path d=\"M14.984 0.187v4.125h-2.453c-1.922 0-2.281 0.922-2.281 2.25v2.953h4.578l-0.609 4.625h-3.969v11.859h-4.781v-11.859h-3.984v-4.625h3.984v-3.406c0-3.953 2.422-6.109 5.953-6.109 1.687 0 3.141 0.125 3.563 0.187z\" />\r\n              </svg>\r\n            </CircleWrapper>\r\n          </a>\r\n        ) : null}\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        {INSTARGRAM_ID ? (\r\n          <a\r\n            href={`https://www.instargram.com/${INSTARGRAM_ID}`}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer noopener\"\r\n            className=\"circle\"\r\n          >\r\n            <CircleWrapper>\r\n              <svg viewBox=\"0 0 24 24\" style={{ margin: 0, padding: 0 }}>\r\n                <path d=\"M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z\" />\r\n              </svg>\r\n            </CircleWrapper>\r\n          </a>\r\n        ) : null}\r\n      </Grid>\r\n    </Grid>\r\n  </BioWrapper>\r\n);\r\n\r\nexport default Bio;\r\n","import styled from \"styled-components\";\r\n\r\nconst Clearfix = styled.div`\r\n  &:before,\r\n  &:after {\r\n    display: block;\r\n    clear: both;\r\n    content: \"\";\r\n  }\r\n`;\r\n\r\nexport default Clearfix;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ButtonInline = styled.div``;\r\n\r\nexport const PostWrapper = styled.div`\r\n  margin: auto;\r\n  padding: 10px 0 0;\r\n  margin: 0 40px 40px 40px;\r\n  font-size: 16px;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  box-shadow: 10px 10px 10px black;\r\n\r\n  @media (max-width: 600px) {\r\n    padding: 70px 16px 0;\r\n    margin: 0 10px 10px 10px;\r\n  }\r\n\r\n  &:before,\r\n  &:after {\r\n    display: block;\r\n    content: \"\";\r\n    clear: both;\r\n  }\r\n\r\n  h1 {\r\n    margin: 0.67em 0;\r\n    font-size: 36px;\r\n  }\r\n\r\n  time {\r\n    margin: 1em 0;\r\n    font-size: 14px;\r\n  }\r\n  a {\r\n    font-size: 12px;\r\n    font-weight: 800;\r\n    color: gray;\r\n  }\r\n`;\r\n\r\nexport const CommentContent = styled.div`\r\n  padding: 50px;\r\n  line-height: 2em;\r\n  color: black;\r\n  h1 {\r\n    margin-top: 50px;\r\n    margin-bottom: 50px;\r\n    font-size: 40px;\r\n    font-weight: 800;\r\n  }\r\n  h2 {\r\n    margin-top: 3em;\r\n    font-size: 28px;\r\n    font-weight: 800;\r\n  }\r\n  h3 {\r\n    margin-top: 40px;\r\n    font-size: 24px;\r\n    font-weight: 800;\r\n  }\r\n  h4,\r\n  h5 {\r\n    margin-top: 40px;\r\n    font-weight: 800;\r\n    font-size: 21px;\r\n  }\r\n  p {\r\n    margin-top: 10px;\r\n    font-size: 18px;\r\n    font-weight: 100;\r\n  }\r\n  strong {\r\n    margin-top: 100px;\r\n    font-size: 18px;\r\n    font-weight: 800;\r\n  }\r\n  li {\r\n    margin-top: 10px;\r\n    margin-left: 30px;\r\n    font-size: 18px;\r\n    font-weight: 100;\r\n  }\r\n  blockquote {\r\n    line-height: 1.2em;\r\n    color: #aaa;\r\n    margin-top: 18px;\r\n    font-size: 18px;\r\n  }\r\n  pre,\r\n  span {\r\n    margin-top: 10px;\r\n    font-size: 14px;\r\n  }\r\n  table {\r\n    margin: 20px;\r\n    background: #f9f9f9;\r\n  }\r\n  th,\r\n  tr,\r\n  td {\r\n    border: 2px solid gray;\r\n    color: black;\r\n    padding: 10px;\r\n    margin-top: 10px;\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media (max-width: 1000px) {\r\n    padding: 10px;\r\n    line-height: 2em;\r\n    color: black;\r\n    h1 {\r\n      margin-top: 2px;\r\n      margin-bottom: 2px;\r\n      font-size: 18px;\r\n    }\r\n    h2 {\r\n      margin-top: 2px;\r\n      font-size: 14px;\r\n    }\r\n    h3 {\r\n      margin-top: 2px;\r\n      font-size: 10px;\r\n    }\r\n    h4,\r\n    h5,\r\n    p,\r\n    blockquote,\r\n    pre {\r\n      margin-top: 5px;\r\n      font-size: 10px;\r\n    }\r\n    li {\r\n      margin-top: 5px;\r\n      font-size: 10px;\r\n      margin-left: 30px;\r\n    }\r\n    table {\r\n      margin: 20px;\r\n    }\r\n    th,\r\n    tr,\r\n    td,\r\n    span,\r\n    strong {\r\n      font-size: 10px;\r\n    }\r\n  }\r\n`;\r\n// 포스트 부분\r\nexport interface IPostContent {\r\n  lines : string;\r\n  answer: string;\r\n  dels: string;\r\n}\r\n\r\nexport const PostContent = styled.div<IPostContent>`\r\n  padding: 0 20px 20px 20px;\r\n  line-height: 2em;\r\n  color: black;\r\n  h1 {\r\n    margin-top: 5em;\r\n    font-size: 32px;\r\n    font-weight: 800;\r\n  }\r\n  h2 {\r\n    margin-top: 5em;\r\n    font-size: 28px;\r\n    font-weight: 800;\r\n  }\r\n  h3 {\r\n    margin-top: 1em;\r\n    font-size: 24px;\r\n    font-weight: 800;\r\n  }\r\n  h4 {\r\n    margin-top: 1em;\r\n    font-size: 21px;\r\n    font-weight: 800;\r\n  }\r\n  h5 {\r\n    margin-top: 1em;\r\n    font-size: 19px;\r\n    font-weight: 800;\r\n  }\r\n  p {\r\n    margin-top: 10px;\r\n    font-size: 18px;\r\n    font-weight: 100;\r\n  }\r\n  strong {\r\n    margin-top: 100px;\r\n    font-size: 22px;\r\n    font-weight: 800;\r\n  }\r\n  li {\r\n    margin-top: 10px;\r\n    margin-left: 30px;\r\n    font-size: 18px;\r\n    font-weight: 100;\r\n  }\r\n  blockquote {\r\n    line-height: 1.2em;\r\n    color: #aaa;\r\n    margin-top: 18px;\r\n    font-size: 18px;\r\n  }\r\n  em {\r\n    visibility: ${(props) => props.lines};\r\n    line-height: 1.2em;\r\n    font-weight: 1000;\r\n    margin-top: 18px;\r\n    font-size: 18px;\r\n    text-decoration: underline;\r\n  }\r\n  pre,\r\n  span {\r\n    margin-top: 10px;\r\n    font-size: 14px;\r\n  }\r\n  table {\r\n    margin: 20px;\r\n    background: #f9f9f9;\r\n  }\r\n  thead {\r\n    background: #e2e2e2;\r\n    font-weight: 800;\r\n  }\r\n  th,\r\n  tr,\r\n  td {\r\n    border: 2px solid gray;\r\n    color: black;\r\n    padding: 10px;\r\n    font-size: 14px;\r\n    min-width: 3rem;\r\n  }\r\n  hr {\r\n    margin-bottom: 30px;\r\n  }\r\n  code {\r\n    position: relative;\r\n    visibility: ${(props) => props.answer};\r\n  }\r\n  del {\r\n    visibility: ${(props) => props.dels};\r\n    text-decoration: none;\r\n    color: gray;\r\n  }\r\n\r\n  @media (max-width: 1000px) {\r\n    padding: 0 10px 10px 10px;\r\n    line-height: 2em;\r\n    color: black;\r\n    hr {\r\n      margin-bottom: 10px;\r\n    }\r\n    h1 {\r\n      margin-bottom: 2px;\r\n      font-size: 18px;\r\n    }\r\n    h2 {\r\n      font-size: 16px;\r\n    }\r\n    h3 {\r\n      font-size: 14px;\r\n    }\r\n    h4 {\r\n      font-size: 12px;\r\n    }\r\n    h5 {\r\n      font-size: 10px;\r\n    }\r\n    p,\r\n    blockquote,\r\n    pre {\r\n      margin-top: 5px;\r\n      font-size: 10px;\r\n    }\r\n\r\n    li {\r\n      line-height: 2.5em;\r\n      margin-top: 5px;\r\n      font-size: 10px;\r\n      margin-left: 10px;\r\n    }\r\n    table {\r\n      margin: 20px;\r\n    }\r\n    th,\r\n    tr,\r\n    td,\r\n    span,\r\n    em {\r\n      font-size: 10px;\r\n    }\r\n    strong {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PrintTitle = styled.div`\r\n  font-size: 15px;\r\n  font-weight: 800;\r\n  margin: 5px;\r\n  text-shadow: 3px 3px 30px white;\r\n`;\r\nexport const ClearMobile = styled.div`\r\n  @media (max-width: 600px) {\r\n    display: none;\r\n  }\r\n`;\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  color: white;\r\n  background: linear-gradient(45deg, #000000, #434343);\r\n  border-radius: 4px;\r\n  outline: 0;\r\n  border: 0;\r\n  h4{\r\n    margin: 2px;\r\n  }\r\n`;\r\n\r\nexport const ImageWrapper = styled.div`\r\n  .jb-wrap {\r\n    max-height: 400px;\r\n    width: 100%;\r\n    margin: 10px auto;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n  .jb-wrap img {\r\n    max-height: initial;\r\n    width: 100%;\r\n    vertical-align: middle;\r\n  }\r\n  .jb-text {\r\n    color: white;\r\n    font-weight: 800;\r\n    text-shadow: 2px 2px 20px white;\r\n    font-size: 30px;\r\n    text-align: center;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: black;\r\n    padding: 5%;\r\n    line-height: 2em;\r\n\r\n    @media (max-width: 600px) {\r\n      font-size: 15px;\r\n    }\r\n\r\n    @keyframes blink {\r\n      50% {\r\n        opacity: 0.8;\r\n      }\r\n      100% {\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const WarpVisible = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-left: 30px;\r\n  padding-right: 30px;\r\n`;\r\n\r\nexport const Visible = styled.div`\r\n  position: sticky;\r\n  top: 70px;\r\n  display: block;\r\n  align-items: center;\r\n  text-align: center;\r\n  h4 {\r\n    font-size: 14px;\r\n    font-weight: 800;\r\n  }\r\n  @media (max-width: 1200px) {\r\n    h4 {\r\n      font-size: 10px;\r\n      font-weight: 800;\r\n    }\r\n  }\r\n  @media (max-width: 992px) {\r\n    display: none;\r\n  }\r\n  .lineblock {\r\n    display: inline-block;\r\n  }\r\n  .smallcircle {\r\n    display: inline-block;\r\n    padding-left: 30px;\r\n    font-weight: 800;\r\n    color: greenyellow;\r\n    vertical-align: middle;\r\n  }\r\n`;\r\n\r\nexport const VisibleTable = styled.div`\r\n  position: sticky;\r\n  display: block;\r\n  top: 20vh;\r\n  align-items: center;\r\n  text-align: center;\r\n  @media (max-width: 992px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const ComponentInPost = styled.div`\r\n  position: relative;\r\n  margin: 1em 0 1em;\r\n  padding: 55px 16px 16px;\r\n  color: #263238;\r\n  border: 1px solid #263238;\r\n  border-top-left-radius: 5px;\r\n  border-top-right-radius: 5px;\r\n  overflow: hidden;\r\n  &:before {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    left: 0;\r\n    padding: 0 0 0 80px;\r\n    width: 100%;\r\n    height: 35px;\r\n    line-height: 35px;\r\n    color: #fff;\r\n    background-color: #263238;\r\n    font-weight: 100;\r\n    content: \"Application for example\";\r\n  }\r\n  &:after {\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 15px;\r\n    left: 20px;\r\n    width: 10px;\r\n    height: 10px;\r\n    background-color: #ff5f56;\r\n    border-radius: 50%;\r\n    content: \"\";\r\n  }\r\n  & > *:first-child {\r\n    &:before {\r\n      display: inline-block;\r\n      position: absolute;\r\n      top: 15px;\r\n      left: 40px;\r\n      width: 10px;\r\n      height: 10px;\r\n      background-color: #ffbd2e;\r\n      border-radius: 50%;\r\n      content: \"\";\r\n    }\r\n    &:after {\r\n      display: inline-block;\r\n      position: absolute;\r\n      top: 15px;\r\n      left: 60px;\r\n      width: 10px;\r\n      height: 10px;\r\n      background-color: #27c93f;\r\n      border-radius: 50%;\r\n      content: \"\";\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const TocItemDiv = styled.div`\r\n    display: block;\r\n    margin-right: 20px;\r\n    padding-left: 10px;\r\n    font-size: 10px;\r\n    border-left: 7px solid black;\r\n    transform: all 0.5s ease-in-out;\r\n    text-align: left;\r\n    cursor: pointer;\r\n    h4 {\r\n      padding: 0.4em 0 0.4em;\r\n      color: rgb(150, 150, 150);\r\n      font-size: 12px;\r\n      font-weight: 800;\r\n    }\r\n    &.isintersect h4{\r\n      color: black;\r\n      font-size: 14px;\r\n      padding: 0.5em 0 0.5em;\r\n    }\r\n`","import styled from 'styled-components'\r\n\r\n\r\nexport const SmallTextDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  input {\r\n    font-family: \"NanumBarunGothicSubset\" !important;\r\n    font-size: 0.8rem;\r\n    outline: none;\r\n    width: 100%;\r\n    background-color: white;\r\n    margin: 5px;\r\n    padding: 10px;\r\n    border: none;\r\n  }\r\n`\r\nexport const UnderDiv = styled.div`\r\n  grid-row:2/3;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\nexport const UpperDiv = styled.div`\r\n  grid-row:1/2;\r\n  text-align: center;\r\n  h4 {\r\n    font-size: 13px;\r\n    font-weight: 800;\r\n    color: #FF416C;\r\n  }\r\n`\r\nexport const OpenTextDiv = styled.div`\r\n  cursor: pointer;\r\n  h4 {\r\n    font-size: 10px;\r\n    font-weight: 800;\r\n    color: #FF416C;\r\n  }\r\n`\r\nexport const WriteCommentButton = styled.button`\r\n  transition: all 0.2s ease-in-out;\r\n  transition: 0.5s;\r\n  background-color: #141414;\r\n  height: 40px;\r\n  min-width: 50px;\r\n  margin: 5px;\r\n  font-family: \"NanumBarunGothicSubset\" !important;\r\n  h4 {\r\n    font-size: 12px;\r\n    font-weight:800;\r\n    padding: 10px;\r\n    color: white !important;\r\n  }\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n  @media (max-width: 1200px) {\r\n    h4 {\r\n      font-size: 11px;\r\n      padding: 4px;\r\n    }\r\n  }\r\n  @media (max-width: 600px) {\r\n    h4 {\r\n      font-size: 10px;\r\n      padding: 2px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const OpenDiv = styled.div`\r\n  display: none;\r\n  &.isopen {\r\n    display: inline;\r\n  }\r\n`\r\n\r\nexport const CommentDiv = styled.div`\r\n  padding:5%;\r\n  position:relative;\r\n  display:grid;\r\n  grid-template-rows:  50px 1fr 270px ;\r\n`\r\n// 댓글 위 카운트\r\nexport const CommentCountDiv = styled.div`\r\n  grid-row: 1/2;\r\n  padding: 20px;\r\n  h4 {\r\n    font-size: 16px;\r\n    font-weight: 800;\r\n    color: black;\r\n  }\r\n`\r\n// 댓글 아이템들\r\nexport const CommentItemsDiv = styled.div`\r\n  grid-row: 2/3;\r\n`\r\n// 댓글 기입\r\nexport const CommentWriteDiv = styled.div`\r\n  grid-row: 3/4;\r\n`\r\n\r\n// 아이템들\r\n// 외부\r\nexport const CommentItemDiv = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 150px 1fr 1fr;\r\n  grid-template-rows:  50px 1fr 50px;\r\n  margin: 1%;\r\n`\r\n// 댓글 아이템 위\r\nexport const CommentItemUpperDiv = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  align-items: center;\r\n  padding:10px;\r\n  grid-column:2/4;\r\n  grid-row:1/2;\r\n  padding: 10px;\r\n\r\n  .cancel {\r\n    cursor:pointer;\r\n    transition: 0.5s;\r\n    &:hover{\r\n      transform: scale(1.2);\r\n    }\r\n  }\r\n`\r\n// 댓글 시간\r\nexport const TimeDiv = styled.div`\r\n  display: flex;\r\n  h4 {\r\n    font-size: 10px;\r\n    font-weight: 800;\r\n    color: gray;\r\n  }\r\n`\r\n\r\n// 댓글 아이템 위\r\nexport const DeleteWrapperDiv = styled.div`\r\n  display: flex;\r\n  text-align: center;\r\n  align-items: center;\r\n  .errormsg {\r\n    font-size: 10px;\r\n    font-weight: 800;\r\n    color: #FF416C;\r\n  }\r\n`\r\n\r\n// 댓글 삭제\r\nexport const Cancel = styled.div`\r\n  cursor:pointer;\r\n  transition: 0.5s;\r\n  &:hover{\r\n    transform: scale(1.2);\r\n  }\r\n`\r\n\r\n// 댓글 삭제 패스워드 기입\r\nexport const Confirm = styled.div`\r\n  input {\r\n    font-family: \"NanumBarunGothicSubset\" !important;\r\n    font-size: 0.8rem;\r\n    outline: none;\r\n    width: 70%;\r\n    background-color: rgba(0,0,0,0.05);\r\n    margin: 2px;\r\n    padding: 4px;\r\n    border: none;\r\n  }\r\n\r\n`\r\n\r\n// 댓글 컨텐츠\r\nexport const CommenItemContentDiv = styled.div`\r\n  grid-column:2/3;\r\n  grid-row:2/3;\r\n  padding: 10px;\r\n\r\n  h4 {\r\n    font-size: 16px;\r\n    font-weight: 800;\r\n    color: black;\r\n  }\r\n`\r\n// 댓글 아래\r\nexport const CommenItemLowerDiv = styled.div`\r\n  grid-column:2/3;\r\n  grid-row:3/4;\r\n  padding: 10px;\r\n`\r\n// 옆 이름공간\r\nexport const CommentNameDiv = styled.div`\r\n  background : rgba(0,0,0,0.05);\r\n  display:flex;\r\n  flex-direction:column;\r\n  justify-content:center;\r\n  align-items:center;\r\n  text-align:center;\r\n  border-right: 2px solid #d4d4d4;\r\n  grid-column:1/2;\r\n  grid-row:1/4;\r\n  h4 {\r\n    margin: 1rem;\r\n    font-size: 13px;\r\n    font-weight: 800;\r\n    color: black;\r\n  }\r\n`\r\n// 유저이름\r\nexport const CommentUserDiv = styled.div`\r\n  display:flex;\r\n  flex-direction:column;\r\n  justify-content:center;\r\n  align-items:center;\r\n  text-align:center;\r\n\r\n  h4 {\r\n    font-size: 13px;\r\n    font-weight: 800;\r\n    color: black;\r\n  }\r\n`\r\n\r\nexport const WriteCommentDiv = styled.div`\r\n  background : rgba(0,0,0,0.05);\r\n  padding: 3%;\r\n  margin-bottom:1%;\r\n  display: grid;\r\n  grid-template-rows:  2fr 1fr;\r\n\r\n  h4 {\r\n    font-size: 13px;\r\n    font-weight: 800;\r\n    color: black;\r\n  }\r\n\r\n  textarea {\r\n    font-family: \"NanumBarunGothicSubset\" !important;\r\n    font-size: 0.8rem;\r\n    outline: none;\r\n    padding-bottom: 0.5rem;\r\n    margin-bottom: 1rem;\r\n    height: 20vh;\r\n    width: 100%;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    background-color: white;\r\n    border: none;\r\n  }\r\n`\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { CommentUserDiv } from './style';\r\n\r\ninterface ICommentUser {\r\n    name: string\r\n}\r\n\r\nconst CommentUser = ({ name } : ICommentUser) =>{\r\n    return (\r\n        <CommentUserDiv>\r\n            <h4>{name}</h4>\r\n        </CommentUserDiv>\r\n    )\r\n}\r\n\r\nexport default CommentUser","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { ChangeEvent, useEffect } from \"react\";\r\nimport { RootState } from \"../module\";\r\nimport { changeRemoveComment, cleanRemoveComments, postRemoveComment } from \"../module/removecomment\";\r\nimport { postComments } from \"../module/postcomments\";\r\n\r\nexport function useRemoveComment() {\r\n  const { removecomment, data, error, loading } = useSelector((state: RootState) => state.removecomment);\r\n  const dispatch = useDispatch();\r\n  \r\n  let timer: any\r\n  const onChangeRemove = (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n      const name  = e.target.name\r\n      const value =  e.target.value\r\n      if (timer){\r\n          clearTimeout(timer)\r\n      }\r\n      timer = setTimeout(() => {\r\n          if (name === 'commentId' || name === 'password') {\r\n              dispatch(changeRemoveComment({ key: name, value: value }))\r\n          }\r\n      }, 200);\r\n  }\r\n\r\n  // 삭제하기\r\n  const onGoRemoveComment = (commentId: string) =>{\r\n    let _removecomment = { ...removecomment }\r\n    _removecomment.commentId = commentId\r\n    _removecomment.postId = window.location.pathname\r\n    dispatch(postRemoveComment(_removecomment))\r\n  }\r\n  // 처리 후 바꿔주기\r\n  useEffect( ()=>{\r\n    if (data && data.comments){\r\n      dispatch(postComments(data.comments))\r\n      dispatch(cleanRemoveComments())\r\n    }\r\n  },[dispatch, data])\r\n  return { removecomment, data, error, loading, onChangeRemove, onGoRemoveComment };\r\n}","import React from 'react';\r\nimport { Cancel, Confirm, DeleteWrapperDiv, WriteCommentButton } from './style';\r\nimport { useRemoveComment } from '../../customhooks/removecomment'\r\n\r\nconst DeleteComment = ({ commentId } : { commentId: string }) =>{\r\n    const { error, onChangeRemove, onGoRemoveComment } = useRemoveComment()\r\n    return (\r\n        <DeleteWrapperDiv>\r\n            <h4 className=\"errormsg\">{error}</h4>\r\n            <Confirm>\r\n                <div>\r\n                    <input autoComplete=\"new-password\" name=\"password\" type=\"password\" placeholder=\"비밀번호\" onChange={(e)=> onChangeRemove(e)} />\r\n                </div>\r\n            </Confirm>\r\n            <Cancel>\r\n                <WriteCommentButton onClick={() => onGoRemoveComment(commentId)}><h4>X</h4></WriteCommentButton>\r\n            </Cancel>            \r\n        </DeleteWrapperDiv>\r\n    )\r\n}\r\n\r\nexport default DeleteComment","import styled from 'styled-components'\r\n\r\n\r\nexport const SmallTextDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  input {\r\n    font-family: \"NanumBarunGothicSubset\" !important;\r\n    font-size: 0.8rem;\r\n    outline: none;\r\n    width: 100%;\r\n    background-color: white;\r\n    margin: 5px;\r\n    padding: 10px;\r\n    border: none;\r\n  }\r\n`\r\nexport const UnderDiv = styled.div`\r\n  grid-row:2/3;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\nexport const UpperDiv = styled.div`\r\n  grid-row:1/2;\r\n  text-align: center;\r\n  h4 {\r\n    font-size: 13px;\r\n    font-weight: 800;\r\n    color: #FF416C;\r\n  }\r\n`\r\n\r\nexport const WriteReCommentButton = styled.button`\r\n  transition: all 0.2s ease-in-out;\r\n  transition: 0.5s;\r\n  background-color: #141414;\r\n  height: 40px;\r\n  min-width: 50px;\r\n  margin: 5px;\r\n  font-family: \"NanumBarunGothicSubset\" !important;\r\n  h4 {\r\n    font-size: 12px;\r\n    font-weight:800;\r\n    padding: 10px;\r\n    color: white !important;\r\n  }\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n  @media (max-width: 1200px) {\r\n    h4 {\r\n      font-size: 11px;\r\n      padding: 4px;\r\n    }\r\n  }\r\n  @media (max-width: 600px) {\r\n    h4 {\r\n      font-size: 10px;\r\n      padding: 2px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const OpenDiv = styled.div`\r\n  display: none;\r\n  &.isopen {\r\n    display: inline;\r\n  }\r\n`\r\n\r\nexport const ReCommentDiv = styled.div`\r\n  background : rgba(0,0,0,0.1);\r\n  padding:0 5%;\r\n  position:relative;\r\n  display:grid;\r\n  grid-template-rows:  50px 1fr 270px ;\r\n`\r\n// 댓글 위 카운트\r\nexport const ReCommentCountDiv = styled.div`\r\n  grid-row: 1/2;\r\n  padding: 20px;\r\n  h4 {\r\n    font-size: 16px;\r\n    font-weight: 800;\r\n    color: black;\r\n  }\r\n`\r\n// 댓글 아이템들\r\nexport const ReCommentItemsDiv = styled.div`\r\n  grid-row: 2/3;\r\n`\r\n// 댓글 기입\r\nexport const ReCommentWriteDiv = styled.div`\r\n  grid-row: 3/4;\r\n`\r\n\r\n// 아이템들\r\n// 외부\r\nexport const ReCommentItemDiv = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 150px 1fr 1fr;\r\n  grid-template-rows:  1fr 1fr;\r\n  margin: 1%;\r\n`\r\n// 댓글 아이템 위\r\nexport const ReCommentItemUpperDiv = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  align-items: center;\r\n  padding:10px;\r\n  grid-column:2/4;\r\n  grid-row:1/2;\r\n  padding: 10px;\r\n  h4 {\r\n    font-size: 10px;\r\n    font-weight: 800;\r\n    color: gray;\r\n  }\r\n  .cancel {\r\n    cursor:pointer;\r\n    transition: 0.5s;\r\n    &:hover{\r\n      transform: scale(1.2);\r\n    }\r\n  }\r\n`\r\n// 댓글 시간\r\nexport const TimeDiv = styled.div`\r\n  display: flex;\r\n  h4 {\r\n    font-size: 10px;\r\n    font-weight: 800;\r\n    color: gray;\r\n  }\r\n`\r\n\r\n// 댓글 아이템 위\r\nexport const DeleteWrapperDiv = styled.div`\r\n  display: flex;\r\n  text-align: center;\r\n  align-items: center;\r\n  .errormsg {\r\n    font-size: 10px;\r\n    font-weight: 800;\r\n    color: #FF416C;\r\n  }\r\n`\r\n\r\n// 댓글 삭제\r\nexport const Cancel = styled.div`\r\n  cursor:pointer;\r\n  transition: 0.5s;\r\n  &:hover{\r\n    transform: scale(1.2);\r\n  }\r\n`\r\n\r\n// 댓글 삭제 패스워드 기입\r\nexport const Confirm = styled.div`\r\n  input {\r\n    font-family: \"NanumBarunGothicSubset\" !important;\r\n    font-size: 0.8rem;\r\n    outline: none;\r\n    width: 70%;\r\n    background-color: rgba(0,0,0,0.05);\r\n    margin: 2px;\r\n    padding: 4px;\r\n    border: none;\r\n  }\r\n\r\n`\r\n\r\n// 댓글 컨텐츠\r\nexport const CommenItemContentDiv = styled.div`\r\n  grid-column:2/3;\r\n  grid-row:2/3;\r\n  padding: 10px;\r\n\r\n  h4 {\r\n    font-size: 16px;\r\n    font-weight: 800;\r\n    color: black;\r\n  }\r\n`\r\n// 댓글 아래\r\nexport const CommenItemLowerDiv = styled.div`\r\n  grid-column:2/3;\r\n  grid-row:3/4;\r\n  padding: 10px;\r\n`\r\n// 옆 이름공간\r\nexport const ReCommentNameDiv = styled.div`\r\n  background : rgba(0,0,0,0.05);\r\n  display:flex;\r\n  flex-direction:column;\r\n  justify-content:center;\r\n  align-items:center;\r\n  text-align:center;\r\n  border-right: 2px solid #d4d4d4;\r\n  grid-column:1/2;\r\n  grid-row:1/4;\r\n  h4 {\r\n    margin: 1rem;\r\n    font-size: 13px;\r\n    font-weight: 800;\r\n    color: black;\r\n  }\r\n`\r\n// 유저이름\r\nexport const ReCommentUserDiv = styled.div`\r\n  display:flex;\r\n  flex-direction:column;\r\n  justify-content:center;\r\n  align-items:center;\r\n  text-align:center;\r\n\r\n  h4 {\r\n    font-size: 13px;\r\n    font-weight: 800;\r\n    color: black;\r\n  }\r\n`\r\n\r\nexport const WriteReCommentDiv = styled.div`\r\n  /* background : rgba(0,0,0,0.05); */\r\n  padding: 3%;\r\n  margin-bottom:1%;\r\n  display: grid;\r\n  grid-template-rows:  2fr 1fr;\r\n\r\n  h4 {\r\n    font-size: 13px;\r\n    font-weight: 800;\r\n    color: black;\r\n  }\r\n\r\n  textarea {\r\n    font-family: \"NanumBarunGothicSubset\" !important;\r\n    font-size: 0.8rem;\r\n    outline: none;\r\n    padding-bottom: 0.5rem;\r\n    margin-bottom: 1rem;\r\n    height: 20vh;\r\n    width: 100%;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    background-color: white;\r\n    border: none;\r\n  }\r\n`\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { useWriteReComment } from '../../customhooks/writerecomment';\r\nimport { WriteReCommentDiv, WriteReCommentButton, UpperDiv, UnderDiv, SmallTextDiv } from './style';\r\n\r\nconst WriteReComment = ( ) =>{\r\n    const { error, onChangeReComment, onSubmitReComment } = useWriteReComment()\r\n\r\n    return (\r\n        <WriteReCommentDiv>\r\n            <UpperDiv>\r\n                <textarea autoComplete=\"content\" name=\"content\" placeholder=\"내용\" onChange={(e)=> onChangeReComment(e)}/>\r\n                <h4 className=\"errormsg\">{error}</h4>\r\n            </UpperDiv>\r\n            <UnderDiv>\r\n                <SmallTextDiv>\r\n                    <div>\r\n                        <input autoComplete=\"new-password\" name=\"name\" placeholder=\"닉네임\" onChange={(e)=> onChangeReComment(e)}/>\r\n                    </div>\r\n                    <div>\r\n                        <input autoComplete=\"new-password\" name=\"password\" type=\"password\" placeholder=\"비밀번호\" onChange={(e)=> onChangeReComment(e)} />\r\n                    </div>\r\n                </SmallTextDiv>\r\n                <div>\r\n                    <WriteReCommentButton onClick={onSubmitReComment}><h4>등록</h4></WriteReCommentButton>\r\n                </div>            \r\n            </UnderDiv>\r\n        </WriteReCommentDiv>\r\n    )\r\n}\r\n\r\nexport default WriteReComment","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, ChangeEvent } from \"react\";\r\nimport { RootState } from \"../module\";\r\nimport { postWriteReComment, changeWriteReComment, cleanWriteReComments } from \"../module/writerecomment\";\r\nimport { postComments } from \"../module/postcomments\";\r\n\r\nexport function useWriteReComment () {\r\n    const { writerecomment, data, error, loading } = useSelector((state: RootState) => state.writerecomment);\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect( ()=>{\r\n        dispatch(changeWriteReComment({ key: \"postId\", value: window.location.pathname }))\r\n    },[])\r\n\r\n    // 처리 후 바꿔주기\r\n    useEffect( ()=>{\r\n        if (data && data.comments){\r\n            dispatch(postComments(data.comments))\r\n            dispatch(cleanWriteReComments())\r\n        }\r\n    },[dispatch, data])\r\n\r\n    // 인풋 박스 디바운싱\r\n    let timer: any\r\n    const onChangeReComment = (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n        const name  = e.target.name\r\n        const value =  e.target.value\r\n        if (timer){\r\n            clearTimeout(timer)\r\n        }\r\n        timer = setTimeout(() => {\r\n            if (name === 'content' || name === 'name' || name === 'password') {\r\n                dispatch(changeWriteReComment({ key: name, value: value }))\r\n            }\r\n        }, 200);\r\n    }\r\n\r\n    const onSubmitReComment = () =>{\r\n        dispatch(postWriteReComment(writerecomment))\r\n    }\r\n    return { writerecomment, data, error, loading, onChangeReComment, onSubmitReComment };\r\n}","import React from 'react';\r\nimport { ReCommentUserDiv } from './style';\r\n\r\ninterface IReCommentUser {\r\n    name: string\r\n}\r\n\r\nconst ReCommentUser = ({ name } : IReCommentUser) =>{\r\n    return (\r\n        <ReCommentUserDiv>\r\n            <h4>{name}</h4>\r\n        </ReCommentUserDiv>\r\n    )\r\n}\r\n\r\nexport default ReCommentUser","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { ChangeEvent, useEffect } from \"react\";\r\nimport { RootState } from \"../module\";\r\nimport { postComments } from \"../module/postcomments\";\r\nimport { changeRemoveReComment, cleanRemoveReComments, postRemoveReComment } from \"../module/removerecomment\";\r\n\r\nexport function useRemoveReComment() {\r\n  const { removerecomment, data, error, loading } = useSelector((state: RootState) => state.removerecomment);\r\n  const dispatch = useDispatch();\r\n  \r\n\r\n  let timer: any\r\n  const onChangeRemoveRe = (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n      const name  = e.target.name\r\n      const value =  e.target.value\r\n      if (timer){\r\n          clearTimeout(timer)\r\n      }\r\n      timer = setTimeout(() => {\r\n          if (name === 'recommentId' || name === 'password') {\r\n              dispatch(changeRemoveReComment({ key: name, value: value }))\r\n          }\r\n      }, 200);\r\n  }\r\n\r\n  // 삭제하기\r\n  const onGoRemoveReComment = (recommentId: string) =>{\r\n    let _removerecomment = { ...removerecomment }\r\n    _removerecomment.recommentId = recommentId\r\n    _removerecomment.postId = window.location.pathname\r\n    dispatch(postRemoveReComment(_removerecomment))\r\n  }\r\n  // 처리 후 바꿔주기\r\n  useEffect( ()=>{\r\n    if (data && data.comments){\r\n      dispatch(postComments(data.comments))\r\n      dispatch(cleanRemoveReComments())\r\n    }\r\n  },[dispatch, data])\r\n  return { removerecomment, data, error, loading, onChangeRemoveRe, onGoRemoveReComment };\r\n}","import React from 'react';\r\nimport { Cancel, Confirm, DeleteWrapperDiv, WriteReCommentButton } from './style';\r\nimport { useRemoveReComment } from '../../customhooks/removerecomment';\r\n\r\nconst DeleteReComment = ({ recommentId } : { recommentId: string }) =>{\r\n    const { error, onChangeRemoveRe, onGoRemoveReComment } = useRemoveReComment()\r\n    return (\r\n        <DeleteWrapperDiv>\r\n            <h4 className=\"errormsg\">{error}</h4>\r\n            <Confirm>\r\n                <div>\r\n                    <input autoComplete=\"new-password\" name=\"password\" type=\"password\" placeholder=\"비밀번호\" onChange={(e)=> onChangeRemoveRe(e)} />\r\n                </div>\r\n            </Confirm>\r\n            <Cancel>\r\n                <WriteReCommentButton onClick={() => onGoRemoveReComment(recommentId)}><h4>X</h4></WriteReCommentButton>\r\n            </Cancel>            \r\n        </DeleteWrapperDiv>\r\n    )\r\n}\r\n\r\nexport default DeleteReComment","import React from 'react';\r\n// import { IReComment } from 'src/server/models/comment';\r\n// import ReReCommentsComponent from '../recomments/ReReCommentsComponent';\r\nimport { \r\n    ReCommentItemDiv,\r\n    ReCommentNameDiv,\r\n    ReCommentItemUpperDiv,\r\n    CommenItemContentDiv,\r\n    CommenItemLowerDiv,\r\n    TimeDiv\r\n} from './style';\r\nimport { IComment, IReComment } from '../../module/postcomments';\r\nimport ReCommentUser from './ReCommentUser'\r\nimport DeleteReComment from './DeleteReComment';\r\n\r\ninterface IReCommentItem {\r\n    recomment : IReComment\r\n}\r\n\r\nconst ReCommentItem = ({ recomment } : IReCommentItem) =>{\r\n    const time = new Date(recomment.created)\r\n    return (\r\n        <div>\r\n            <ReCommentItemDiv>\r\n                <ReCommentNameDiv>\r\n                    <ReCommentUser name={recomment.name}/>\r\n                </ReCommentNameDiv>\r\n                <ReCommentItemUpperDiv>\r\n                    <TimeDiv>\r\n                        <h4>{time.toString()}</h4>\r\n                    </TimeDiv>\r\n                    <DeleteReComment recommentId={recomment.id + ''}/>\r\n                </ReCommentItemUpperDiv>\r\n                <CommenItemContentDiv>\r\n                    <h4>{recomment.content}</h4>\r\n                </CommenItemContentDiv>\r\n                <CommenItemLowerDiv>\r\n                </CommenItemLowerDiv>\r\n            </ReCommentItemDiv>\r\n        </div>\r\n        )\r\n    }\r\n\r\nexport default ReCommentItem","// import CommentItem from './CommentItem';\r\nimport React from 'react';\r\nimport { ReCommentDiv, ReCommentItemsDiv, ReCommentWriteDiv, ReCommentCountDiv } from './style';\r\nimport WriteReComment from './WriteReComment';\r\nimport ReCommentItem from './ReCommentItem';\r\n\r\nconst ReCommentsComponent = ( recomments : any) =>{\r\n    if (recomments){\r\n        return (\r\n            <ReCommentDiv>\r\n                <ReCommentCountDiv>\r\n                    <h4>{recomments.recomments.length} 개의 대댓글</h4>\r\n                </ReCommentCountDiv>\r\n                <WriteReComment/>\r\n                <ReCommentItemsDiv>\r\n                {recomments.recomments.map((recomment: any, index: any) => \r\n                    <ReCommentItem recomment={recomment} key={index}/>)}\r\n                </ReCommentItemsDiv>\r\n            </ReCommentDiv>)\r\n    } else {\r\n        return (\r\n            <ReCommentDiv></ReCommentDiv>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ReCommentsComponent","import React from 'react';\r\n// import { IComment } from 'src/server/models/comment';\r\n// import ReCommentsComponent from '../recomments/ReCommentsComponent';\r\n// import { GiCancel } from 'react-icons/gi'\r\nimport { \r\n    CommentItemDiv,\r\n    CommentNameDiv,\r\n    CommentItemUpperDiv,\r\n    CommenItemContentDiv,\r\n    CommenItemLowerDiv,\r\n    TimeDiv,\r\n    OpenTextDiv\r\n} from './style';\r\nimport { IComment } from 'src/module/postcomments';\r\nimport CommentUser from './CommentUser'\r\nimport DeleteComment from './DeleteComment';\r\nimport ReCommentsComponent from '../Recomment/ReCommentsComponent';\r\n\r\ninterface ICommentItem {\r\n    comment : IComment\r\n    openId: string\r\n    setOpen: (openId: string) => void\r\n}\r\n\r\nconst CommentItem = ({ comment, openId, setOpen } : ICommentItem) =>{\r\n    const time = new Date(comment.created)\r\n    return (\r\n        <div>\r\n            <CommentItemDiv>\r\n                <CommentNameDiv>\r\n                    <CommentUser name={comment.name}/>\r\n                </CommentNameDiv>\r\n                <CommentItemUpperDiv>\r\n                    <TimeDiv>\r\n                        <h4>{time.toString()}</h4>\r\n                    </TimeDiv>\r\n                    <DeleteComment commentId={comment.id + ''}/>\r\n                </CommentItemUpperDiv>\r\n                <CommenItemContentDiv>\r\n                    <h4>{comment.content}</h4>\r\n                </CommenItemContentDiv>\r\n                <CommenItemLowerDiv>\r\n                    <OpenTextDiv onClick={() => setOpen(comment.id)}>\r\n                        {openId === comment.id ? \r\n                            <h4>{comment.recomments.length} 개의 대댓글 / 닫기</h4> : \r\n                            <h4>{comment.recomments.length} 개의 대댓글 / 대댓글 열기</h4>}\r\n                    </OpenTextDiv>\r\n                </CommenItemLowerDiv>\r\n            </CommentItemDiv>\r\n            { openId === comment.id && <ReCommentsComponent recomments={comment.recomments}/>}\r\n        </div>\r\n        )\r\n    }\r\n\r\nexport default CommentItem","import React, { ChangeEvent } from 'react';\r\nimport { useWriteComment } from '../../customhooks/writecomment';\r\nimport { WriteCommentDiv, WriteCommentButton, UpperDiv, UnderDiv, SmallTextDiv } from './style';\r\n\r\n\r\ninterface WriteCommentComponent {\r\n    onChangeComment: (event: ChangeEvent<HTMLTextAreaElement>)=> void,\r\n    onSubmitComment: () => void,\r\n}\r\n\r\nconst WriteCommentComponent = ( ) =>{\r\n    const { error, onChangeComment, onSubmitComment } = useWriteComment()\r\n\r\n    return (\r\n        <WriteCommentDiv>\r\n            <UpperDiv>\r\n                <textarea autoComplete=\"content\" name=\"content\" placeholder=\"내용\" onChange={(e)=> onChangeComment(e)}/>\r\n                <h4 className=\"errormsg\">{error}</h4>\r\n            </UpperDiv>\r\n            <UnderDiv>\r\n                <SmallTextDiv>\r\n                    <div>\r\n                        <input autoComplete=\"new-password\" name=\"name\" placeholder=\"닉네임\" onChange={(e)=> onChangeComment(e)}/>\r\n                    </div>\r\n                    <div>\r\n                        <input autoComplete=\"new-password\" name=\"password\" type=\"password\" placeholder=\"비밀번호\" onChange={(e)=> onChangeComment(e)} />\r\n                    </div>\r\n                </SmallTextDiv>\r\n                <div>\r\n                    <WriteCommentButton onClick={onSubmitComment}><h4>등록</h4></WriteCommentButton>\r\n                </div>            \r\n            </UnderDiv>\r\n        </WriteCommentDiv>\r\n    )\r\n}\r\n\r\nexport default WriteCommentComponent","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, ChangeEvent } from \"react\";\r\nimport { RootState } from \"../module\";\r\nimport { postWriteComment, changeWriteComment, cleanWriteComments } from \"../module/writecomment\";\r\nimport { postComments } from \"../module/postcomments\";\r\n\r\nexport function useWriteComment () {\r\n    const { writecomment, data, error, loading } = useSelector((state: RootState) => state.writecomment);\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect( ()=>{\r\n        dispatch(changeWriteComment({ key: \"postId\", value: window.location.pathname }))\r\n    },[])\r\n\r\n    // 처리 후 바꿔주기\r\n    useEffect( ()=>{\r\n        if (data && data.comments){\r\n            dispatch(postComments(data.comments))\r\n            dispatch(cleanWriteComments())\r\n        }\r\n    },[dispatch, data])\r\n\r\n    // 인풋 박스 디바운싱\r\n    let timer: any\r\n    const onChangeComment = (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n        const name  = e.target.name\r\n        const value =  e.target.value\r\n        if (timer){\r\n            clearTimeout(timer)\r\n        }\r\n        timer = setTimeout(() => {\r\n            if (name === 'content' || name === 'name' || name === 'password') {\r\n                dispatch(changeWriteComment({ key: name, value: value }))\r\n            }\r\n        }, 200);\r\n    }\r\n\r\n    const onSubmitComment = () =>{\r\n        dispatch(postWriteComment(writecomment))\r\n    }\r\n    return { writecomment, data, error, loading, onChangeComment, onSubmitComment };\r\n}","import CommentItem from './CommentItem';\r\nimport React from 'react';\r\nimport { CommentDiv, CommentItemsDiv, CommentCountDiv } from './style';\r\nimport WriteComment from './WriteComment';\r\nimport { usePostComments } from '../../customhooks/postcomment';\r\n\r\nconst CommentsComponent = () =>{\r\n    const { comments, openId, setOpen } = usePostComments()\r\n    if (comments){\r\n        return (\r\n            <CommentDiv>\r\n                <CommentCountDiv>\r\n                    <h4>{comments.length} 개의 댓글 (아래 댓글이 달리면 삭제할 수 없습니다)</h4>\r\n                </CommentCountDiv>\r\n                <WriteComment/>\r\n                <CommentItemsDiv>\r\n                {comments.map((comment, index) => \r\n                    <CommentItem comment={comment} key={index} openId={openId} setOpen={setOpen}/>)}\r\n                </CommentItemsDiv>\r\n            </CommentDiv>)\r\n    } else {\r\n        return (\r\n            <CommentDiv></CommentDiv>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CommentsComponent","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../module\";\r\nimport { useEffect } from \"react\";\r\nimport { readPostComment, postComments, cleanPostComments, setOpenId } from \"../module/postcomments\";\r\nimport { changeWriteReComment } from \"../module/writerecomment\";\r\n\r\nexport function usePostComments() {\r\n    const { comments, data, openId } = useSelector((state: RootState) => state.postcomments);\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect( ()=>{\r\n        dispatch(readPostComment(window.location.pathname))\r\n    },[])\r\n\r\n    useEffect( ()=>{\r\n        if (data && data.comments){\r\n            dispatch(postComments(data.comments))\r\n        }\r\n        return () =>{\r\n            dispatch(cleanPostComments())\r\n        }\r\n    },[dispatch, data])\r\n\r\n    // 열기\r\n    const setOpen = (id: string) => {\r\n        if (id === openId){\r\n            dispatch(setOpenId(''))\r\n            dispatch(changeWriteReComment({ key: \"commentId\", value: '' }))\r\n        } else{\r\n            dispatch(setOpenId(id))\r\n            dispatch(changeWriteReComment({ key: \"commentId\", value: id }))\r\n        }\r\n    }\r\n\r\n\r\n    return { comments, openId, setOpen };\r\n}","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport Bio from \"../Bio\";\r\nimport {\r\n  PREFIX,\r\n} from \"../../constants\";\r\nimport \"./styled.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { BsCircle, BsCircleFill } from \"react-icons/bs\";\r\nimport Clearfix from \"../../components/Common/Clearfix\";\r\nimport {\r\n  PostWrapper,\r\n  ClearMobile,\r\n  Button,\r\n  CommentContent,\r\n  PostContent,\r\n  Visible,\r\n  VisibleTable,\r\n  ImageWrapper,\r\n  ButtonInline,\r\n  WarpVisible,\r\n  TocItemDiv,\r\n} from \"./styled\";\r\nimport PrintButton from \"../Common/PrintButton\";\r\nimport { usePostComments } from \"../../customhooks/postcomment\";\r\nimport CommentsComponent from \"../Comment/CommentsComponent\";\r\n\r\nexport interface IPostTemplate {\r\n  data: {\r\n    post: {\r\n      html: any,\r\n      frontmatter: { \r\n        title: string \r\n        date: string \r\n        images: string[]\r\n      },\r\n    },\r\n    posts: any,\r\n  },\r\n}\r\n\r\nconst formattedDate = ( str: string) =>{\r\n  const [date = \"\", time = \"\"] = str.split(\"T\");\r\n  return `${date} ${time.slice(0, 5)}`;\r\n}\r\n\r\nconst PostTemplate = ({\r\n  data: {\r\n    post: {\r\n      html,\r\n      frontmatter: { \r\n        title, \r\n        date, \r\n        images = [], \r\n      },\r\n    },\r\n  },\r\n} : IPostTemplate) => {\r\n\r\n  const [image = null] = images;\r\n  // 여기\r\n  const [tocEls, setTocEls] = useState<any>(null);\r\n  useEffect(() => {\r\n    const tocItems = document.querySelectorAll(\"h1, h2\");\r\n    tocItems.forEach((tocitem, index) => {\r\n      tocitem.classList.add(`toctextlink${index}`);\r\n    });\r\n    setTocEls(tocItems);\r\n    const observer = new IntersectionObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting) {\r\n          const tocitemall = document.querySelectorAll(\".tocitem\");\r\n          tocitemall.forEach((items) => items.classList.remove(\"isintersect\"));\r\n          const entryId = entry.target.className.replace(\"toctextlink\", \"\");\r\n          const tocItem = document.querySelector(`#tocitem${entryId}`);\r\n          const toctextitem = document.querySelector(`.toctextlink${entryId}`);\r\n          if (tocItem && toctextitem) {\r\n            tocItem.classList.add(\"isintersect\");\r\n          }\r\n        }\r\n      });\r\n    });\r\n    if (tocItems) {\r\n      tocItems.forEach((tocEl) => {\r\n        observer.observe(tocEl);\r\n      });\r\n    }\r\n    return () => observer && observer.disconnect();\r\n  }, []);\r\n\r\n  // 답\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const blankAnswer = useCallback(() => {\r\n    if (answer === \"\") {\r\n      setAnswer(\"hidden\");\r\n    } else {\r\n      setAnswer(\"\");\r\n    }\r\n  }, [answer]);\r\n\r\n  // 라인\r\n  const [lines, setLines] = useState(\"\");\r\n  const blankLines = useCallback(() => {\r\n    if (lines === \"\") {\r\n      setLines(\"hidden\");\r\n    } else {\r\n      setLines(\"\");\r\n    }\r\n  }, [lines]);\r\n\r\n  // 삭제선\r\n  const [dels, setDels] = useState(\"hidden\");\r\n  const blankDels = useCallback(() => {\r\n    if (dels === \"\") {\r\n      setDels(\"hidden\");\r\n    } else {\r\n      setDels(\"\");\r\n    }\r\n  }, [dels]);\r\n\r\n  // 스크롤하기\r\n  const onClick = (e : any) => {\r\n    const targettext : any = document.querySelector(\r\n      `.toctextlink${e.currentTarget.id.replace(\"tocitem\", \"\")}`\r\n    );\r\n    if (targettext){\r\n      window.scrollTo({\r\n        top: targettext.offsetTop - 200,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{`${PREFIX}${title}`}</title>\r\n        <meta name=\"og:title\" content={`${PREFIX}${title}`} />\r\n      </Helmet>\r\n      <PostWrapper>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <ImageWrapper>\r\n              <div className=\"jb-wrap\">\r\n                <div className=\"jb-image\">\r\n                  {image && (\r\n                    <img\r\n                      src={\r\n                        image.includes(\"//\")\r\n                          ? image\r\n                          : require(`~/resources/${image}`)\r\n                      }\r\n                      alt=\"\"\r\n                    />\r\n                  )}\r\n                </div>\r\n                <div className=\"jb-text\">{title}</div>\r\n              </div>\r\n            </ImageWrapper>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={2}\r\n            md={2}\r\n            sm={false}\r\n            xs={false}\r\n            className=\"stickyvisible\"\r\n          >\r\n            <Visible>\r\n              <Bio />\r\n              <WarpVisible>\r\n                <div className=\"lineblock\">\r\n                  <Button type=\"button\" onClick={blankAnswer}>\r\n                    <h4>블록가리기</h4>\r\n                  </Button>\r\n                </div>\r\n                <div className=\"lineblock\">\r\n                  <div className=\"lineblock\">\r\n                    <div className=\"smallcircle\">\r\n                      {answer == \"hidden\" ? <BsCircle /> : <BsCircleFill />}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </WarpVisible>\r\n              <WarpVisible>\r\n                <div className=\"lineblock\">\r\n                  <Button type=\"button\" onClick={blankLines}>\r\n                    <h4>밑줄가리기</h4>\r\n                  </Button>\r\n                </div>\r\n                <div className=\"lineblock\">\r\n                  <div className=\"lineblock\">\r\n                    <div className=\"smallcircle\">\r\n                      {lines == \"hidden\" ? <BsCircle /> : <BsCircleFill />}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </WarpVisible>\r\n              <WarpVisible>\r\n                <div className=\"lineblock\">\r\n                  <Button type=\"button\" onClick={blankDels}>\r\n                    <h4>요약가리기</h4>\r\n                  </Button>\r\n                </div>\r\n                <div className=\"lineblock\">\r\n                  <div className=\"lineblock\">\r\n                    <div className=\"smallcircle\">\r\n                      {dels == \"hidden\" ? <BsCircle /> : <BsCircleFill />}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </WarpVisible>\r\n            </Visible>\r\n          </Grid>\r\n\r\n          <Grid item lg={8} md={8} sm={12} xs={12}>\r\n            <ClearMobile>\r\n              <ButtonInline>\r\n                <Clearfix>\r\n                  <PrintButton />\r\n                </Clearfix>\r\n              </ButtonInline>\r\n            </ClearMobile>\r\n            <PostContent answer={answer} lines={lines} dels={dels}>\r\n              <h5>{formattedDate(date)} 시에 저장한 글입니다.</h5>\r\n              <hr style={{ marginBottom: \"50px\" }} />\r\n              <div\r\n                id=\"post-contents\"\r\n                dangerouslySetInnerHTML={{ __html: html }}\r\n                style={{ marginBottom: \"100px\" }}\r\n              />\r\n            </PostContent>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            lg={2}\r\n            md={2}\r\n            sm={false}\r\n            xs={false}\r\n            className=\"stickyvisible\"\r\n          >\r\n            <VisibleTable>\r\n              {tocEls &&\r\n                [...tocEls].map((item : any, index : any) => (\r\n                  <TocItemDiv\r\n                    key={index}\r\n                    className={`tocitem ${item.innerText}`}\r\n                    id={`tocitem${index}`}\r\n                    onClick={(e) => onClick(e)}\r\n                  >\r\n                    <h4>{item.innerText}</h4>\r\n                  </TocItemDiv>\r\n                ))}\r\n            </VisibleTable>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <CommentsComponent />\r\n        </Grid>\r\n      </PostWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostTemplate;\r\n","import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"~/components/layout\";\r\nimport Post from \"~/components/Post\";\r\n\r\nconst PostTemplate = (props) => (\r\n  <Layout {...props}>\r\n    <Post {...props} />\r\n  </Layout>\r\n);\r\n\r\nexport default PostTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query PostByPath($path: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n        homepage\r\n      }\r\n    }\r\n    post: markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n      id\r\n      html\r\n      tableOfContents\r\n      frontmatter {\r\n        title\r\n        path\r\n        images\r\n        category\r\n        tags\r\n        date\r\n        components {\r\n          rootId\r\n          fileName\r\n        }\r\n        tweets {\r\n          rootId\r\n          userId\r\n          tweetId\r\n        }\r\n        summary\r\n      }\r\n    }\r\n    posts: allMarkdownRemark(\r\n      filter: { frontmatter: { hide: { ne: true } } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            type\r\n            title\r\n            images\r\n            path\r\n            tags\r\n            date\r\n            summary\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useCallback } from \"react\";\r\nimport { FaPrint } from \"react-icons/fa\";\r\nimport { \r\n  Button, \r\n  PrintTitle,\r\n} from './styled'\r\n\r\nconst PrintButton = () => {\r\n    const printPage = useCallback(() => {\r\n      global.print();\r\n    }, []);\r\n    return (\r\n        <Button type=\"button\" onClick={printPage}>\r\n            <FaPrint />\r\n            <PrintTitle>PRINT</PrintTitle>\r\n        </Button>);\r\n};\r\n  \r\nexport default PrintButton;\r\n  ","import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  color: white;\r\n  background-image: linear-gradient(45deg, #8E2DE2, #4A00E0);\r\n  border-radius: 4px;\r\n  outline: 0;\r\n  border: 0;\r\n  box-shadow: 2px 2px 2px black;\r\n`;\r\n\r\nexport const PrintTitle = styled.div`\r\n  font-size: 15px;\r\n  font-weight: 800;\r\n  margin: 5px;\r\n  text-shadow: 3px 3px 30px white;\r\n`;","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;"],"sourceRoot":""}