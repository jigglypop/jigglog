{"version":3,"sources":["webpack:///./src/components/Common/CategoryItem/index.js","webpack:///./src/components/CategorizedList/index.jsx","webpack:///./src/templates/CategorizedList.jsx"],"names":["CategoryItem","styled","div","CategorizedList","data","location","useState","page","setPage","category","pathname","split","allPosts","getPosts","filter","c","node","frontmatter","decodeURI","postCount","length","posts","slice","CONTENT_PER_PAGE","categorySet","type","push","result","reduce","object","currentValue","key","results","i","PostsWrapper","name","content","ImageWrapper","className","src","moon","Grid","container","style","justifyContent","map","item","to","images","tags","path","otherProps","Card","Pagination","count","Math","ceil","size","onChange","event","value","listStyle","color","marginBottom","propTypes","PropTypes","shape","isRequired","pageQuery","CategorizedListTemplate","props"],"mappings":"ieA4BeA,E,UA1BMC,QAAOC,IAAV,+DAAGD,CAAH,6U,0gDC+KlB,IAAME,EAAkB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAAe,IACtBC,mBAAS,GADa,GACvCC,EADuC,KACjCC,EADiC,KAEnCC,EAFmC,EAEvBJ,EAASK,SAASC,MAAM,KAFD,MAUxCC,EAPUC,YAAST,GAAMU,QAC7B,gBAE6BC,EAF7B,EACEC,KACEC,YAAeR,SAFnB,OAIMS,UAAUT,KAAcM,KAG1BI,EAAYP,EAASQ,OACrBC,EAAQT,EAASU,OACpBf,EAAO,GAAKgB,mBACbhB,EAAOgB,oBAMHC,EAAc,GACpBX,YAAST,GAAMU,QAAO,oBAAGE,KAAQC,YAAeQ,EAA1B,EAA0BA,KAAMhB,EAAhC,EAAgCA,SAAhC,OACX,OAATgB,EAAgBD,EAAYE,KAAKjB,GAAY,MAE/C,IAAMkB,EAASH,EAAYI,QAAO,SAACC,EAAQC,GAKzC,OAJKD,EAAOC,KACVD,EAAOC,GAAgB,CAAEC,IAAKD,EAAcV,OAAQ,IAEtDS,EAAOC,GAAP,SACOD,IACN,IAEGG,EAAU,GAChB,IAAK,IAAIC,KAAKN,EACZK,EAAQN,KAAKC,EAAOM,IAEtB,OACE,oCACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,+BAAQhB,UAAUT,IAClB,0BAAM0B,KAAK,WAAWC,QAASlB,UAAUT,MAG3C,kBAAC4B,EAAA,EAAD,KACE,yBAAKC,UAAU,WACb,kBAAC,IAAD,KACE,yBAAKC,IAAKC,OAEZ,wBAAIF,UAAU,WAAWpB,UAAUT,IACnC,wBAAI6B,UAAU,YAAd,UAGJ,kBAACG,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAO,CAAEC,eAAgB,WACtCZ,EAAQa,KAAI,gBAAGd,EAAH,EAAGA,IAAH,EAAQX,OAAR,OACX,kBAACqB,EAAA,EAAD,CAAMK,MAAI,EAACf,IAAKA,GACd,kBAAC,OAAD,CAAMgB,GAAE,sBAAiBhB,EAAjB,OACN,kBAAC,EAAD,KACE,4BAAKA,UAOf,yBAAKO,UAAU,YACK,IAAjBjB,EAAMD,OAAe,0CAAuB,KAC5CC,EAAMwB,KACL,oBACE7B,KACEC,YAAe+B,EAFnB,EAEmBA,OAAQC,EAF3B,EAE2BA,KAAMC,EAFjC,EAEiCA,KAASC,EAF1C,qCAKE,kBAACC,EAAA,EAAD,GACErB,IAAKmB,EACLA,KAAMA,EACNF,OAAQA,EACRC,KAAMA,GACFE,OAIV,kBAACE,EAAA,EAAD,CACEC,MAAOC,KAAKC,KAAKrC,EAAYI,oBAC7BhB,KAAMA,EACNkD,KAAK,QACLC,SAtEW,SAACC,EAAOC,GAC3BpD,EAAQoD,IAsEAjB,MAAO,CACLkB,UAAW,OACXC,MAAO,UACPC,aAAc,eAS5B5D,EAAgB6D,UAAY,CAC1B5D,KAAM6D,IAAUC,MAAM,IAAIC,WAC1B9D,SAAU4D,IAAUC,MAAM,IAAIC,YAGjBhE,QC5QFiE,GAFEC,UANiB,SAAAC,GAAK,OACnC,kBAAC,IAAWA,EACV,kBAAC,EAAoBA,KAMH","file":"component---src-templates-categorized-list-jsx-4d5cf8c920609584b880.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst CategoryItem = styled.div`\r\n  background: linear-gradient(45deg, #4776e6, #8e54e9);\r\n  margin: 3px;\r\n  padding-left: 6px;\r\n  padding-right: 6px;\r\n  padding-bottom: 3px;\r\n  padding-top: 3px;\r\n\r\n  border-radius: 10px;\r\n  h1 {\r\n    font-size: 10px;\r\n    font-weight: 800;\r\n  }\r\n  @media (max-width: 1000px) {\r\n    margin: 2px;\r\n    padding-left: 4px;\r\n    padding-right: 4px;\r\n    padding-bottom: 2px;\r\n    padding-top: 2px;\r\n    h1 {\r\n      font-size: 8px;\r\n      font-weight: 800;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CategoryItem;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport Card from \"~/components/Common/Card\";\r\nimport getPosts from \"~/utils/getPosts\";\r\nimport { CONTENT_PER_PAGE } from \"~/constants\";\r\n\r\nimport MoonBackgroundAnimation from \"../base/common/LargeMoon.js\";\r\nimport moon from \"../../components/parallax/common/moon.webp\";\r\nimport styled from \"styled-components\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nimport { Link } from \"gatsby\";\r\nimport PostsWrapper from \"../Common/PostsWrapper\";\r\nimport ImageWrapper from \"../Common/ImageWrapper\";\r\nimport CategoryItem from \"../Common/CategoryItem\";\r\n// const PostsWrapper = styled.div`\r\n//   background: linear-gradient(90deg, #5c258d, #4389a2) !important;\r\n//   margin: auto;\r\n//   padding: 120px 100px 0;\r\n//   max-width: 100%;\r\n//   font-size: 0;\r\n\r\n//   @media (max-width: 1000px) {\r\n//     padding: 70px 16px 0;\r\n//   }\r\n\r\n//   &:before,\r\n//   &:after {\r\n//     display: block;\r\n//     content: \"\";\r\n//     clear: both;\r\n//   }\r\n\r\n//   h1 {\r\n//     margin: 0.67em 0;\r\n//     font-size: 32px;\r\n//   }\r\n\r\n//   time {\r\n//     margin: 1em 0;\r\n//     font-size: 14px;\r\n//   }\r\n//   .cardpage {\r\n//     padding: 0;\r\n//   }\r\n// `;\r\n\r\n// const ImageWrapper = styled.div`\r\n//   .jb-wrap {\r\n//     width: 400px;\r\n//     margin: 10px auto;\r\n//     position: relative;\r\n//   }\r\n//   .jb-wrap img {\r\n//     width: 100%;\r\n//     vertical-align: middle;\r\n//   }\r\n//   .jb-text {\r\n//     color: white;\r\n//     font-weight: 800;\r\n//     text-shadow: 2px 2px 20px gray;\r\n//     font-size: 35px;\r\n//     margin-top: -50px;\r\n//     text-align: center;\r\n//     position: absolute;\r\n//     top: 50%;\r\n//     left: 50%;\r\n//     transform: translate(-50%, -50%);\r\n//     animation: blink 1.2s ease-in-out infinite alternate;\r\n\r\n//     @keyframes blink {\r\n//       50% {\r\n//         opacity: 0.5;\r\n//       }\r\n//       100% {\r\n//         opacity: 1;\r\n//       }\r\n//     }\r\n//   }\r\n//   .jb-under {\r\n//     color: white;\r\n//     font-weight: 800;\r\n//     text-shadow: 2px 2px 20px gray;\r\n//     font-size: 25px;\r\n//     text-align: center;\r\n//     position: absolute;\r\n//     top: 50%;\r\n//     left: 50%;\r\n//     transform: translate(-50%, -50%);\r\n//   }\r\n//   .jb-tag {\r\n//     margin-top: 50px;\r\n//     color: white;\r\n//     z-index: 20;\r\n//     font-weight: 800;\r\n//     text-shadow: 2px 2px 20px gray;\r\n//     font-size: 12px;\r\n//   }\r\n//   h2 {\r\n//     margin: 2px;\r\n//   }\r\n//   @media (max-width: 1000px) {\r\n//     .jb-wrap {\r\n//       width: 300px;\r\n//       margin: 10px auto;\r\n//       position: relative;\r\n//     }\r\n//     .jb-wrap img {\r\n//       width: 100%;\r\n//       vertical-align: middle;\r\n//     }\r\n//     .jb-text {\r\n//       color: white;\r\n//       font-weight: 800;\r\n//       text-shadow: 2px 2px 20px gray;\r\n//       font-size: 20px;\r\n//       margin-top: -50px;\r\n//       text-align: center;\r\n//       position: absolute;\r\n//       top: 50%;\r\n//       left: 50%;\r\n//       transform: translate(-50%, -50%);\r\n//       animation: blink 1.2s ease-in-out infinite alternate;\r\n\r\n//       @keyframes blink {\r\n//         50% {\r\n//           opacity: 0.5;\r\n//         }\r\n//         100% {\r\n//           opacity: 1;\r\n//         }\r\n//       }\r\n//     }\r\n//     .jb-under {\r\n//       color: white;\r\n//       font-weight: 800;\r\n//       text-shadow: 2px 2px 20px gray;\r\n//       font-size: 15px;\r\n//       text-align: center;\r\n//       position: absolute;\r\n//       top: 50%;\r\n//       left: 50%;\r\n//       transform: translate(-50%, -50%);\r\n//     }\r\n//     .jb-tag {\r\n//       margin-top: 50px;\r\n//       color: white;\r\n//       z-index: 20;\r\n//       font-weight: 800;\r\n//       text-shadow: 2px 2px 20px gray;\r\n//       font-size: 10px;\r\n//     }\r\n//     h2 {\r\n//       margin: 2px;\r\n//     }\r\n//   }\r\n// `;\r\n// const TagItem = styled.div`\r\n//   background: linear-gradient(45deg, #4776e6, #8e54e9);\r\n//   margin: 5px;\r\n//   padding: 10px;\r\n//   border-radius: 5px;\r\n//   h1 {\r\n//     font-size: 15px;\r\n//     font-weight: 800;\r\n//   }\r\n//   @media (max-width: 1000px) {\r\n//     margin: 3px;\r\n//     padding: 3px;\r\n//     h1 {\r\n//       font-size: 8px;\r\n//       font-weight: 800;\r\n//     }\r\n//   }\r\n// `;\r\nconst CategorizedList = ({ data, location }) => {\r\n  const [page, setPage] = useState(1);\r\n  const [, , category] = location.pathname.split(\"/\");\r\n  const edgeSet = getPosts(data).filter(\r\n    ({\r\n      node: {\r\n        frontmatter: { category: c },\r\n      },\r\n    }) => decodeURI(category) === c\r\n  );\r\n  const allPosts = edgeSet;\r\n  const postCount = allPosts.length;\r\n  const posts = allPosts.slice(\r\n    (page - 1) * CONTENT_PER_PAGE,\r\n    page * CONTENT_PER_PAGE\r\n  );\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  // 카테고리셋\r\n  const categorySet = [];\r\n  getPosts(data).filter(({ node: { frontmatter: { type, category } } }) =>\r\n    type === null ? categorySet.push(category) : \"\"\r\n  );\r\n  const result = categorySet.reduce((object, currentValue) => {\r\n    if (!object[currentValue]) {\r\n      object[currentValue] = { key: currentValue, length: 0 };\r\n    }\r\n    object[currentValue][\"length\"]++;\r\n    return object;\r\n  }, {});\r\n\r\n  const results = [];\r\n  for (var i in result) {\r\n    results.push(result[i]);\r\n  }\r\n  return (\r\n    <>\r\n      <PostsWrapper>\r\n        <Helmet>\r\n          <title>{decodeURI(category)}</title>\r\n          <meta name=\"og:title\" content={decodeURI(category)} />\r\n        </Helmet>\r\n\r\n        <ImageWrapper>\r\n          <div className=\"jb-wrap\">\r\n            <MoonBackgroundAnimation>\r\n              <img src={moon} />\r\n            </MoonBackgroundAnimation>\r\n            <h1 className=\"jb-text\">{decodeURI(category)}</h1>\r\n            <h1 className=\"jb-under\">카테고리</h1>\r\n          </div>\r\n        </ImageWrapper>\r\n        <Grid container style={{ justifyContent: \"center\" }}>\r\n          {results.map(({ key, length }) => (\r\n            <Grid item key={key}>\r\n              <Link to={`/categories/${key}/1`}>\r\n                <CategoryItem>\r\n                  <h1>{key}</h1>\r\n                </CategoryItem>\r\n              </Link>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n\r\n        <div className=\"cardpage\">\r\n          {posts.length === 0 ? <div>No posts.</div> : null}\r\n          {posts.map(\r\n            ({\r\n              node: {\r\n                frontmatter: { images, tags, path, ...otherProps },\r\n              },\r\n            }) => (\r\n              <Card\r\n                key={path}\r\n                path={path}\r\n                images={images}\r\n                tags={tags}\r\n                {...otherProps}\r\n              />\r\n            )\r\n          )}\r\n          <Pagination\r\n            count={Math.ceil(postCount / CONTENT_PER_PAGE)}\r\n            page={page}\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n            style={{\r\n              listStyle: \"none\",\r\n              color: \"primary\",\r\n              marginBottom: \"100px\",\r\n            }}\r\n          />\r\n        </div>\r\n      </PostsWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nCategorizedList.propTypes = {\r\n  data: PropTypes.shape({}).isRequired,\r\n  location: PropTypes.shape({}).isRequired,\r\n};\r\n\r\nexport default CategorizedList;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '~/components/layout';\r\nimport CategorizedList from '~/components/CategorizedList';\r\n\r\nconst CategorizedListTemplate = props => (\r\n  <Layout {...props}>\r\n    <CategorizedList {...props} />\r\n  </Layout>\r\n);\r\n\r\nexport default CategorizedListTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query CategorizedListQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n        homepage\r\n      }\r\n    }\r\n    posts: allMarkdownRemark (\r\n      filter: { frontmatter: { hide: { ne: true } } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            type\r\n            title\r\n            category\r\n            images\r\n            path\r\n            tags\r\n            date\r\n            summary\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}