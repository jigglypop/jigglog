{"componentChunkName":"component---src-templates-post-jsx","path":"/[2020] 정보 처리 기사 실기 10-응용 SW 기초 기술 활용/","result":{"data":{"site":{"siteMetadata":{"title":"jigglog_post","author":"JIGGLYPOP","homepage":"https://d2a3hognnsk0cd.cloudfront.net/"}},"post":{"id":"69b92665-af3e-5917-b855-7b4b51e31836","html":"<blockquote>\n<p>정보처리기사 공부 후 정리 자료입니다. 정확하지 않을 수 있으니 꼭 책을 참고해서 공부하세요</p>\n</blockquote>\n<blockquote>\n<p>2020 정보 처리 기사 응용 SW 기초 기술 활용 요약 입니다. 정처기 공부를 할 때 활용하세요. </p>\n</blockquote>\n<h1 id=\"1--운영체제os-operating-system\" style=\"position:relative;\"><a href=\"#1--%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9Cos-operating-system\" aria-label=\"1  운영체제os operating system permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.  운영체제(OS; Operating System)</h1>\n<hr>\n<ul>\n<li>컴퓨터 시스템의 자원들을 효율적으로 관리하며, 사용 자가 컴퓨터를 편리하고 효과적으로 사용할 수 있도록 환경을 제공하는 여러 프로그램의 모임</li>\n<li><code class=\"language-text\">처리 능력</code> : 일정 시간 내에 시스템이 처리하는 일의 양</li>\n<li><code class=\"language-text\">반환 시간</code> : 시스템에 작업을 의뢰한 시간부터 처리가 완료될 때까지 걸린 시간</li>\n<li><code class=\"language-text\">사용 가능도</code> : 시스템을 사용할 필요가 있을 때 즉시 사용 가능한 정도</li>\n<li><code class=\"language-text\">신뢰도</code> : 시스템이 주어진 문제를 정확하게 해결하는 정도</li>\n<li>\n<p>기능</p>\n<ul>\n<li>프로세서, 기억장치, 입·출력장치, 파일 및 정보 등 의 자원 관리</li>\n<li>자원의 효과적인 경영 스케줄링 기능 제공</li>\n<li>사용자와 시스템 간의 편리한 인터페이스 제공</li>\n<li>시스템의 각종 하드웨어와 네트워크 관리·제어</li>\n<li>시스템의 오류 검사 및 복구, 데이터 관리, 데이터 및 자원 공유</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"2-windows의-특징\" style=\"position:relative;\"><a href=\"#2-windows%EC%9D%98-%ED%8A%B9%EC%A7%95\" aria-label=\"2 windows의 특징 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Windows의 특징</h1>\n<hr>\n<ul>\n<li>그래픽 사용자 인터페이스(GUI; Graphic User Interface) : 키보드로 명령어를 직접 입력하지 않고, 마우스로 아이콘이나 메뉴를 선택하여 모든 작업을 수행하는 방식</li>\n<li>선점형 멀티태스킹(Preemptive Multi-Tasking) : 동시에 여러 개의 프로그램을 실행하는 멀티태스킹을 하면서 운영체제가 각 작업의 CPU 이용 시간을 제어하여 응용 프로그램 실행중 문제가 발생하면 해당 프로그램을 강제 종료시키고 모든 시스템 자원을 반환하는 방식</li>\n<li>PnP(Plug and Play, 자동 감지 기능) : 컴퓨터 시스템에 프 린터나 사운드 카드 등의 하드웨어를 설치했을 때, 해 당 하드웨어를 사용하는 데 필요한 시스템 환경을 운영 체제가 자동으로 구성해 주는 기능</li>\n<li>OLE(Object Linking and Embedding) : 다른 여러 응용 프로그램에서 작성된 문자나 그림 등의 개체(Object)를 현재 작성 중인 문서에 자유롭게 연결(Linking)하거나 삽입(Embedding)하여 편집할 수 있게 하는 기능</li>\n</ul>\n<h1 id=\"3-unix--linux\" style=\"position:relative;\"><a href=\"#3-unix--linux\" aria-label=\"3 unix  linux permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. UNIX / LINUX</h1>\n<hr>\n<ul>\n<li>\n<p>UNIX</p>\n<ul>\n<li>1960년대 AT&#x26;T 벨(Bell) 연구소, MIT, General Electric이 공동 개발한 운영체제</li>\n<li>시분할 시스템(Time Sharing System)을 위해 설계 된 대화식 운영체제로, 소스가 공개된 개방형 시스템 (Open System)</li>\n<li>대부분 C 언어로 작성되어 있어 이식성이 높으며 장치, 프로세스 간의 호환성이 높음</li>\n<li>다중 사용자(Multi-User), 다중 작업(Multi- Tasking)을 지원</li>\n<li>트리(Tree) 구조의 파일 시스템</li>\n</ul>\n</li>\n<li>\n<p>LINUX</p>\n<ul>\n<li>1991년 리누스 토발즈(Linus Torvalds)가 UNIX를 기반으로 개발한 운영체제</li>\n<li>UNIX와 완벽하게 호환되고, 대부분의 특징이 UNIX 와 동일하다.</li>\n<li>프로그램 소스 코드가 무료로 공개</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"4-unix-시스템의-구성\" style=\"position:relative;\"><a href=\"#4-unix-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98-%EA%B5%AC%EC%84%B1\" aria-label=\"4 unix 시스템의 구성 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. UNIX 시스템의 구성</h1>\n<hr>\n<ul>\n<li>\n<p><code class=\"language-text\">커널(Kernel)</code></p>\n<ul>\n<li>UNIX의 가장 핵심적인 부분이</li>\n<li>하드웨어를 보호(캡슐화)하고, 프로그램들과 하드웨어 간의 인터페이스 역할을 담당한</li>\n<li>프로세스, 기억장치, 파일, 입·출력 관리, 프로세스 간 통신, 데이터 전송 및 변환 등 여러 가지 기능을 수행</li>\n<li>컴퓨터 부팅 시 주기억장치에 적재되어 상주하면서 실행</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">쉘(Shell)</code></p>\n<ul>\n<li>사용자의 명령어를 인식하여 프로그램을 호출하고, 명령을 수행하는 명령어 해석기</li>\n<li>시스템과 사용자 간의 인터페이스를 담당</li>\n<li>DOS의 COMMAND.COM과 같은 기능을 수행</li>\n<li>주기억장치에 상주하지 않고, 명령어가 포함된 파일 형태로 존재하며 보조기억장치에서 교체 처리가 가능</li>\n<li>종류 : Bourne Shell, C Shell, Korn Shell 등</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"5-windows의-cli-기본-명령어\" style=\"position:relative;\"><a href=\"#5-windows%EC%9D%98-cli-%EA%B8%B0%EB%B3%B8-%EB%AA%85%EB%A0%B9%EC%96%B4\" aria-label=\"5 windows의 cli 기본 명령어 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. Windows의 CLI 기본 명령어</h1>\n<hr>\n<ul>\n<li><code class=\"language-text\">dir</code> : 현재 디렉터리의 파일 목록 표시</li>\n<li><code class=\"language-text\">copy</code> : 파일 복사</li>\n<li><code class=\"language-text\">del</code> : 파일 삭제</li>\n<li><code class=\"language-text\">type</code> : 파일 내용 표시</li>\n<li><code class=\"language-text\">ren</code> : 파일 이름 변경</li>\n<li><code class=\"language-text\">md</code> : 디렉터리 생성</li>\n<li><code class=\"language-text\">cd</code> : 동일한 드라이브에서 디렉터리 위치 변경</li>\n<li><code class=\"language-text\">cls</code> : 화면 내용 지움</li>\n<li><code class=\"language-text\">attrib</code> : 파일 속성 변경</li>\n<li><code class=\"language-text\">find</code> : 파일에서 문자열 찾음</li>\n<li><code class=\"language-text\">chkdsk</code> : 디스크 상태 점검</li>\n<li><code class=\"language-text\">format</code> : 디스크 표면을 트랙과 섹터로 나누어 초기화</li>\n<li><code class=\"language-text\">move</code> : 파일 이동</li>\n</ul>\n<h1 id=\"6-unix--linux의-cli-기본-명령어\" style=\"position:relative;\"><a href=\"#6-unix--linux%EC%9D%98-cli-%EA%B8%B0%EB%B3%B8-%EB%AA%85%EB%A0%B9%EC%96%B4\" aria-label=\"6 unix  linux의 cli 기본 명령어 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. UNIX / LINUX의 CLI 기본 명령어</h1>\n<hr>\n<ul>\n<li><code class=\"language-text\">cat</code> : 파일 내용을 화면에 표시</li>\n<li><code class=\"language-text\">cd</code> : 디렉터리 위치 변경</li>\n<li><code class=\"language-text\">chmod</code> : 파일의 보호 모드를 설정하여 파일 사용 허가 지정</li>\n<li><code class=\"language-text\">chown</code> : 파일 소유자와 그룹 변경</li>\n<li><code class=\"language-text\">cp</code> : 파일 복사</li>\n<li><code class=\"language-text\">rm</code> : 파일 삭제</li>\n<li><code class=\"language-text\">find</code> : 파일 찾음</li>\n<li><code class=\"language-text\">fsck</code> : 파일 시스템 검사 및 보수</li>\n<li><code class=\"language-text\">kill</code> : PID(프로세스 고유 번호)를 이용하여 프로세스 종료</li>\n<li><code class=\"language-text\">killall</code> : 프로세스의 이름을 이용하여 프로세스 종료</li>\n<li><code class=\"language-text\">ls</code> : 현재 디렉터리의 파일 목록 표시</li>\n<li><code class=\"language-text\">mkdir</code> : 디렉터리 생성</li>\n<li><code class=\"language-text\">rmdir</code> : 디렉터리 삭제</li>\n<li><code class=\"language-text\">mv</code> : 파일 이동</li>\n<li><code class=\"language-text\">ps</code> : 현재 실행중인 프로세스 표시</li>\n<li><code class=\"language-text\">pwd</code> : 현재 작업중인 디렉터리 경로를 화면에 표시</li>\n<li><code class=\"language-text\">top</code> : 시스템의 프로세스와 메모리 사용 현황 표시</li>\n<li><code class=\"language-text\">who</code> : 현재 시스템에 접속해 있는 사용자 표시</li>\n</ul>\n<h1 id=\"7-기억장치-관리-전략\" style=\"position:relative;\"><a href=\"#7-%EA%B8%B0%EC%96%B5%EC%9E%A5%EC%B9%98-%EA%B4%80%EB%A6%AC-%EC%A0%84%EB%9E%B5\" aria-label=\"7 기억장치 관리 전략 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 기억장치 관리 전략</h1>\n<hr>\n<ul>\n<li>보조기억장치의 프로그램이나 데이터를 주기억장치에 적 재시키는 시기, 적재 위치 등을 지정하여 한정된 주기억 장치의 공간을 효율적으로 사용하기 위한 것이다.</li>\n<li><code class=\"language-text\">반입(Fetch) 전략</code>\n보조기억장치에 보관중인 프로그램이나 데이터를 언제 주기억장치로 적재할 것인지를 결정하는 전략, 요구 반입(Demand Fetch)과 예상반입(Anticipatory Fetch)이 있음</li>\n<li>\n<p><code class=\"language-text\">배치(Placement) 전략</code></p>\n<ul>\n<li>새로 반입되는 프로그램이나 데이터를 주기억장치의 어디에 위치시킬 것인지를 결정하는 전략</li>\n<li>최초 적합(First Fit) : 프로그램이나 데이터가 들어갈 수 있는 크기의 빈 영역 중에서 첫 번째 분할 영역에 배치 시키는 방법</li>\n<li>최적 적합(Best Fit) : 프로그램이나 데이터가 들어갈 수 있는 크기의 빈 영역 중에서 단편화를 가장 작게 남기 는 분할 영역에 배치시키는 방법</li>\n<li>최악 적합(Worst Fit) : 프로그램이나 데이터가 들어갈 수 있는 크기의 빈 영역 중에서 단편화를 가장 많이 남기 는 분할 영역에 배치시키는 방법</li>\n</ul>\n</li>\n<li><code class=\"language-text\">교체(Replacement) 전략</code>\n주기억장치의 모든 영역이 이미 사용중인 상태에서 새로 운 프로그램이나 데이터를 주기억장치에 배치하려고 할 때, 이미 사용되고 있는 영역 중에서 어느 영역을 교체 하여 사용할 것인지를 결정하는 전략으로, FIFO, OPT, LRU, LFU, NUR, SCR 등이 있다.</li>\n</ul>\n<h1 id=\"8-가상-기억장치virtual-memory\" style=\"position:relative;\"><a href=\"#8-%EA%B0%80%EC%83%81-%EA%B8%B0%EC%96%B5%EC%9E%A5%EC%B9%98virtual-memory\" aria-label=\"8 가상 기억장치virtual memory permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. 가상 기억장치(Virtual Memory)</h1>\n<hr>\n<ul>\n<li>보조기억장치(하드디스크)의 일부를 주기억장치처럼 사용하는 것으로, 용량이 작은 주기억장치를 큰 용량을 가진 것처럼 사용하는 것</li>\n<li><code class=\"language-text\">페이징(Paging) 기법</code> : 가상 기억장치에 보관되어 있는 프로그램과 주기억장치의 영역을 동일한 크기로 나눈 후 나눠진 프로그램(페이지)을 동일하게 나눠진 주기억장치의 영역에 적재시켜 실행하는 기법으로, 외부 단편화는 발생하지 않으나 내부 단편화는 발생 할 수 있음</li>\n<li><code class=\"language-text\">세그먼테이션(Segmentation) 기법</code> : 가상 기억장치에 보관되어 있는 프로그램을 다양한 크기의 논리적인 단위로 나눈 후 주기억장치에 적재시켜 실행시키는 기법, 내부 단편화는 발생하지 않으나 외부 단편화는 발생할 수 있음</li>\n</ul>\n<h1 id=\"9-가상기억장치-기타-관리-사항\" style=\"position:relative;\"><a href=\"#9-%EA%B0%80%EC%83%81%EA%B8%B0%EC%96%B5%EC%9E%A5%EC%B9%98-%EA%B8%B0%ED%83%80-%EA%B4%80%EB%A6%AC-%EC%82%AC%ED%95%AD\" aria-label=\"9 가상기억장치 기타 관리 사항 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9. 가상기억장치 기타 관리 사항</h1>\n<hr>\n<ul>\n<li>\n<p><code class=\"language-text\">Locality(국부성)</code></p>\n<ul>\n<li>프로세스가 실행되는 동안 주기억장치를 참조할 때 일부 페이지만 집중적으로 참조하는 성질이 있다는 이론</li>\n<li>시간 구역성 : 프로세스가 실행되면 서 하나의 페이지를 일정 시간 동안 집중적으로 액세스하는 현상</li>\n<li>공간 구역성 : 프로세스 실행 시 일정 위치의 페이지를 집중적으로 액세스하는 현상</li>\n</ul>\n</li>\n<li><code class=\"language-text\">워킹 셋</code> : 프로세스가 일정 시간 동안 자주 참조하는 페이지들의 집합</li>\n<li><code class=\"language-text\">페이지 부재</code>: 프로세스 실행 시 참조할 페이지가 주기억장치에 없는 현상으로, 페이지 부재가 일어나는 횟수를 페이지 부재 빈도라고 함</li>\n<li><code class=\"language-text\">스래싱</code> : 프로세스의 처리 시간보다 페이지 교체에 소요되는 시간이 더 많아지는 현상</li>\n</ul>\n<h1 id=\"10-페이지-교체-알고리즘\" style=\"position:relative;\"><a href=\"#10-%ED%8E%98%EC%9D%B4%EC%A7%80-%EA%B5%90%EC%B2%B4-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\" aria-label=\"10 페이지 교체 알고리즘 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10. 페이지 교체 알고리즘</h1>\n<hr>\n<ul>\n<li><code class=\"language-text\">OPT(OPTimal replacement, 최적 교체)</code> : 앞으로 가장 오랫 동안 사용하지 않을 페이지를 교체</li>\n<li><code class=\"language-text\">FIFO(First In First Out)</code> : 각 페이지가 주기억장치에 적재 될 때마다 그때의 시간을 기억시켜 가장 먼저 들어와서 가장 오래 있었던 페이지를 교체</li>\n<li><code class=\"language-text\">LRU(Least Recently Used)</code> : 최근에 가장 오랫동안 사용 하지 않은 페이지를 교체</li>\n<li><code class=\"language-text\">LFU(Least Frequently Used)</code> : 사용 빈도가 가장 적은 페이지를 교체</li>\n<li><code class=\"language-text\">NUR(Not Used Recently)</code> : 최근에 사용하지 않은 페이지 를 교체하는 기법으로, 참조 비트와 변형 비트가 사용됨</li>\n<li><code class=\"language-text\">SCR(Second Chance Replacement, 2차 기회 교체)</code> : 가장 오랫동안 주기억장치에 있던 페이지 중 자주 사용되는 페이지의 교체를 방지하기 위한 것으로, FIFO 기법의 단점을 보완하는 기법</li>\n</ul>\n<h1 id=\"11-프로세스process-관리\" style=\"position:relative;\"><a href=\"#11-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4process-%EA%B4%80%EB%A6%AC\" aria-label=\"11 프로세스process 관리 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11. 프로세스(Process) 관리</h1>\n<hr>\n<ul>\n<li>프로세스(= 작업(Job), 태스크(Task))는 프로세서에 의해 처리되는 사용자 프로그램, 시스템 프로그램, 즉 실행중인 프로그램을 의미</li>\n<li>\n<p>프로세스 상태 전이</p>\n<ul>\n<li><code class=\"language-text\">제출(Submit)</code> : 작업을 처리하기 위해 사용자가 작업을 시스템에 제출한 상태</li>\n<li><code class=\"language-text\">접수(Hold)</code> : 제출된 작업이 스풀 공간인 디스크의 할당 위치에 저장된 상태</li>\n<li><code class=\"language-text\">준비(Ready)</code> : 프로세스가 프로세서를 할당받기 위해 기다리고 있는 상태</li>\n<li><code class=\"language-text\">실행(Run)</code> : 준비상태 큐에 있는 프로세스가 프로세서 를 할당받아 실행되는 상태</li>\n<li><code class=\"language-text\">대기(Wait), 블록(Block)</code> : 프로세스에 입·출력 처리가 필요하면 현재 실행 중인 프로세스가 중단되고, 입·출력 처리가 완료될 때까지 대기하고 있는 상태</li>\n<li><code class=\"language-text\">종료(Terminated, Exit)</code> : 프로세스의 실행이 끝나고 프로세스 할당이 해제</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"12-비선점non-preemptive-스케줄링\" style=\"position:relative;\"><a href=\"#12-%EB%B9%84%EC%84%A0%EC%A0%90non-preemptive-%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81\" aria-label=\"12 비선점non preemptive 스케줄링 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>12. 비선점(Non-preemptive) 스케줄링</h1>\n<hr>\n<ul>\n<li>이미 할당된 CPU를 다른 프로세스가 강제로 빼앗아 사용할 수 없는 스케줄링 기법</li>\n<li><code class=\"language-text\">FIFO(First In First Out, 선입 선출) = FCFS(First Come First Service)</code> : 준비상태 큐에 도착한 순서에 따라 차례로 CPU를 할당하는 기법</li>\n<li><code class=\"language-text\">SJF(Shortest Job First, 단기 작업 우선)</code> : 준비상태 큐에서 기다리고 있는 프로세스들 중에서 실행 시간이 가장 짧은 프로세스에게 먼저 CPU를 할당하는 기법</li>\n<li>\n<p><code class=\"language-text\">HRN(Hightest Response-ratio Next)</code></p>\n<ul>\n<li>실행 시간이 긴 프로세스에 불리한 SJF 기법을 보완 하기 위한 것으로, 대기 시간과 서비스(실행) 시간을 이용하는 기법</li>\n<li>우선순위 계산식 : (대기 시간+서비스 시간) / 서비스 시간</li>\n</ul>\n</li>\n<li><code class=\"language-text\">기한부(Deadline)</code> : 프로세스에게 일정한 시간을 주어 그 시간 안에 프로세스를 완료하도록 하는 기법</li>\n<li><code class=\"language-text\">우선순위(Priority)</code> : 준비상태 큐에서 기다리는 각 프로세 스마다 우선순위를 부여하여 그 중 가장 높은 프로세스 에게 먼저 CPU를 할당하는 기법</li>\n</ul>\n<h1 id=\"13-선점preemptive-스케줄링\" style=\"position:relative;\"><a href=\"#13-%EC%84%A0%EC%A0%90preemptive-%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81\" aria-label=\"13 선점preemptive 스케줄링 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>13. 선점(Preemptive) 스케줄링</h1>\n<hr>\n<ul>\n<li>하나의 프로세스가 CPU를 할당받아 실행하고 있을 때 우선순위가 높은 다른 프로세스가 CPU를 강제로 빼앗아 사용할 수 있는 스케줄링 기법</li>\n<li>선점 우선순위 : 준비상태 큐의 프로세스들 중에서 우선 순위가 가장 높은 프로세스에게 먼저 CPU를 할당하는 기법</li>\n<li><code class=\"language-text\">SRT(Shortest Remaining Time)</code>(=선점 SJF 기법) : 비선점 스케줄링인 SJF 기법을 선점 형태로 변경한 기법으로,  이라고도 함</li>\n<li><code class=\"language-text\">라운드 로빈(RR; Round Robin)</code> : 시분할 시스템을 위해 고안된 방식으로, FCFS 기법과 같이 준비상태 큐에 먼저 들어온 프로세스가 먼저 CPU를 할당받지만 각 프로세스는 시간 할당량 동안만 실행한 후 실행이 완료되지 않으면 다음 프로세스에게 CPU를 넘겨주고 준비상태 큐의 가장 뒤로 배치됨</li>\n<li><code class=\"language-text\">다단계 큐(MQ; Multi-level Queue)</code> : 프로세스를 특정 그룹으로 분류할 수 있을 경우 그룹에 따라 각기 다른 준비상태 큐를 사용하는 기법</li>\n<li><code class=\"language-text\">다단계 피드백 큐(MFQ; Multi-level Feedback Queue)</code> : 특정 그룹의 준비상태 큐에 들어간 프로세스가 다른 준비 상태 큐로 이동할 수 없는 다단계 큐 기법을 준비상태 큐 사이를 이동할 수 있도록 개선한 기법</li>\n</ul>\n<h1 id=\"14-교착상태dead-lock\" style=\"position:relative;\"><a href=\"#14-%EA%B5%90%EC%B0%A9%EC%83%81%ED%83%9Cdead-lock\" aria-label=\"14 교착상태dead lock permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>14. 교착상태(Dead Lock)</h1>\n<hr>\n<ul>\n<li>상호 배제에 의해 나타나는 문제점으로, 둘 이상의 프 로세스들이 자원을 점유한 상태에서 서로 다른 프로세 스가 점유하고 있는 자원을 요구하며 무한정 기다리는 현상이다.</li>\n<li>\n<p>교착상태 발생의 필요 충분 조건</p>\n<ul>\n<li>상호 배제(Mutual Exclusion) : 한 번에 한 개의 프로세 스만이 공유 자원을 사용할 수 있어야 함</li>\n<li>점유와 대기(Hold and Wait) : 최소한 하나의 자원을 점 유하고 있으면서 다른 프로세스에 할당되어 사용되 고 있는 자원을 추가로 점유하기 위해 대기하는 프로 세스가 있어야 함</li>\n<li>비선점(Non-preemption) : 다른 프로세스에 할당된 자원 은 사용이 끝날 때까지 강제로 빼앗을 수 없어야 함</li>\n<li>환형 대기(Circular Wait) : 공유 자원과 공유 자원을 사 용하기 위해 대기하는 프로세스들이 원형으로 구성 되어 있어 자신에게 할당된 자원을 점유하면서 앞이 나 뒤에 있는 프로세스의 자원을 요구해야 함</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"15-교착상태-해결-방법\" style=\"position:relative;\"><a href=\"#15-%EA%B5%90%EC%B0%A9%EC%83%81%ED%83%9C-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"15 교착상태 해결 방법 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>15. 교착상태 해결 방법</h1>\n<ul>\n<li>예방 기법(Prevention)</li>\n<li>\n<p>교착상태가 발생하지 않도록 사전에 시스템을 제어하 는 방법으로, 교착상태 발생의 네 가지 조건 중에서 어 느 하나를 제거(부정)함으로써 수행된다.</p>\n<ul>\n<li>상호 배제(Mutual Exclusion) 부정 : 한 번에 여러 개의 프 로세스가 공유 자원을 사용할 수 있도록 함</li>\n<li>점유 및 대기(Hold and Wait) 부정 : 프로세스가 실행되기 전 필요한 모든 자원을 할당하여 프로세스 대기를 없 애거나 자원이 점유되지 않은 상태에서만 자원을 요구 하도록 함</li>\n<li>비선점(Non-preemption) 부정 : 자원을 점유하고 있는 프 로세스가 다른 자원을 요구할 때 점유하고 있는 자원을 반납하고, 요구한 자원을 사용하기 위해 기다리게 함</li>\n<li>환형 대기(Circular Wait) 부정 : 자원을 선형 순서로 분류 하여 고유 번호를 할당하고, 각 프로세스는 현재 점유 한 자원의 고유 번호보다 앞이나 뒤 어느 한쪽 방향으 로만 자원을 요구하도록 하는 것</li>\n</ul>\n</li>\n<li>회피 기법(Avoidance) : 교착상태가 발생할 가능성을 배제하지 않고 교착상태가 발생하면 적절히 피해나가는 방법으로, 주로 은행원 알고 리즘(Banker’s Algorithm)이 사용된다.</li>\n<li>발견(Detection) 기법 : 시스템에 교착 상태가 발생했는지 점검하여 교착 상태에 있는 프로세스와 자원을 발견하는 것으로, 자원 할당 그 래프 등을 사용한다.</li>\n<li>회복(Recovery) 기법 : 교착 상태를 일으킨 프로세스를 종료하거나 교착 상태의 프로세스에 할당된 자원을 선점하여 프로세스나 자원을 회복하는 것이다.</li>\n</ul>\n<h1 id=\"16-데이터베이스database\" style=\"position:relative;\"><a href=\"#16-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4database\" aria-label=\"16 데이터베이스database permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>16. 데이터베이스(Database)</h1>\n<hr>\n<ul>\n<li>특정 조직의 업무를 수행하는 데 필요한 상호 관련된 데이터들의 모임</li>\n<li>\n<p>데이터베이스의 정의</p>\n<ul>\n<li>통합된 데이터(Integrated Data) : 검색의 효율성을 위해 중복이 최소화된 데이터의 모임</li>\n<li>저장된 데이터(Stored Data) : 컴퓨터가 접근할 수 있는 저장 매체에 저장된 데이터</li>\n<li>운영 데이터(Operational Data) : 조직의 고유한 업무를 수행하는 데 존재 가치가 확실하고 없어서는 안 될 반드시 필요한 데이터</li>\n<li>공용 데이터(Shared Data) : 여러 응용 시스템들이 공동 으로 소유하고 유지하는 데이터</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"17-dbmsdatabase-management-system-데이터베이스-관리-시스템\" style=\"position:relative;\"><a href=\"#17-dbmsdatabase-management-system-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EA%B4%80%EB%A6%AC-%EC%8B%9C%EC%8A%A4%ED%85%9C\" aria-label=\"17 dbmsdatabase management system 데이터베이스 관리 시스템 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>17. DBMS(DataBase Management System, 데이터베이스 관리 시스템)</h1>\n<hr>\n<ul>\n<li>사용자와 데이터베이스 사이에서 사용자의 요구에 따라 정보를 생성해주고, 데이터베이스를 관리해 주는 소프트웨어</li>\n<li>\n<p>DBMS의 필수 기능</p>\n<ul>\n<li>정의(Definition) 기능 : 모든 응용 프로그램들이 요구하는 데이터 구조를 지원하기 위해 데이터베이스에 저장될 데이터의 형(Type)과 구조에 대한 정의, 이용방식, 제 약 조건 등을 명시하는 기능</li>\n<li>조작(Manipulation) 기능 : 데이터 검색, 갱신, 삽입, 삭제 등을 체계적으로 처리하기 위해 사용자와 데이터베이 스 사이의 인터페이스 수단을 제공하는 기능</li>\n<li>제어(Control) 기능 : 데이터베이스를 접근하는 갱신, 삽 입, 삭제 작업이 정확하게 수행되어 데이터의 무결성 이 유지되도록 제어하는 기능</li>\n</ul>\n</li>\n<li>\n<p>DBMS의 종류</p>\n<ul>\n<li>계층형 DBMS : 트리(Tree) 구조를 이용해서 데이터의 상호관계를 계층적으로 정의한 DBMS로, 개체 타입 간 에는 상위(Owner)와 하위(Member) 관계가 존재하며, 일 대 다(1:N) 대응 관계만 존재함</li>\n<li>망형 DBMS : 그래프를 이용해서 데이터 논리 구조를 표현한 DBMS로, 상위(Owner)와 하위(Member) 레코 드 사이에서 1:1, 1:N, N:M(다 대 다) 대응 관계를 모 두 지원함</li>\n<li>관계형 DBMS : 계층형과 망형 DBMS의 복잡한 구조를 단순화시킨 가장 널리 사용되는 DBMS로, 파일 구조처 럼 구성한 2차원적인 표(Table)를 하나의 DB로 묶어서 테이블 내에 있는 속성들 간의 관계(Relationship)를 설정하거나 테이블 간의 관계를 설정하여 이용함</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"18-분산-데이터베이스distributed-database\" style=\"position:relative;\"><a href=\"#18-%EB%B6%84%EC%82%B0-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4distributed-database\" aria-label=\"18 분산 데이터베이스distributed database permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>18. 분산 데이터베이스(Distributed Database)</h1>\n<hr>\n<ul>\n<li>논리적으로는 같은 시스템에 속하지만 물리적으로는 컴퓨터 네트워크를 통해 분산되어 있는 데이터베이스</li>\n<li><code class=\"language-text\">위치 투명성(Location Transparency)</code> : 접근하려는 데이터 베이스의 실제 위치를 알 필요 없이 단지 데이터베이스의 논리적인 명칭만으로 접근할 수 있음</li>\n<li><code class=\"language-text\">중복 투명성(Replication Transparency)</code> : 동일한 데이터가 여러 곳에 중복되어 있더라도 사용자는 마치 하나의 데 이터만 존재하는 것처럼 사용할 수 있고, 시스템은 자 동으로 여러 데이터에 대한 작업을 수행함</li>\n<li><code class=\"language-text\">병행 투명성(Concurrency Transparency)</code> : 분산 데이터베 이스와 관련된 다수의 트랜잭션들이 동시에 실행되더 라도 그 트랜잭션들의 수행 결과는 서로 영향을 받지 않음</li>\n<li><code class=\"language-text\">장애 투명성(Failure Transparency)</code> : 트랜잭션, DBMS, 네트워크, 컴퓨터 장애에도 불구하고 트랜잭션은 정확 하게 수행됨</li>\n</ul>\n<h1 id=\"19-고급-데이터베이스\" style=\"position:relative;\"><a href=\"#19-%EA%B3%A0%EA%B8%89-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4\" aria-label=\"19 고급 데이터베이스 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>19. 고급 데이터베이스</h1>\n<hr>\n<ul>\n<li><code class=\"language-text\">데이터 웨어하우스(Data Warehouse)</code> : 급증하는 다량의 데이터를 효과적으로 분석하여 정보화하고 이를 여러 계층의 사용자들이 효율적으로 사용할 수 있도록 한 데이터베이스</li>\n<li><code class=\"language-text\">데이터 마트(Data Mart)</code> : 전사적으로 구축된 데이터 웨 어하우스로부터 특정 주제나 부서 중심으로 구축된 소규모 단일 주제의 데이터 웨어하우스</li>\n<li><code class=\"language-text\">데이터 마이닝(Data Mining)</code> : 데이터 웨어하우스에 저장 된 데이터 집합에서 사용자의 요구에 따라 유용하고 가능성 있는 정보를 발견하기 위한 기법</li>\n<li><code class=\"language-text\">OLAP(Online Analytical Processing)</code> : 다차원으로 이루어 진 데이터로부터 통계적인 요약 정보를 분석하여 의사 결정에 활용하는 방식</li>\n<li><code class=\"language-text\">OLTP(Online Transaction Processing)</code> : 온라인 업무 처리 형태의 하나로 네트워크상의 여러 이용자가 실시간으로 데이터베이스의 데이터를 갱신하거나 검색하는 등의 단위 작업을 처리하는 방식</li>\n</ul>\n<h1 id=\"20-erentity-relationship-모델---er-도형\" style=\"position:relative;\"><a href=\"#20-erentity-relationship-%EB%AA%A8%EB%8D%B8---er-%EB%8F%84%ED%98%95\" aria-label=\"20 erentity relationship 모델   er 도형 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>20. ER(Entity Relationship) 모델 - ER 도형</h1>\n<p>ER 모델은 개념적 데이터 모델의 가장 대표적인 것으로, 1976년 피터 첸(Peter Chen)에 의해 제안되었으며, 다음 과 같은 도형들을 이용하여 현실 세계를 표현한다.</p>\n<p><a href=\"https://t1.daumcdn.net/cfile/blog/136343474E2C27C02E\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://t1.daumcdn.net/cfile/blog/136343474E2C27C02E</a></p>\n<h1 id=\"21-erentity-relationship-모델---관계-및-관계-타입\" style=\"position:relative;\"><a href=\"#21-erentity-relationship-%EB%AA%A8%EB%8D%B8---%EA%B4%80%EA%B3%84-%EB%B0%8F-%EA%B4%80%EA%B3%84-%ED%83%80%EC%9E%85\" aria-label=\"21 erentity relationship 모델   관계 및 관계 타입 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>21. ER(Entity Relationship) 모델 - 관계 및 관계 타입</h1>\n<hr>\n<ul>\n<li>관계 : 2개 이상의 개체 사이에 존재하는 연관성</li>\n<li>관계 타입 :  같은 관계들의 집합 또는 틀</li>\n<li>관계는 관계에 참여하는 개체 타입의 개수에 대한 차수와 관계에 참여하는 개체 어커런스의 개수에 대한 대응 카디널리티(Mapping Cardinality)를 갖음</li>\n<li>\n<p>차수에 따른 관계의 종류</p>\n<ul>\n<li><code class=\"language-text\">단항(Unary) 관계</code> : 관계에 참여하고 있는 개체 타입이 1개인 관계</li>\n<li><code class=\"language-text\">이항(Binary) 관계</code> : 관계에 참여하고 있는 개체 타입이 2개인 관계</li>\n<li><code class=\"language-text\">삼항(Ternary) 관계</code> : 관계에 참여하고 있는 개체 타입 이 3개인 관계</li>\n<li><code class=\"language-text\">n항(n-ary) 관계</code> : 관계에 참여하고 있는 개체 타입이 n개인 관계</li>\n</ul>\n</li>\n<li>\n<p>대응 카디널리티에 따른 관계의 종류</p>\n<ul>\n<li><code class=\"language-text\">1:1 관계</code> : 관계에 참여하고 있는 두 개체 타입이 모두 하나씩의 개체 어커런스를 갖는 관계</li>\n<li><code class=\"language-text\">1:N 관계</code> : 관계에 참여하고 있는 개체 타입 중 한 개체 타입은 여러 개의 개체 어커런스를 가질 수 있고, 다른 한 개체 타입은 하나의 개체 어커런스를 갖는 관계</li>\n<li><code class=\"language-text\">N:M 관계</code> : 관계에 참여하고 있는 두 개체 타입 모두 여러 개의 개체 어커런스를 가질 수 있는 관계</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"22-관계-데이터베이스의-relation-구조\" style=\"position:relative;\"><a href=\"#22-%EA%B4%80%EA%B3%84-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%9D%98-relation-%EA%B5%AC%EC%A1%B0\" aria-label=\"22 관계 데이터베이스의 relation 구조 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>22. 관계 데이터베이스의 Relation 구조</h1>\n<hr>\n<ul>\n<li>릴레이션 : 데이터들을 표(Table)의 형태로 표현한 것, 릴레이션 스키마(=구조를 나타냄)와 릴레이션 인스턴스(=실제 값들)로 구성</li>\n<li>\n<p>튜플(Tuple)</p>\n<ul>\n<li>각각의 행(= 레코드)</li>\n<li>속성의 모임으로 구성</li>\n<li>튜플의 수 = 카디널리티(Cardinality) = 기수 = 대응수</li>\n</ul>\n</li>\n<li>\n<p>속성(Attribute)</p>\n<ul>\n<li>각각의 열( = 데이터 항목 또는 데이터 필드)</li>\n<li>데이터베이스를 구성하는 가장 작은 논리적 단위</li>\n<li>개체의 특성을 기술.</li>\n<li>속성의 수 = 디그리(Degree) = 차수</li>\n</ul>\n</li>\n<li>\n<p>도메인</p>\n<ul>\n<li>하나의 애트리뷰트가 취할 수 있는 같은 타입의 원자값들의 집합</li>\n<li>실제 애트리뷰트 값이 나타날 때 그 값의 합법 여부를 시스템이 검사하는 데에도 이용</li>\n</ul>\n</li>\n<li>릴레이션 인스턴스 : 데이터 개체를 구성하고 있는 속성들에 데이터 타입이 정의되어 구체적인 데이터 값을 갖고 있는 것</li>\n</ul>\n<h1 id=\"23-er-모델을-관계형-데이터-모델로-변환\" style=\"position:relative;\"><a href=\"#23-er-%EB%AA%A8%EB%8D%B8%EC%9D%84-%EA%B4%80%EA%B3%84%ED%98%95-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AA%A8%EB%8D%B8%EB%A1%9C-%EB%B3%80%ED%99%98\" aria-label=\"23 er 모델을 관계형 데이터 모델로 변환 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>23. ER 모델을 관계형 데이터 모델로 변환</h1>\n<ul>\n<li>개념적 데이터 모델인 ER 모델을 논리적 데이터 모델인 릴레이션 스키마로 변환하는 것으로, 매핑 룰이라고도 함</li>\n<li>\n<p>개체 A, B와 관계 Y로 이루어진 ER 모델을 관계형 데이터 모델에서의 릴레이션 스키마로 변환하는 과정은 다음과 같다.</p>\n<ul>\n<li>개체 A, B는 각각 독립적인 릴레이션 A, B로 표현된 다. 또한, ER 도형에서의 각 개체의 속성들은 각 릴 레이션의 속성들로 정의되고, 기본키는 밑줄을 그어 표시한다.</li>\n<li>관계 Y가 1:1 관계 : 릴레이션 A의 기본키를 릴레이션 B의 외래키로 추가하거나 릴레이션 B의 기본키를 릴 레이션 A의 외래키로 추가하여 표현함</li>\n<li>관계 Y가 1:N 관계 : 릴레이션 A의 기본키를 릴레이션 B의 외래키로 추가하여 표현함</li>\n<li>관계 Y가 N:M 관계 : 릴레이션 A와 B의 기본키를 모두 포함한 별도의 릴레이션으로 표현함</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"24-키key의-개념-및-종류\" style=\"position:relative;\"><a href=\"#24-%ED%82%A4key%EC%9D%98-%EA%B0%9C%EB%85%90-%EB%B0%8F-%EC%A2%85%EB%A5%98\" aria-label=\"24 키key의 개념 및 종류 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>24. 키(Key)의 개념 및 종류</h1>\n<hr>\n<ul>\n<li>키(Key) :  데이터베이스에서 조건에 만족하는 튜플을 찾거나 순서대로 정렬할 때 기준이 되는 속성</li>\n<li>슈퍼키(Super Key) : 한 릴레이션 내에 있는 속성들 의 집합으로 구성된 키로, 릴레이션을 구성하는 모든 튜플에 대해 유일성은 만족하지만, 최소성은 만족하지 못함</li>\n<li>후보키(Candidate Key) : 릴레이션을 구성하는 속성들 중에서 튜플을 유일하게 식별하기 위해 사용되는 속성들의 부분집합으로, 유일성과 최소성을 모두 만족</li>\n<li>기본키(Primary Key) : 후보키 중에서 특별히 선정된 키 로 중복된 값과 NULL 값을 가질 수 없음</li>\n<li>대체키(Alternate Key) : 후보키 중에서 선정된 기본키를 제외한 나머지 후보키를 의미함</li>\n<li>외래키(Foreign Key) : 다른 릴레이션의 기본키를 참조하 는 속성 또는 속성들의 집합을 의미하며, 릴레이션 간 의 관계를 표현할 때 사용</li>\n</ul>\n<h1 id=\"25-무결성integrity\" style=\"position:relative;\"><a href=\"#25-%EB%AC%B4%EA%B2%B0%EC%84%B1integrity\" aria-label=\"25 무결성integrity permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>25. 무결성(Integrity)</h1>\n<hr>\n<ul>\n<li>데이터베이스에 저장된 데이터 값과 그것이 표현하는 현실 세계의 실제값이 일치하는 정확성을 의미</li>\n<li>개체 무결성(실체 무결성) : 기본 테이블의 기본키를 구성하는 어떤 속성도 Null 값이나 중복값을 가질 수 없다는 규정</li>\n<li>도메인 무결성(영역 무결성) : 주어진 속 성 값이 정의된 도메인에 속한 값이어야 한다는 규정</li>\n<li>참조 무결성 : 외래키 값은 Null이거 나 참조 릴레이션의 기본키 값과 동일해야 함. 즉 릴레 이션은 참조할 수 없는 외래키 값을 가질 수 없다는 규정</li>\n<li>사용자 정의 무결성 : 속성 값들이 사용자가 정의한 제약조건에 만족해야 한다는 규정</li>\n<li>NULL 무결성 : 릴레이션의 특정 속성 값이 NULL이 될 수 없도록 하는 규정</li>\n<li>고유 무결성 : 릴레이션의 특정 속성에 대해 각 튜플이 갖는 속성값들이 서로 달라야 한다는 규정</li>\n<li>키 무결성 : 하나의 릴레이션에는 적어도 하나의 키가 존재해야 한다는 규정</li>\n<li>관계 무결성 : 릴레이션에 어느 한 튜플의 삽입 가능 여부 또는 한 릴레이션과 다른 릴레이션의 튜플들 사이의 관계에 대한 적절성 여부를 지정한 규정</li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#1--%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9Cos-operating-system\">1.  운영체제(OS; Operating System)</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#2-windows%EC%9D%98-%ED%8A%B9%EC%A7%95\">2. Windows의 특징</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#3-unix--linux\">3. UNIX / LINUX</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#4-unix-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98-%EA%B5%AC%EC%84%B1\">4. UNIX 시스템의 구성</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#5-windows%EC%9D%98-cli-%EA%B8%B0%EB%B3%B8-%EB%AA%85%EB%A0%B9%EC%96%B4\">5. Windows의 CLI 기본 명령어</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#6-unix--linux%EC%9D%98-cli-%EA%B8%B0%EB%B3%B8-%EB%AA%85%EB%A0%B9%EC%96%B4\">6. UNIX / LINUX의 CLI 기본 명령어</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#7-%EA%B8%B0%EC%96%B5%EC%9E%A5%EC%B9%98-%EA%B4%80%EB%A6%AC-%EC%A0%84%EB%9E%B5\">7. 기억장치 관리 전략</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#8-%EA%B0%80%EC%83%81-%EA%B8%B0%EC%96%B5%EC%9E%A5%EC%B9%98virtual-memory\">8. 가상 기억장치(Virtual Memory)</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#9-%EA%B0%80%EC%83%81%EA%B8%B0%EC%96%B5%EC%9E%A5%EC%B9%98-%EA%B8%B0%ED%83%80-%EA%B4%80%EB%A6%AC-%EC%82%AC%ED%95%AD\">9. 가상기억장치 기타 관리 사항</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#10-%ED%8E%98%EC%9D%B4%EC%A7%80-%EA%B5%90%EC%B2%B4-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\">10. 페이지 교체 알고리즘</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#11-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4process-%EA%B4%80%EB%A6%AC\">11. 프로세스(Process) 관리</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#12-%EB%B9%84%EC%84%A0%EC%A0%90non-preemptive-%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81\">12. 비선점(Non-preemptive) 스케줄링</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#13-%EC%84%A0%EC%A0%90preemptive-%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81\">13. 선점(Preemptive) 스케줄링</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#14-%EA%B5%90%EC%B0%A9%EC%83%81%ED%83%9Cdead-lock\">14. 교착상태(Dead Lock)</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#15-%EA%B5%90%EC%B0%A9%EC%83%81%ED%83%9C-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\">15. 교착상태 해결 방법</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#16-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4database\">16. 데이터베이스(Database)</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#17-dbmsdatabase-management-system-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EA%B4%80%EB%A6%AC-%EC%8B%9C%EC%8A%A4%ED%85%9C\">17. DBMS(DataBase Management System, 데이터베이스 관리 시스템)</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#18-%EB%B6%84%EC%82%B0-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4distributed-database\">18. 분산 데이터베이스(Distributed Database)</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#19-%EA%B3%A0%EA%B8%89-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4\">19. 고급 데이터베이스</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#20-erentity-relationship-%EB%AA%A8%EB%8D%B8---er-%EB%8F%84%ED%98%95\">20. ER(Entity Relationship) 모델 - ER 도형</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#21-erentity-relationship-%EB%AA%A8%EB%8D%B8---%EA%B4%80%EA%B3%84-%EB%B0%8F-%EA%B4%80%EA%B3%84-%ED%83%80%EC%9E%85\">21. ER(Entity Relationship) 모델 - 관계 및 관계 타입</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#22-%EA%B4%80%EA%B3%84-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%9D%98-relation-%EA%B5%AC%EC%A1%B0\">22. 관계 데이터베이스의 Relation 구조</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#23-er-%EB%AA%A8%EB%8D%B8%EC%9D%84-%EA%B4%80%EA%B3%84%ED%98%95-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AA%A8%EB%8D%B8%EB%A1%9C-%EB%B3%80%ED%99%98\">23. ER 모델을 관계형 데이터 모델로 변환</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#24-%ED%82%A4key%EC%9D%98-%EA%B0%9C%EB%85%90-%EB%B0%8F-%EC%A2%85%EB%A5%98\">24. 키(Key)의 개념 및 종류</a></li>\n<li><a href=\"/%5B2020%5D%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%2010-%EC%9D%91%EC%9A%A9%20SW%20%EA%B8%B0%EC%B4%88%20%EA%B8%B0%EC%88%A0%20%ED%99%9C%EC%9A%A9/#25-%EB%AC%B4%EA%B2%B0%EC%84%B1integrity\">25. 무결성(Integrity)</a></li>\n</ul>","frontmatter":{"title":"[2020] 정보 처리 기사 실기 10-응용 SW 기초 기술 활용","path":"/[2020] 정보 처리 기사 실기 10-응용 SW 기초 기술 활용/","images":["images/1.jpg"],"category":"정보처리기사 실기 요약","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-17T21:00:00.000Z","components":null,"tweets":null,"summary":"2020 정보 처리 기사 응용 SW 기초 기술 활용 입니다. 정처기 공부를 할 때 활용하세요."}},"posts":{"edges":[{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 10-응용 SW 기초 기술 활용","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 10-응용 SW 기초 기술 활용/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-17T21:00:00.000Z","summary":"2020 정보 처리 기사 응용 SW 기초 기술 활용 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 10-응용 SW 기초 기술 활용","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 10-응용 SW 기초 기술 활용/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-17T21:00:00.000Z","summary":"2020 정보 처리 기사 응용 SW 기초 기술 활용 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 10-응용 SW 기초 기술 활용","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 10-응용 SW 기초 기술 활용/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-17T21:00:00.000Z","summary":"2020 정보 처리 기사 응용 SW 기초 기술 활용 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 10-응용 SW 기초 기술 활용","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 10-응용 SW 기초 기술 활용/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-17T21:00:00.000Z","summary":"2020 정보 처리 기사 응용 SW 기초 기술 활용 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 9-소프트웨어 보안 구축","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 9-소프트웨어 보안 구축/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-17T19:00:00.000Z","summary":"2020 정보 처리 기사 소프트웨어 보안 구축 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 8-SQL 응용","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 8-SQL 응용/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-17T12:00:00.000Z","summary":"2020 정보 처리 기사 SQL 응용 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 8-SQL 응용","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 8-SQL 응용/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-17T12:00:00.000Z","summary":"2020 정보 처리 기사 SQL 응용 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 6-화면 설계","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 6-화면 설계/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-16T17:00:00.000Z","summary":"2020 정보 처리 기사 화면 설계 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 7-애플리케이션 테스트 관리","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 7-애플리케이션 테스트 관리/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-16T17:00:00.000Z","summary":"2020 정보 처리 기사 애플리케이션 테스트 관리 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 5-서버 프로그램 구현","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 5-서버 프로그램 구현/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-16T06:31:00.000Z","summary":"2020 정보 처리 기사 서버 프로그램 구현 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 4-통합 구현","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 4-통합 구현/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-16T05:31:00.000Z","summary":"2020 정보 처리 기사 통합 구현 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 3-데이터 입출력 구현","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 3-데이터 입출력 구현/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-15T17:22:00.000Z","summary":"2020 정보 처리 기사 데이터 입출력 구현 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 2-요구 사항 확인","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 2-요구 사항 확인/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-15T17:21:00.000Z","summary":"2020 정보 처리 기사 요구 사항 확인 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[파이썬] itertools 에 대해서 알아보자","images":["images/1.jpg"],"path":"/[파이썬] itertools 에 대해서 알아보자/","tags":["파이썬","itertools","알고리즘"],"date":"2020-07-15T17:00:00.000Z","summary":"파이썬으로 순열, 조합을 빠르게 구해주는 라이브러리"}}},{"node":{"frontmatter":{"type":null,"title":"[파이썬] 파이썬을 이용한 이진탐색트리 구현","images":["images/1.jpg"],"path":"/[파이썬] 파이썬을 이용한 이진탐색트리 구현/","tags":["파이썬","알고리즘","이진탐색트리"],"date":"2020-07-06T22:06:00.000Z","summary":"파이썬을 이용한 이진탐색트리 구현"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(12)-제품 소프트웨어 패키징","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(12)-제품 소프트웨어 패키징/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-12T02:16:54.000Z","summary":"제품 소프트웨어 패키징"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(11)-응용 SW 기초 기술 활용","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(11)-응용 SW 기초 기술 활용/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-11T22:06:00.000Z","summary":"응용 SW 기초 기술 활용"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(10)-프로그래밍 언어 활용(3)","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(10)-프로그래밍 언어 활용(3)/","tags":["정보처리기사 실기","정보처리기사","프로그래밍 언어 활용"],"date":"2020-06-10T02:16:03.000Z","summary":"프로그래밍 언어 활용 03. 프로그래밍 예제 및 알고리즘"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(10)-프로그래밍 언어 활용(2)","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(10)-프로그래밍 언어 활용(2)/","tags":["정보처리기사 실기","정보처리기사","프로그래밍 언어 활용"],"date":"2020-06-10T02:16:02.000Z","summary":"프로그래밍 언어 활용 02. 언어 특성 활용하기"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(10)-프로그래밍 언어 활용(1)","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(10)-프로그래밍 언어 활용(1)/","tags":["정보처리기사 실기","정보처리기사","프로그래밍 언어 활용"],"date":"2020-06-10T02:16:01.000Z","summary":"프로그래밍 언어 활용 01. 기본 문법 활용하기"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(3)-소프트웨어 설계","images":["images/1.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(3)-소프트웨어 설계/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-06-10T02:01:00.000Z","summary":"소프트웨어 설계"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(5)-프로그래밍 언어 활용","images":["images/1.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(5)-프로그래밍 언어 활용/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-06-10T01:00:00.000Z","summary":"프로그래밍 언어 활용"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(4)-정보시스템 구축 관리","images":["images/1.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(4)-정보시스템 구축 관리/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-06-09T03:05:00.000Z","summary":"정보시스템 구축 관리"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(9)-소프트웨어 개발 보안 구축","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(9)-소프트웨어 개발 보안 구축/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-09T02:16:54.000Z","summary":"소프트웨어 개발 보안 구축"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(8)-SQL 응용(2)","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(8)-SQL 응용(2)/","tags":["정보처리기사 실기","정보처리기사","SQL 응용"],"date":"2020-06-08T18:06:02.000Z","summary":"SQL 응용 01. 절차형 SQL 작성하기"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(8)-SQL 응용(1)","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(8)-SQL 응용(1)/","tags":["정보처리기사 실기","정보처리기사","SQL 응용"],"date":"2020-06-08T18:06:01.000Z","summary":"SQL 응용 01. 절차형 SQL 작성하기"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(1)-데이터베이스 구축","images":["images/1.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(1)-데이터베이스 구축/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-06-08T05:00:00.000Z","summary":"데이터베이스 구축"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(7)-애플리케이션 테스트 관리","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(7)-애플리케이션 테스트 관리/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-07T22:06:00.000Z","summary":"애플리케이션 테스트 관리"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(6)-화면설계","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(6)-화면설계/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-06T02:00:00.000Z","summary":"화면설계"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(5)-인터페이스 구현","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(5)-인터페이스 구현/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-05T12:00:00.000Z","summary":"인터페이스 구현"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(4)-서버 프로그램 구현","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(4)-서버 프로그램 구현/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-04T15:15:00.000Z","summary":"서버 프로그램 구현"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(4)-서버 프로그램 구현","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(4)-서버 프로그램 구현/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-04T15:15:00.000Z","summary":"서버 프로그램 구현"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(4)-서버 프로그램 구현(3)","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(4)-서버 프로그램 구현(3)/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-04T15:15:00.000Z","summary":"서버 프로그램 구현"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(4)-서버 프로그램 구현(4)","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(4)-서버 프로그램 구현(4)/","tags":["정보처리기사 실기","정보처리기사","서버 프로그램 구현"],"date":"2020-06-04T15:15:00.000Z","summary":"서버 프로그램 구현"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(3)-통합 구현","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(3)-통합 구현/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-03T00:06:00.000Z","summary":"통합 구현"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(3)-통합 구현","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(3)-통합 구현/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-03T00:06:00.000Z","summary":"통합 구현"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(3)-통합 구현","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(3)-통합 구현/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-03T00:06:00.000Z","summary":"통합 구현"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(2)-데이터 입출력 구현","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(2)-데이터 입출력 구현/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-02T22:06:00.000Z","summary":"데이터 입출력 구현"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(1)-요구사항 확인","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(1)-요구사항 확인/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-01T18:06:00.000Z","summary":"요구사항 확인"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(2)-소프트웨어 개발","images":["images/1.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(2)-소프트웨어 개발/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-06-01T05:00:00.000Z","summary":"소프트웨어 개발"}}},{"node":{"frontmatter":{"type":null,"title":"백준 알고리즘","images":["images/1.jpg"],"path":"/백준 알고리즘/","tags":["알고리즘"],"date":"2018-01-10T00:00:00.000Z","summary":"백준 알고리즘"}}},{"node":{"frontmatter":{"type":"portfolio","title":"LANGUAGE TOGETHER","images":["languageTogether/images/languagetogether.png","languageTogether/images/languagetogether2.png","languageTogether/images/languagetogether3.png","languageTogether/images/languagetogether4.png","languageTogether/images/languagetogether5.png","languageTogether/images/languagetogether6.png","languageTogether/images/languagetogether7.png","languageTogether/images/languagetogether8.png","languageTogether/images/languagetogether9.png"],"path":"/portfolios/LANGUAGE TOGETHER/","tags":null,"date":"2018-01-01T00:00:00.000Z","summary":null}}},{"node":{"frontmatter":{"type":"portfolio","title":"MOVIE STAR","images":["moviestar/images/moviestar.png","moviestar/images/moviestar2.png","moviestar/images/moviestar3.png","moviestar/images/moviestar4.png"],"path":"/portfolios/MOVIE STAR/","tags":null,"date":"2018-01-01T00:00:00.000Z","summary":null}}},{"node":{"frontmatter":{"type":"resume","title":"Resume","images":null,"path":"/resume/","tags":null,"date":"2000-01-01T00:00:00.000Z","summary":null}}}]}},"pageContext":{}}}