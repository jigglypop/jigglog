{"componentChunkName":"component---src-templates-post-jsx","path":"/2020 정보처리기사 실기 요점 정리(4)-서버 프로그램 구현(3)/","result":{"data":{"site":{"siteMetadata":{"title":"jigglog","author":"JIGGLYPOP","homepage":"https://jigglog.netlify.app"}},"post":{"id":"6e5ae6b8-d89f-5e61-a353-a335fbd6a928","html":"<blockquote>\n<p>혼자 공부하면서 정리한 내용입니다. 자세한 내용은 책을 찾아서 공부하세요</p>\n<p>2020 정보 처리 기사 실기 요약 / 요점 - 4. 서버 프로그램 구현 (3)</p>\n</blockquote>\n<h1 id=\"03-서버-프로그램-구현\" style=\"position:relative;\"><a href=\"#03-%EC%84%9C%EB%B2%84-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EA%B5%AC%ED%98%84\" aria-label=\"03 서버 프로그램 구현 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>03. 서버 프로그램 구현</h1>\n<hr>\n<h2 id=\"1-서버-프로그램-구현\" style=\"position:relative;\"><a href=\"#1-%EC%84%9C%EB%B2%84-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EA%B5%AC%ED%98%84\" aria-label=\"1 서버 프로그램 구현 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) 서버 프로그램 구현</h2>\n<h3 id=\"1-서버-프로그램-구현의-개념\" style=\"position:relative;\"><a href=\"#1-%EC%84%9C%EB%B2%84-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EA%B5%AC%ED%98%84%EC%9D%98-%EA%B0%9C%EB%85%90\" aria-label=\"1 서버 프로그램 구현의 개념 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(1) 서버 프로그램 구현의 개념</h3>\n<h3 id=\"2-서버-프로그램-구현-절차\" style=\"position:relative;\"><a href=\"#2-%EC%84%9C%EB%B2%84-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EA%B5%AC%ED%98%84-%EC%A0%88%EC%B0%A8\" aria-label=\"2 서버 프로그램 구현 절차 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(2) 서버 프로그램 구현 절차</h3>\n<ul>\n<li>\n<p>Back End</p>\n<ul>\n<li>DTO/VO 구현</li>\n<li>SQL문 구현</li>\n<li>DAO 구현</li>\n<li>Service 구현</li>\n<li>Controller 구현</li>\n</ul>\n</li>\n<li>\n<p>Front End</p>\n<ul>\n<li>화면 구현</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-서버-프로그램의-세부-구현\" style=\"position:relative;\"><a href=\"#3-%EC%84%9C%EB%B2%84-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%98-%EC%84%B8%EB%B6%80-%EA%B5%AC%ED%98%84\" aria-label=\"3 서버 프로그램의 세부 구현 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(3) 서버 프로그램의 세부 구현</h3>\n<ul>\n<li>DTO(Data Transfer Object), VO(Value Object) 구현 : 화면에서 전달받은 회원 정보로 데이터베이스에 저장하는 객체를 구현</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JoinVO</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">String</span> id<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 회원 아이디</span>\n    <span class=\"token class-name\">String</span> password<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 회원 비밀번호</span>\n    <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 회원 이름</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>SQL 문 구현</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">---SQL 구현</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> CUSTOMER\n<span class=\"token punctuation\">(</span>\n\tID <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'아이디'</span><span class=\"token punctuation\">,</span>\n    PASSWORD <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'패스워드'</span><span class=\"token punctuation\">,</span>\n    NAME <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'이름'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>PK_ID<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'회원정보'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!-- MyBatis XML 구현 --></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mapper</span> <span class=\"token attr-name\">namespace</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>com.my.sql<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- 회원 이름을 통해 회원 테이블 조회--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>selectJoin<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>com.my.vo.JoinVO<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>com.my.vo.JoinVO<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        SELECT * FROM CUSTOMER\n        WHERE(name=#{name})\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span>\n    \n    <span class=\"token comment\">&lt;!-- 아이디, 패스워드, 이름 등을 회원 테이블에 저장--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>insert</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>insertJoin<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>com.my.vo.JoinVO<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    \tINSERT INTO CUSTOMER values(#{id}, #{pw}, #{name})\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>insert</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mapper</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li>데이터 접근 객체(DAO; Data Access Object 구현)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">JoinDAO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">selectJoin</span><span class=\"token punctuation\">(</span>joinVO vo<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">selectJoin</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.my.sql.selectJoin\"</span><span class=\"token punctuation\">,</span>joinVO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">insertJoin</span><span class=\"token punctuation\">(</span>joinVO vo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">insertJoin</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.my.sql.insertJoin\"</span><span class=\"token punctuation\">,</span>joinVO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>서비스(Service) 클래스 구현</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Service</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JoinService</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IMemberService</span><span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token class-name\">JoinDao</span> dao<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">insertJoin</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JoinVO</span> join<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">JoinVO</span> member <span class=\"token operator\">=</span> dao<span class=\"token punctuation\">.</span><span class=\"token function\">selectJoin</span><span class=\"token punctuation\">(</span>join<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        dao<span class=\"token punctuation\">.</span><span class=\"token function\">insertJoin</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>컨트롤러(Controller) 클래스 구현</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CreateController</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HttpServlet</span><span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doPost</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> req<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> res<span class=\"token punctuation\">)</span> \n        <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">JoinVO</span> vo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JoinVO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">JoinDAO</span> dao <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JoinDAO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">PrintWriter</span> out <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token class-name\">String</span> result<span class=\"token punctuation\">;</span>\n        vo<span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        vo<span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        vo<span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SimpleDateFormat</span> sdf <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleDateFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yyyymmdd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Date</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span>\n            date <span class=\"token operator\">=</span> sdf<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"year\"</span><span class=\"token punctuation\">)</span> \n                   <span class=\"token operator\">+</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">+</span> req<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"month\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                   <span class=\"token operator\">+</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">+</span> req<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ParseException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>입/출력 검증(Validation) 로직 구현</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CreateController</span> <span class=\"token keyword\">extends</span> httpServlet <span class=\"token punctuation\">{</span>\n\t<span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doPost</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> req<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> res<span class=\"token punctuation\">)</span> \n        <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n        result <span class=\"token operator\">=</span> dao<span class=\"token punctuation\">.</span><span class=\"token function\">insertJoin</span><span class=\"token punctuation\">(</span>vo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">==</span> <span class=\"token string\">\"success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"회원가입 성공\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"회원가입 실패\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n     \n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>1) 서버개발 프레임워크</h4>\n<ul>\n<li>서버 개발은 웹어플리케이션의 로직을 구현할 서버 프로그램을 제작하여 WAS에 탑재하는 것</li>\n<li>\n<p>서버 개발 프레임워크의 대부분은 model-view-controller(MVC) 패턴을 기반으로 함</p>\n<ul>\n<li>Spring : JAVA 전자정부 표준 프레임워크의 기반 기술</li>\n<li>Node.js : JavaScript 기반, 실시간 입출력이 빈번한 애플리케이션에 적합</li>\n<li>Django : Python 컴포넌트의 재사용과 플러그인화 강조</li>\n<li>Codeigniter : PHP 인터페이스가 간편하며 서버자원을 적게 소모</li>\n<li>Ruby on Rails Puby : 테스트를 위한 웹서버 지원</li>\n</ul>\n</li>\n</ul>\n<h4>2) 프레임 워크의 특성</h4>\n<ul>\n<li>모듈화</li>\n<li>재사용성</li>\n<li>확장성</li>\n<li>제어의 역흐름 : 개발자가 관리,통제 해야하는 객체 제어권한을 프레임워크에 넘겨 생산성 향상</li>\n</ul>\n<h4>3) 서버 개발 과정</h4>\n<ul>\n<li>\n<p>DTO(Data Transfer Object)/ VO((Value Object) 구현 : DTO/VO 구현은 데이터 교환을 위해 사용할 객체를 생성하는 과정</p>\n<ul>\n<li>DTO : 데이터 교환을 위해 생성되는 객체</li>\n<li>VO : DTO와 동일하지만 읽기만 가능, 수정 불가</li>\n</ul>\n</li>\n<li>SQL 구현 : XML 파일로 저장하여 관리 가능, 중복 SQL문을 최소화, 유지보수 간편</li>\n<li>\n<p>DAO(Data Access Object) 구현 : 데이터베이스에 접근하고, SQL을 활용하여 데이터를 실제로 조작하는 코드 구현</p>\n<ul>\n<li>DAO : DB에 접근하여 데이터를 조회/생성/수정/삭제 작업을 수행하는 객체</li>\n</ul>\n</li>\n<li>Service 구현 : 사용자의 요청에 응답하기 위한 로직 구현</li>\n<li>Controller 구현 : 사용자의 요청에 적절한 서비스를 호출하여 그결과를 사용자에게 반환하는 코드 구현</li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/2020%20%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%A0%90%20%EC%A0%95%EB%A6%AC(4)-%EC%84%9C%EB%B2%84%20%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%20%EA%B5%AC%ED%98%84(3)/#03-%EC%84%9C%EB%B2%84-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EA%B5%AC%ED%98%84\">03. 서버 프로그램 구현</a></p>\n<ul>\n<li>\n<p><a href=\"/2020%20%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%A0%90%20%EC%A0%95%EB%A6%AC(4)-%EC%84%9C%EB%B2%84%20%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%20%EA%B5%AC%ED%98%84(3)/#1-%EC%84%9C%EB%B2%84-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EA%B5%AC%ED%98%84\">1) 서버 프로그램 구현</a></p>\n<ul>\n<li><a href=\"/2020%20%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%A0%90%20%EC%A0%95%EB%A6%AC(4)-%EC%84%9C%EB%B2%84%20%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%20%EA%B5%AC%ED%98%84(3)/#1-%EC%84%9C%EB%B2%84-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EA%B5%AC%ED%98%84%EC%9D%98-%EA%B0%9C%EB%85%90\">(1) 서버 프로그램 구현의 개념</a></li>\n<li><a href=\"/2020%20%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%A0%90%20%EC%A0%95%EB%A6%AC(4)-%EC%84%9C%EB%B2%84%20%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%20%EA%B5%AC%ED%98%84(3)/#2-%EC%84%9C%EB%B2%84-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EA%B5%AC%ED%98%84-%EC%A0%88%EC%B0%A8\">(2) 서버 프로그램 구현 절차</a></li>\n<li>\n<p><a href=\"/2020%20%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%A0%90%20%EC%A0%95%EB%A6%AC(4)-%EC%84%9C%EB%B2%84%20%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%20%EA%B5%AC%ED%98%84(3)/#3-%EC%84%9C%EB%B2%84-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%98-%EC%84%B8%EB%B6%80-%EA%B5%AC%ED%98%84\">(3) 서버 프로그램의 세부 구현</a></p>\n<ul>\n<li><a href=\"/2020%20%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%A0%90%20%EC%A0%95%EB%A6%AC(4)-%EC%84%9C%EB%B2%84%20%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%20%EA%B5%AC%ED%98%84(3)/#1-%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC\">1) 서버개발 프레임워크</a></li>\n<li><a href=\"/2020%20%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%A0%90%20%EC%A0%95%EB%A6%AC(4)-%EC%84%9C%EB%B2%84%20%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%20%EA%B5%AC%ED%98%84(3)/#2-%ED%94%84%EB%A0%88%EC%9E%84-%EC%9B%8C%ED%81%AC%EC%9D%98-%ED%8A%B9%EC%84%B1\">2) 프레임 워크의 특성</a></li>\n<li><a href=\"/2020%20%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%A0%90%20%EC%A0%95%EB%A6%AC(4)-%EC%84%9C%EB%B2%84%20%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%20%EA%B5%AC%ED%98%84(3)/#3-%EC%84%9C%EB%B2%84-%EA%B0%9C%EB%B0%9C-%EA%B3%BC%EC%A0%95\">3) 서버 개발 과정</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"2020 정보처리기사 실기 요점 정리(4)-서버 프로그램 구현(3)","path":"/2020 정보처리기사 실기 요점 정리(4)-서버 프로그램 구현(3)/","images":["images/1.jpg"],"category":"정보처리기사 실기","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-04T15:15:00.000Z","components":null,"tweets":null,"summary":"서버 프로그램 구현"}},"posts":{"edges":[{"node":{"frontmatter":{"type":"portfolio","title":"COLORBERRY","images":["ColorBerry/images/colorberry.png","ColorBerry/images/colorberry2.png","ColorBerry/images/colorberry3.png","ColorBerry/images/colorberry4.png","ColorBerry/images/colorberry5.png","ColorBerry/images/colorberry6.png","ColorBerry/images/colorberry7.png","ColorBerry/images/colorberry8.png"],"path":"/portfolios/COLORBERRY/","tags":null,"date":"2020-09-01T00:00:00.000Z","summary":null}}},{"node":{"frontmatter":{"type":null,"title":"[mobx] Next.js 에서 Mobx 사용하기","images":["images/2.jpg"],"path":"/[mobx] Next.js 에서 Mobx 사용하기/","tags":["mobx","next.js"],"date":"2020-08-21T01:00:00.000Z","summary":"mobx와 Next.js를 사용하기"}}},{"node":{"frontmatter":{"type":null,"title":"[opic] 오픽 주제 모음","images":["images/2.jpg"],"path":"/[opic] 오픽 주제 모음/","tags":["OPIC","오픽"],"date":"2020-08-10T01:00:00.000Z","summary":"오픽 주제 모음"}}},{"node":{"frontmatter":{"type":null,"title":"[Mobx] Mobx 사용하기","images":["images/mobx.jpg"],"path":"/[Mobx] Mobx 사용하기/","tags":["react","mobx"],"date":"2020-07-31T19:23:00.000Z","summary":"리액트로 mobx를 다뤄보기 시리즈입니다."}}},{"node":{"frontmatter":{"type":null,"title":"[리액트 3D] 리액트 + three.js 시작하기","images":["images/1.jpg"],"path":"/[리액트 3D] 리액트 + three.js 시작하기/","tags":["react","three.js","3D"],"date":"2020-07-31T19:23:00.000Z","summary":"리액트로 three.js 를 다루어보기 시리즈, 3D 웹페이지를 만들기 위한 포스팅입니다."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 1-프로그래밍 언어 활용(3)","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 1-프로그래밍 언어 활용(3)/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-18T22:23:00.000Z","summary":"2020 정보 처리 기사 프로그래밍 언어 활용 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 1-프로그래밍 언어 활용(2)","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 1-프로그래밍 언어 활용(2)/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-18T22:21:00.000Z","summary":"2020 정보 처리 기사 프로그래밍 언어 활용 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 1-프로그래밍 언어 활용(1)","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 1-프로그래밍 언어 활용(1)/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-18T20:21:00.000Z","summary":"2020 정보 처리 기사 프로그래밍 언어 활용 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 11-제품 소프트웨어 패키징","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 11-제품 소프트웨어 패키징/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-17T23:03:00.000Z","summary":"2020 정보 처리 기사 제품 소프트웨어 패키징 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 10-응용 SW 기초 기술 활용(3)","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 10-응용 SW 기초 기술 활용(3)/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-17T21:03:00.000Z","summary":"2020 정보 처리 기사 응용 SW 기초 기술 활용 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 10-응용 SW 기초 기술 활용(2)","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 10-응용 SW 기초 기술 활용(2)/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-17T21:02:00.000Z","summary":"2020 정보 처리 기사 응용 SW 기초 기술 활용 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 10-응용 SW 기초 기술 활용(1)","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 10-응용 SW 기초 기술 활용(1)/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-17T21:01:00.000Z","summary":"2020 정보 처리 기사 응용 SW 기초 기술 활용 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 9-소프트웨어 보안 구축","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 9-소프트웨어 보안 구축/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-17T19:00:00.000Z","summary":"2020 정보 처리 기사 소프트웨어 보안 구축 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 8-SQL 응용","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 8-SQL 응용/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-17T12:45:00.000Z","summary":"2020 정보 처리 기사 SQL 응용 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 6-화면 설계","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 6-화면 설계/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-16T17:00:00.000Z","summary":"2020 정보 처리 기사 화면 설계 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 7-애플리케이션 테스트 관리","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 7-애플리케이션 테스트 관리/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-16T17:00:00.000Z","summary":"2020 정보 처리 기사 애플리케이션 테스트 관리 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 5-서버 프로그램 구현","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 5-서버 프로그램 구현/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-16T06:31:00.000Z","summary":"2020 정보 처리 기사 서버 프로그램 구현 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 4-통합 구현","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 4-통합 구현/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-16T05:31:00.000Z","summary":"2020 정보 처리 기사 통합 구현 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 3-데이터 입출력 구현","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 3-데이터 입출력 구현/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-15T17:22:00.000Z","summary":"2020 정보 처리 기사 데이터 입출력 구현 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[2020] 정보 처리 기사 실기 2-요구 사항 확인","images":["images/1.jpg"],"path":"/[2020] 정보 처리 기사 실기 2-요구 사항 확인/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-07-15T17:21:00.000Z","summary":"2020 정보 처리 기사 요구 사항 확인 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"[파이썬] itertools 에 대해서 알아보자","images":["images/4.jpg"],"path":"/[파이썬] itertools 에 대해서 알아보자/","tags":["파이썬","itertools","알고리즘"],"date":"2020-07-15T17:00:00.000Z","summary":"파이썬으로 순열, 조합을 빠르게 구해주는 라이브러리"}}},{"node":{"frontmatter":{"type":null,"title":"[백준 2042번] 구간 합","images":["images/baekjoon.png"],"path":"/[백준 2042번] 구간 합/","tags":["백준","세그먼트 트리","구간합"],"date":"2020-07-06T22:06:00.000Z","summary":"[백준 2042번] 구간 합 문제입니다."}}},{"node":{"frontmatter":{"type":null,"title":"[파이썬] 파이썬을 이용한 이진탐색트리 구현","images":["images/4.jpg"],"path":"/[파이썬] 파이썬을 이용한 이진탐색트리 구현/","tags":["파이썬","알고리즘","이진탐색트리"],"date":"2020-07-06T22:06:00.000Z","summary":"파이썬을 이용한 이진탐색트리 구현"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(12)-제품 소프트웨어 패키징","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(12)-제품 소프트웨어 패키징/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-12T02:16:54.000Z","summary":"제품 소프트웨어 패키징"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(11)-응용 SW 기초 기술 활용","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(11)-응용 SW 기초 기술 활용/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-11T22:06:00.000Z","summary":"응용 SW 기초 기술 활용"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(10)-프로그래밍 언어 활용(3)","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(10)-프로그래밍 언어 활용(3)/","tags":["정보처리기사 실기","정보처리기사","프로그래밍 언어 활용"],"date":"2020-06-10T02:16:03.000Z","summary":"프로그래밍 언어 활용 03. 프로그래밍 예제 및 알고리즘"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(10)-프로그래밍 언어 활용(2)","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(10)-프로그래밍 언어 활용(2)/","tags":["정보처리기사 실기","정보처리기사","프로그래밍 언어 활용"],"date":"2020-06-10T02:16:02.000Z","summary":"프로그래밍 언어 활용 02. 언어 특성 활용하기"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(10)-프로그래밍 언어 활용(1)","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(10)-프로그래밍 언어 활용(1)/","tags":["정보처리기사 실기","정보처리기사","프로그래밍 언어 활용"],"date":"2020-06-10T02:16:01.000Z","summary":"프로그래밍 언어 활용 01. 기본 문법 활용하기"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(3)-소프트웨어 설계","images":["images/2.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(3)-소프트웨어 설계/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-06-10T02:01:00.000Z","summary":"소프트웨어 설계"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(5)-프로그래밍 언어 활용","images":["images/2.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(5)-프로그래밍 언어 활용/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-06-10T01:00:00.000Z","summary":"프로그래밍 언어 활용"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(4)-정보시스템 구축 관리","images":["images/2.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(4)-정보시스템 구축 관리/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-06-09T03:05:00.000Z","summary":"정보시스템 구축 관리"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(9)-소프트웨어 개발 보안 구축","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(9)-소프트웨어 개발 보안 구축/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-09T02:16:54.000Z","summary":"소프트웨어 개발 보안 구축"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(8)-SQL 응용(2)","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(8)-SQL 응용(2)/","tags":["정보처리기사 실기","정보처리기사","SQL 응용"],"date":"2020-06-08T18:06:02.000Z","summary":"SQL 응용 01. 절차형 SQL 작성하기"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(8)-SQL 응용(1)","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(8)-SQL 응용(1)/","tags":["정보처리기사 실기","정보처리기사","SQL 응용"],"date":"2020-06-08T18:06:01.000Z","summary":"SQL 응용 01. 절차형 SQL 작성하기"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(1)-데이터베이스 구축","images":["images/2.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(1)-데이터베이스 구축/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-06-08T05:00:00.000Z","summary":"데이터베이스 구축"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(7)-애플리케이션 테스트 관리","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(7)-애플리케이션 테스트 관리/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-07T22:06:00.000Z","summary":"애플리케이션 테스트 관리"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(6)-화면설계","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(6)-화면설계/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-06T02:00:00.000Z","summary":"화면설계"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(5)-인터페이스 구현","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(5)-인터페이스 구현/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-05T12:00:00.000Z","summary":"인터페이스 구현"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(4)-서버 프로그램 구현","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(4)-서버 프로그램 구현/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-04T15:15:00.000Z","summary":"서버 프로그램 구현"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(4)-서버 프로그램 구현","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(4)-서버 프로그램 구현/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-04T15:15:00.000Z","summary":"서버 프로그램 구현"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(4)-서버 프로그램 구현(3)","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(4)-서버 프로그램 구현(3)/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-04T15:15:00.000Z","summary":"서버 프로그램 구현"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(4)-서버 프로그램 구현(4)","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(4)-서버 프로그램 구현(4)/","tags":["정보처리기사 실기","정보처리기사","서버 프로그램 구현"],"date":"2020-06-04T15:15:00.000Z","summary":"서버 프로그램 구현"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(3)-통합 구현","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(3)-통합 구현/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-03T00:06:00.000Z","summary":"통합 구현"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(3)-통합 구현","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(3)-통합 구현/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-03T00:06:00.000Z","summary":"통합 구현"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(3)-통합 구현","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(3)-통합 구현/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-03T00:06:00.000Z","summary":"통합 구현"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(2)-데이터 입출력 구현","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(2)-데이터 입출력 구현/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-02T22:06:00.000Z","summary":"데이터 입출력 구현"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 실기 요점 정리(1)-요구사항 확인","images":["images/1.jpg"],"path":"/2020 정보처리기사 실기 요점 정리(1)-요구사항 확인/","tags":["정보처리기사 실기","정보처리기사"],"date":"2020-06-01T18:06:00.000Z","summary":"요구사항 확인"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(2)-소프트웨어 개발","images":["images/2.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(2)-소프트웨어 개발/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-06-01T05:00:00.000Z","summary":"소프트웨어 개발"}}},{"node":{"frontmatter":{"type":"portfolio","title":"CAPTURE BLOG","images":["CaptureBlog/images/capture1.png","CaptureBlog/images/capture2.png","CaptureBlog/images/capture3.png","CaptureBlog/images/capture4.png","CaptureBlog/images/capture5.png","CaptureBlog/images/capture6.png"],"path":"/portfolios/CAPTURE BLOG/","tags":null,"date":"2020-01-01T00:00:00.000Z","summary":null}}},{"node":{"frontmatter":{"type":"portfolio","title":"LANGUAGE TOGETHER","images":["languageTogether/images/languagetogether.png","languageTogether/images/languagetogether2.png","languageTogether/images/languagetogether3.png","languageTogether/images/languagetogether4.png","languageTogether/images/languagetogether5.png","languageTogether/images/languagetogether6.png","languageTogether/images/languagetogether7.png","languageTogether/images/languagetogether8.png","languageTogether/images/languagetogether9.png"],"path":"/portfolios/LANGUAGE TOGETHER/","tags":null,"date":"2018-01-01T00:00:00.000Z","summary":null}}},{"node":{"frontmatter":{"type":"portfolio","title":"MOVIE STAR","images":["moviestar/images/moviestar.png","moviestar/images/moviestar2.png","moviestar/images/moviestar3.png","moviestar/images/moviestar4.png"],"path":"/portfolios/MOVIE STAR/","tags":null,"date":"2018-01-01T00:00:00.000Z","summary":null}}},{"node":{"frontmatter":{"type":"resume","title":"Resume","images":null,"path":"/resume/","tags":null,"date":"2000-01-01T00:00:00.000Z","summary":null}}}]}},"pageContext":{}}}