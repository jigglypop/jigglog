{"componentChunkName":"component---src-templates-post-tsx","path":"/2021 정보 처리 기사 실기 요약 10-응용-프로세스 관리/","result":{"data":{"site":{"siteMetadata":{"title":"jigglog","author":"JIGGLYPOP","homepage":"https://jigglog.netlify.app"}},"post":{"id":"6e87deda-fb5a-5785-b2fc-44fde8ada882","html":"<blockquote>\n<p>정보처리기사 공부 후 정리 자료입니다. 정확하지 않을 수 있으니 꼭 책을 참고해서 공부하세요</p>\n</blockquote>\n<blockquote>\n<p>2021 정보 처리 기사 실기 요약 10-응용-프로세스 관리 활용 요약 입니다. 정처기 공부를 할 때 활용하세요.</p>\n</blockquote>\n<h1>1. 프로세스</h1>\n<hr>\n<h3>1) 프로세스</h3>\n<ul>\n<li><em>프로세서에 의해 처리되는 사용자 프로그램이나 시스템 프로그램</em></li>\n<li>실행 중인 프로그램을 의미하며 작업 혹은 태스크라고도 함</li>\n<li><code class=\"language-text\">프로세스</code> : 컴퓨터에서 실행중인 프로그램</li>\n<li><code class=\"language-text\">프로세서</code> : CPU와 같은 처리기를 의미</li>\n</ul>\n<h3>2) 프로세스 제어 블록 PCB(Process Control Block)</h3>\n<h4>(1) 정의</h4>\n<ul>\n<li><em>운영체제가 프로세스에 대한 중요한 정보를 저장해 놓은 곳</em></li>\n<li>프로세스가 생성될 때마다 고유의 PCB를 생성하고 프로세스 완료 시 제거됨</li>\n</ul>\n<h4>(2) 프로세스 제어 블록의 정보</h4>\n<ul>\n<li>프로세스의 이름, 우선순위, 현재 상태</li>\n<li>주기억 장치의 주소, 프로그램 카운터, 레지스터 영역</li>\n<li>할당된 자원에 대한 정보, 계정 정보</li>\n</ul>\n<h3>3) 프로세스 상태 전이</h3>\n<p><img src=\"https://k.kakaocdn.net/dn/bEmmSV/btqCVC3gEVO/M12KKkK6iwuE0ZHTAxPnz0/img.png\" alt=\"img\" style=\"zoom: 25%;\">*</p>\n<ul>\n<li><code class=\"language-text\">제출</code> : 작업을 처리하기 위해 사용자가 작업을 시스템에 제출한 상태</li>\n<li><code class=\"language-text\">접수</code> : 제출된 작업이 스풀 공간인 디스크의 할당 위치에 저장한 상태</li>\n<li>\n<p><code class=\"language-text\">준비</code></p>\n<ul>\n<li>프로세스가 프로세서를 할당받기 위해 기다리고 있는 상태</li>\n<li>프로세스는 준비상태 큐에서 실행 준비</li>\n<li>Job 스케줄러에 의해 수행</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">실행</code></p>\n<ul>\n<li>준비상태 큐에 있는 프로세스가 프로세서를 할당받아 실행되는 상태</li>\n<li>프로세스 수행이 완료되기 전에 프로세스에게 주어진 할당 시간이 종료되면 프로세스는 준비 상태로 전이</li>\n<li>실행 중인 프로세스에 입출력 처리가 필요하면 실행중인 프로세스는 대기상태로 전이</li>\n<li>CPU 프로세스에 의해 수행</li>\n</ul>\n</li>\n<li><code class=\"language-text\">대기</code> : 프로세스에 입출력 처리가 필요하면 현재 실행중인 프로세스가 중단되고, 입출력 처리가 완료될 때까지 대기하고 있는 상태</li>\n<li><code class=\"language-text\">종료</code> : 프로세스의 실행이 끝나고 프로세스 할당이 해제된 상태</li>\n</ul>\n<h4>4) 프로세스 상태 전이 관련 용어</h4>\n<ul>\n<li><code class=\"language-text\">Dispatch</code> : 준비 상태에 대기하고 있는 프로세스 중 하나가 프로세스를 할당받아 실행 상태로 전이되는 과정</li>\n<li><code class=\"language-text\">Wake up</code> : 입출력 작업이 완료되어 프로세스가 대기 상태에서 준비 상태로 전이되는 과정</li>\n</ul>\n<h1>2. 스레드</h1>\n<hr>\n<h3>1) 스레드의 구성 및 특징</h3>\n<ul>\n<li>프로세스의 구성 : 제어 흐름 부분(실행 부분)과 실행 환경 부분</li>\n<li>스레드는 프로세스의 구성에서 실행 부분만 분리한 것으로 실행의 기본 단위, 프로세스 내에서 실행되는 흐름의 단위를 의미</li>\n<li>프로세스를 사용하는 기본 단위이며, 명령어를 독립적으로 실행할 수 있는 하나의 제어 흐름</li>\n<li>프로세스와 마찬가지로 스레드들도 CPU를 공유하며, 한순간에 오직 하나의 스레드만을 수행</li>\n<li>프로세스 스케줄링에 따른 프로세스 문맥 교환의 부담을 줄여서 성능을 향상하기 위한 프로세스의 다른 표현 방식</li>\n</ul>\n<h3>2) 단일 스레드와 다중 스레드 모델</h3>\n<ul>\n<li>단일 스레드 프로세스 모델 : 하나의 프로세스가 하나의 스레드로 구성</li>\n<li>다중 스레드 프로세스 모델 : 하나의 프로세스를 여라 스레드로 구성</li>\n<li>프로세스를 각각의 스페드와 고유의 레지스터, 스택으로 표현, 프로세스 주소 영역을 모든 스레드가 공유</li>\n<li>장점: 응답성, 자원 공유, 경제성, 다중 처리 구조</li>\n</ul>\n<h3>3) 병행 프로세스</h3>\n<h4>(1) 병행 프로세스</h4>\n<ul>\n<li>프로세스 여러 개가 수행 상태에 있는 것</li>\n</ul>\n<h4>(2) 임계 구역</h4>\n<ul>\n<li>다중 프로그래밍 운영체제에서 여러 개의 프로세스가 공유하는 데이터 및 자원에 대하여 어느 한 시점에서는 하나의 프로세스만 자원 또는 데이터를 사용하도록 지정된 공유 자원(영역)</li>\n<li>임계 구역에는 하나의 프로세스만 접근할 수 있으며, 해당 프로세스가 자원을 반납한 후에만 다른 프로세스가 자원이나 데이터를 사용할 수 있음</li>\n</ul>\n<h4>(3) 상호 배제(Mutual Exclusion)</h4>\n<ul>\n<li>특정 프로세스가 공유 자원을 사용하고 있을 경우 다른 프로세스가 해당 공유 자원을 사용하지 못하게 제어하는 기법</li>\n<li>여러 프로세스가 동시에 공유 자원을 사용하려 할 때 각 프로세스가 번갈아 가며 공유 자원을 사용하도록 하는 것으로 임계 구역을 유지하는 기법</li>\n</ul>\n<h4>(4) 세마포어</h4>\n<ul>\n<li>각 프로세스에 제어 신호를 전달하여 순서대로 작업을 수행하도록 하는 기법</li>\n<li>다익스트라가 제안하였으며, P와 V라는 2개의 연산에 의해서 동기화를 유지시키고, 상호 배제의 원리를 보장함</li>\n<li>S는 P와 V 연산으로만 접근 가능한 세마포어 변수로, 공유 자원의 개수를 나타내며 0과 1 혹은 0과 양의 값을 가질 수 있음</li>\n<li><code class=\"language-text\">P 연산</code> : 자원을 사용하려는 프로세스들의 진입 여부를 자원의 개수(S)를 통해 결정하는 것으로, wait 동작이라 함</li>\n<li><code class=\"language-text\">V 연산</code>: 대기 중인 프로세스를 깨우는 신호(Wake Up)로서, signal 동작이라 함</li>\n</ul>\n<h4>(5) 모니터</h4>\n<ul>\n<li>동기화를 구현하기 위한 특수 프로그램 기법으로 특정 공유 자원을 프로세스에게 할당하는데 필요한 데이터와 이 데이터를 처리하는 프로시저로 구성됨</li>\n<li>자료 추상화와 정보 은폐 개념을 기초로 하며 공유 자원을 할당하기 위한 병행성 구조로 이루어져 있음</li>\n<li>모니터 내의 공유 자원을 사용하려면 프로세스는 반드시 모니터의 진입부를 호출해야 함</li>\n<li>외부의 프로시저는 직접 액세스할 수 없으며, 모니터의 경계에서 상호 배제가 시행됨</li>\n<li>한순간에 하나의 프로세스만 진입하여 자원을 사용할 수 있음</li>\n</ul>\n<h1>3. 프로세스 스케줄링</h1>\n<hr>\n<h2>1) 비선점(Non-preemptive) 스케줄링</h2>\n<ul>\n<li><em>이미 할당된 CPU를 다른 프로세스가 강제로 빼앗아 사용할 수 없는 스케줄링 기법</em></li>\n</ul>\n<h3>1) FIFO(First In First Out, 선입 선출) = FCFS(First Come First Service)</h3>\n<ul>\n<li><em>대기 리스트에 먼저 도착한 프로세스 순서대로 CPU를 할당</em></li>\n<li>장점 : 알고리즘이 간단하고 구현하기 쉬움</li>\n<li>단점 : 먼저 도착한 것이 먼저 처리되어 공평성은 유지되지만 짧은 작업이 긴 작업을, 중요한 작업이 중요하지 않은 작업을 기다림   </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>프로세스</th>\n<th>도착시간</th>\n<th>실행시간</th>\n<th>우선순위</th>\n<th>시작시간</th>\n<th>대기시간(시작-도착)</th>\n<th>종료시간</th>\n<th>반환시간(종료-도착)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A</td>\n<td>0</td>\n<td>5</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td>5</td>\n<td>5</td>\n</tr>\n<tr>\n<td>B</td>\n<td>1</td>\n<td>2</td>\n<td>2</td>\n<td>5</td>\n<td>4</td>\n<td>7</td>\n<td>6</td>\n</tr>\n<tr>\n<td>C</td>\n<td>2</td>\n<td>8</td>\n<td>3</td>\n<td>7</td>\n<td>5</td>\n<td>15</td>\n<td>13</td>\n</tr>\n<tr>\n<td>D</td>\n<td>3</td>\n<td>4</td>\n<td>4</td>\n<td>15</td>\n<td>12</td>\n<td>19</td>\n<td>16</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>시간</th>\n<th>0-1</th>\n<th>1-2</th>\n<th>2-3</th>\n<th>3-4</th>\n<th>4-5</th>\n<th>5-6</th>\n<th>6-7</th>\n<th>7-8</th>\n<th>8-9</th>\n<th>9-10</th>\n<th>10-11</th>\n<th>11-12</th>\n<th>12-13</th>\n<th>13-14</th>\n<th>14-15</th>\n<th>15-16</th>\n<th>16-17</th>\n<th>17-18</th>\n<th>18-19</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A</td>\n<td><code class=\"language-text\">a=s</code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>B</td>\n<td></td>\n<td><del>a</del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>C</td>\n<td></td>\n<td></td>\n<td><del>a</del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>D</td>\n<td></td>\n<td></td>\n<td></td>\n<td><del>a</del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><code class=\"language-text\">s</code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>평균 대기 시간 = 각 프로세스의 대기 시간 합 / 프로세스 수 = (0 + 4 + 5 + 12) / 4 = 5.25</li>\n<li>평균 반환 시간 = 각 프로세스의 반환 시간 합 / 프로세스 수 = (5 + 6 + 13 + 16) / 4 = 10</li>\n</ul>\n<h3>2) SJF(Shortest Job First, 단기 작업 우선)</h3>\n<ul>\n<li><em>대기 리스트의 프로세스들 중 작업 시간이 가장 짧은 프로세스에 CPU를 할당</em></li>\n<li>FIFO보다 평균 대기 시간이 짧지만 실행 시간이 긴 작업의 경우 FIFO보다 대기 시간이 길어짐</li>\n<li>가장 짧은 평균 대기 시간 제공</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>프로세스</th>\n<th>도착시간</th>\n<th>실행시간</th>\n<th>우선순위</th>\n<th>시작시간</th>\n<th>대기시간(시작-도착)</th>\n<th>종료시간</th>\n<th>반환시간(종료-도착)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A</td>\n<td>0</td>\n<td>5</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td>5</td>\n<td>5</td>\n</tr>\n<tr>\n<td>B</td>\n<td>1</td>\n<td>2</td>\n<td>2</td>\n<td>5</td>\n<td>4</td>\n<td>7</td>\n<td>6</td>\n</tr>\n<tr>\n<td>C</td>\n<td>2</td>\n<td>8</td>\n<td>4</td>\n<td>11</td>\n<td>9</td>\n<td>19</td>\n<td>17</td>\n</tr>\n<tr>\n<td>D</td>\n<td>3</td>\n<td>4</td>\n<td>3</td>\n<td>7</td>\n<td>4</td>\n<td>11</td>\n<td>8</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>시간</th>\n<th>0-1</th>\n<th>1-2</th>\n<th>2-3</th>\n<th>3-4</th>\n<th>4-5</th>\n<th>5-6</th>\n<th>6-7</th>\n<th>7-8</th>\n<th>8-9</th>\n<th>9-10</th>\n<th>10-11</th>\n<th>11-12</th>\n<th>12-13</th>\n<th>13-14</th>\n<th>14-15</th>\n<th>15-16</th>\n<th>16-17</th>\n<th>17-18</th>\n<th>18-19</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A</td>\n<td><code class=\"language-text\">a=s</code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>B</td>\n<td></td>\n<td><del>a</del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>C</td>\n<td></td>\n<td></td>\n<td><del>a</del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><code class=\"language-text\">s</code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n</tr>\n<tr>\n<td>D</td>\n<td></td>\n<td></td>\n<td></td>\n<td><del>a</del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><code class=\"language-text\">s</code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>평균 대기 시간 = 각 프로세스의 대기 시간 합 / 프로세스 수 = (0 + 4 + 5 + 12) / 4 = 5.25</li>\n<li>평균 반환 시간 = 각 프로세스의 반환 시간 합 / 프로세스 수 = (5 + 6 + 13 + 16) / 4 = 10</li>\n</ul>\n<h3>3) HRN(Hightest Response Next)</h3>\n<ul>\n<li><em>실행 시간이 긴 프로세스에 불리한 SJF 기법을 보완 하기 위한 것으로, 대기 시간과 서비스(실행) 시간을 이용하는 기법</em></li>\n<li><em>우선순위 계산식 : (대기 시간 + 서비스 시간) / 서비스 시간</em></li>\n</ul>\n<h3>4) 기한부(Deadline)</h3>\n<ul>\n<li><em>프로세스에게 일정한 시간을 주어 그 시간 안에 프로세스를 완료하도록 하는 기법</em></li>\n<li>시스템은 프로세스에 할당한 정확한 시간을 추정해야 하며 이를 위해 사용자는 시스템이 요구한 프로세스에 대한 정확한 정보 제공</li>\n<li>실시간 운영체제에서 사용하며 정해진 시간 내에 결과가 나와야 하는 중요한 시스템에서 사용</li>\n</ul>\n<h2>2) 선점(Preemptive) 스케줄링</h2>\n<ul>\n<li>하나의 프로세스가 CPU를 할당받아 실행하고 있을 때 우선순위가 높은 다른 프로세스가 CPU를 강제로 빼앗아 사용할 수 있는 스케줄링 기법</li>\n<li>선점 우선순위 : 준비상태 큐의 프로세스들 중에서 우선 순위가 가장 높은 프로세스에게 먼저 CPU를 할당하는 기법</li>\n</ul>\n<h3>(1) RR(Round Robin 라운드 로빈)</h3>\n<ul>\n<li>FIFO를 선점형 스케줄링으로 변형한 기법</li>\n<li>FIFO형태로 대기 큐를 사용하지만 각 프로세스에게 시간 조각 할당</li>\n<li>할당된 시간 초과 시 대기 큐의 끝으로 이동하여 번갈아 가면서 실행</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>프로세스</th>\n<th>도착시간</th>\n<th>실행시간</th>\n<th>대기시간(시작-도착)</th>\n<th>종료시간</th>\n<th>반환시간(종료-도착)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A</td>\n<td>0</td>\n<td>5</td>\n<td>8</td>\n<td>13</td>\n<td>13</td>\n</tr>\n<tr>\n<td>B</td>\n<td>1</td>\n<td>2</td>\n<td>2</td>\n<td>5</td>\n<td>4</td>\n</tr>\n<tr>\n<td>C</td>\n<td>2</td>\n<td>8</td>\n<td>9</td>\n<td>19</td>\n<td>17</td>\n</tr>\n<tr>\n<td>D</td>\n<td>3</td>\n<td>4</td>\n<td>10</td>\n<td>17</td>\n<td>14</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>시간</th>\n<th>0-1</th>\n<th>1-2</th>\n<th>2-3</th>\n<th>3-4</th>\n<th>4-5</th>\n<th>5-6</th>\n<th>6-7</th>\n<th>7-8</th>\n<th>8-9</th>\n<th>9-10</th>\n<th>10-11</th>\n<th>11-12</th>\n<th>12-13</th>\n<th>13-14</th>\n<th>14-15</th>\n<th>15-16</th>\n<th>16-17</th>\n<th>17-18</th>\n<th>18-19</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A</td>\n<td><code class=\"language-text\">a=s</code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><code class=\"language-text\">s</code></td>\n<td><code class=\"language-text\"></code></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>B</td>\n<td></td>\n<td><del>a</del></td>\n<td><del></del></td>\n<td><code class=\"language-text\">s</code></td>\n<td><code class=\"language-text\"></code></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>C</td>\n<td></td>\n<td></td>\n<td><del>a</del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><code class=\"language-text\">s</code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><code class=\"language-text\">s</code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><del></del></td>\n<td><code class=\"language-text\">s</code></td>\n<td><code class=\"language-text\"></code></td>\n</tr>\n<tr>\n<td>D</td>\n<td></td>\n<td></td>\n<td></td>\n<td><del>a</del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><code class=\"language-text\">s</code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><code class=\"language-text\">s</code></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>평균 대기 시간 = 각 프로세스의 대기 시간 합 / 프로세스 수 = (0 + 4 + 5 + 12) / 4 = 5.25</li>\n<li>평균 반환 시간 = 각 프로세스의 반환 시간 합 / 프로세스 수 = (5 + 6 + 13 + 16) / 4 = 10</li>\n</ul>\n<h3></h3>\n<h3>(2) SRT(Shortest Remaining Time)</h3>\n<ul>\n<li>비선점 스케줄링인 SJF 기법을 선점 형태로 변경한 기법</li>\n<li>선점형이므로 프로세스 실행 중 수행 시간이 더 작은 프로세스가 들어오면 CPU를 선점 당함</li>\n<li>다음 프로세스는 잔여 수행 시간이 가장 짧은 것을 선택</li>\n<li>우선순위 결정에 잔여 실행 시간을 실시간으로 계산하는 추가 시간이 필요</li>\n<li>오버헤드(추가 시간)가 많이 발생하면 SJF가 더 나은 경우도 있음</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>프로세스</th>\n<th>도착시간</th>\n<th>실행시간</th>\n<th>대기시간(시작-도착)</th>\n<th>종료시간</th>\n<th>반환시간(종료-도착)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A</td>\n<td>0</td>\n<td>5</td>\n<td>2</td>\n<td>7</td>\n<td>7</td>\n</tr>\n<tr>\n<td>B</td>\n<td>1</td>\n<td>2</td>\n<td>0</td>\n<td>3</td>\n<td>2</td>\n</tr>\n<tr>\n<td>C</td>\n<td>2</td>\n<td>8</td>\n<td>9</td>\n<td>19</td>\n<td>17</td>\n</tr>\n<tr>\n<td>D</td>\n<td>3</td>\n<td>4</td>\n<td>4</td>\n<td>11</td>\n<td>8</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>시간</th>\n<th>0-1</th>\n<th>1-2</th>\n<th>2-3</th>\n<th>3-4</th>\n<th>4-5</th>\n<th>5-6</th>\n<th>6-7</th>\n<th>7-8</th>\n<th>8-9</th>\n<th>9-10</th>\n<th>10-11</th>\n<th>11-12</th>\n<th>12-13</th>\n<th>13-14</th>\n<th>14-15</th>\n<th>15-16</th>\n<th>16-17</th>\n<th>17-18</th>\n<th>18-19</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A</td>\n<td><code class=\"language-text\">a=s</code></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><code class=\"language-text\">a</code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>B</td>\n<td></td>\n<td><code class=\"language-text\">a=s</code></td>\n<td><code class=\"language-text\"></code></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>C</td>\n<td></td>\n<td></td>\n<td><del>a</del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><code class=\"language-text\">a</code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n</tr>\n<tr>\n<td>D</td>\n<td></td>\n<td></td>\n<td></td>\n<td><del>a</del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><del></del></td>\n<td><code class=\"language-text\">a</code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td><code class=\"language-text\"></code></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>평균 대기 시간 = 각 프로세스의 대기 시간 합 / 프로세스 수 = (0 + 4 + 5 + 12) / 4 = 5.25</li>\n<li>평균 반환 시간 = 각 프로세스의 반환 시간 합 / 프로세스 수 = (5 + 6 + 13 + 16) / 4 = 10</li>\n</ul>\n<h3>(3) MQ(Multi-level Queue, 다단계 큐)</h3>\n<ul>\n<li><em>여러 종류의 큐를 준비한 후 작업 유형별로 프로세스를 분류하고 큐를 이용하여 RR하는 방식으로 운영</em></li>\n<li>우선순위에 따라 시스템, 대화형, 대화형 편집, 일괄 처리, 사용자 프로세스로 구분하여 상위, 중위, 하위 단계로 큐를 배치</li>\n<li>프로세스의 큐(대기 리스트) 간 이동 불가</li>\n</ul>\n<h3>(4) MFQ(Multi-level Feedback Queue, 다단계 피드백 큐)</h3>\n<ul>\n<li><em>우선순위를 갖는 여러 큐를 준비하고, 수행 시간이 긴 프로세스일수록 낮은 우선순위를 갖도록 조정하여 낮은 우선순위 큐로 이동시키는 기법</em></li>\n<li>\n<p>유사점 :</p>\n<ul>\n<li>MQ와 MFQ는 여러 대기 리스트 사용</li>\n</ul>\n</li>\n<li>\n<p>차이점 :</p>\n<ul>\n<li>MQ는 특정 그룹의 큐에 들어간 프로세스가 다른 준비 상태의 큐로 이동 불가</li>\n<li>MFQ는 큐 사이를 이동 가능</li>\n</ul>\n</li>\n</ul>\n<h2>3) 교착상태(Dead Lock)</h2>\n<h3>(1) 교착 상태</h3>\n<ul>\n<li><em>상호 배제에 의해 나타나는 문제점으로, 둘 이상의 프로세스들이 자원을 점유한 상태에서 서로 다른 프로세스가 점유하고 있는 자원을 요구하며 무한정 기다리는 현상</em></li>\n</ul>\n<h3>(2) 교착상태 발생의 필요 충분 조건<del>(상점비환)</del></h3>\n<ul>\n<li><code class=\"language-text\">상호 배제</code> : 한번에 한 개의 프로세스만이 공유 자원을 사용할 수 있어야 함</li>\n<li><code class=\"language-text\">점유와 대기</code> : 최소한 하나의 자원을 점유하고 있으면서 다른 프로세스에 할당되어 사용되고 있는 자원을 추가로 점유하기 위해 대기하는 프로세스가 있어야 함</li>\n<li><code class=\"language-text\">비선점</code> : 다른 프로세스에 할당된 자원은 사용이 끝날 때까지 강제로 빼앗을 수 없어야 함</li>\n<li><code class=\"language-text\">환형 대기</code> : 공유 자원과 공유 자원을 사용하기 위해 대기하는 프로세스들이 원형으로 구성되어있어 자신에게 할당된 자원을 점유하면서 앞이나 뒤에있는 프로세스의 자원을 요구해야 함</li>\n</ul>\n<h3>(3) 교착 상태 해결 방법</h3>\n<ul>\n<li>\n<p><code class=\"language-text\">예방 기법</code> : 교착상태가 발생하지 않도록 사전에 시스템을 제어하는 방법으로, 교착상태 발생의 네가지 조건 중에서 어느 하나를 제거함으로써 수행</p>\n<ul>\n<li><em>상호 배제 부정</em> : 한 번에 여러 개의 프로세스가 공유 자원을 사용할 수 있도록 함</li>\n<li><em>점유 및 대기 부정</em> : 프로세스가 실행되기 전 필요한 모든 자원을 할당하여 프로세스 대기를 없애거나 자원이 점유되지 않은 상태에서만 자원을 요구하도록 함</li>\n<li><em>비선점 부정</em> : 자원을 점유하고 있는 프로세스가 다른 자원을 요구할 때 점유하고 있는 자원을 반납하고, 요구한 자원을 사용하기 위해 기다리게 함</li>\n<li><em>환형 대기 부정</em> : 자원을 선형 순서로 분류하여 고유 번호를 할당하고, 각 프로세스는 현재 점유한 자원의 고유 번호보다 앞이나 뒤 어느 한쪽 방향으로만 자원을 요구하도록 하는 것</li>\n</ul>\n</li>\n<li><code class=\"language-text\">회피 기법</code> : 교착상태가 발생할 가능성을 배제하지 않고 교착상태가 발생하면 적절히 피해나가는 방법으로, 주로 은행원 알고리즘이 사용</li>\n<li><code class=\"language-text\">발견 기법</code> : 시스템에 교착 상태가 발생했는지 점검하여 교착 상태에 있는 프로세스와 자원을 발견하는 것으로, 자원 할당 그래프 등을 사용</li>\n<li><code class=\"language-text\">회복 기법</code> : 교착 상태를 일으킨 프로세스를 종료하거나 교착 상태의 프로세스에 할당된 자원을 선점하여 프로세스나 자원을 회복하는 것</li>\n</ul>\n<h1>4. 기억 장치 관리</h1>\n<hr>\n<h2>1) 기억 장치 관리 전략의 개요</h2>\n<h3>(1) 저장장치 계층 구조의 특징</h3>\n<ul>\n<li>주기억장치는 각기 자신의 주소를 가지는 워드 또는 바이트들로 구성되어 주소를 이용하여 접근</li>\n<li>보조기억장치에 있는 프로그램이나 데이터는 CPU가 직접 액세스 할 수 없음</li>\n<li>보조기억장치에 있는 데이터는 주기억장치에 적재된 후 CPU에 의해 액세스</li>\n</ul>\n<h3>(2) 기억장치의 관리 전략의 개요</h3>\n<h4>(1) 반입(Fetch) 전략</h4>\n<ul>\n<li>보조기억장치에 보관중인 데이터를 언제 주기억장치에 적재할 것인지를 결정하는 전략</li>\n<li>요구 반입 : 실행중인 프로그램이 특정 프로그램이나 데이터 등의 참조를 요구할 때 적재</li>\n<li>예상 반입 : 실행중인 프로그램에 의해 참조될 프로그램이나 데이터를 미리 예상하여 적재</li>\n</ul>\n<h4>(2) 배치(Placement) 전략</h4>\n<ul>\n<li>새로 반입되는 데이터를 주기억장치의 어디에 위치시킬 것인지를 결정하는 전략</li>\n<li><code class=\"language-text\">최초 적합(First Fit)</code> : 배치가 가능한 크기의 빈 영역 중에서 첫 번째 분할 영역에 배치</li>\n<li><code class=\"language-text\">최적 적합(Best Fit)</code> : 배치가 가능한 크기의 빈 영역 중에서 단편화를 가장 적게 남기는 분할 영역에 배치</li>\n<li><code class=\"language-text\">최악 적합(Worst Fit)</code> : 배치가 가능한 크기의 빈 영역중에서 단편화를 가장 많이 남기는 분할 영역에 배치</li>\n<li>내부 단편화 : 배치 후 남은 공간</li>\n<li>외부 단편화 : 배치를 못해 빈 공간으로 남아있는 공간</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>영역번호</th>\n<th>영역크기</th>\n<th>상태</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>5K</td>\n<td>공백</td>\n</tr>\n<tr>\n<td>2</td>\n<td>14K</td>\n<td>공백</td>\n</tr>\n<tr>\n<td>3</td>\n<td>10K</td>\n<td>사용중</td>\n</tr>\n<tr>\n<td>4</td>\n<td>12K</td>\n<td>공백</td>\n</tr>\n<tr>\n<td>5</td>\n<td>16K</td>\n<td>공백</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>먼저 10K 가 적재될 수 있는지 각 영역의 크기 확인</li>\n<li>First Fit : 빈 영역 중에서 10K의 프로그램이 들어갈 수 있는 첫번째 영역은 2번째</li>\n<li>Best Fit : 빈 영역 중에서 10K 프로그램이 들어가고 단편화를 가장 작게 넘기는 영역은 4번</li>\n<li>Worst Fit : 빈 영역 중에서 10K 프로그램이 들어가고 단편화를 가장 많이 남기는 영역은 5번</li>\n</ul>\n<h3>(3) 교체(Replacement) 전략</h3>\n<ul>\n<li>주기억장치의 모든 영역이 이미 사용 중인 상태에서 새로운 프로그램이나 데이터가 배치하려고 할 때, 이미 사용 중인 영역에서 어느 영역을 교체할 것인지를 결정하는 전략</li>\n<li>페이지 교체 알고리즘 사용</li>\n<li>FIFO, OPT, LRU, LFU, NUR, SCR 등</li>\n</ul>\n<h2>2) 주기억장치 할당 기법</h2>\n<h4>(1) 주기억장치 할당의 개념</h4>\n<ul>\n<li>프로그램이나 데이터를 실행시키기 위해 주기억장치에 어떻게 할당할 것인지에 대한 내용</li>\n<li>\n<p>연속 할당 기법</p>\n<ul>\n<li>프로그램을 주 기억장치에 연속으로 할당하는 기법</li>\n</ul>\n</li>\n<li>\n<p>단일 분할 할당 기법 : 오버레이, 스와핑</p>\n<ul>\n<li>다중 분할 기법 : 고정 분할 할당 기법, 동적 분할 할당 기법</li>\n</ul>\n</li>\n<li>\n<p>분산 할당 기법</p>\n<ul>\n<li>프로그램을 특정 단위의 조각으로 나누어 주기억장치 내에 분산하여 할당하는 기법</li>\n<li>페이징 기법, 세그먼테이션 기법</li>\n</ul>\n</li>\n</ul>\n<h4>(2) 단일 분할 할당 기법</h4>\n<ul>\n<li>주기억장치를 운영체제 영역과 사용자 영역으로 나누어 한순간에는 오직 한 명의 사용자만이 주기억장치의 사용자 영역을 사용하는 기법</li>\n<li>\n<p>오버레이 기법 : 주기억장치보다 큰 사용자 프로그램을 실행하기 위한 기법</p>\n<ul>\n<li>보조기억장치에 저장된 하나의 프로그램을 여러개의 조각으로 분할한 후 필요한 조각을 차례로 주기억장치에 적재하여 프로그램을 실행</li>\n</ul>\n</li>\n<li>스와핑 기법 : 하나의 프로그램 전체를 주기억장치에 할당하여 사용하다 필요에 따라 다른 프로그램과 교체하는 기법</li>\n</ul>\n<h4>(3) 다중 분할 할당 기법</h4>\n<ul>\n<li>고정 분할 할당 기법 : 프로그램에 할당하기 전에 운영체제가 주기억장치의 사용자 영역을 여러 개의 고정된 크기로 분할하고 준비상태 큐에서 준비 중인 프로그램을 각 영역에서 할당하여 수행하는 기법</li>\n<li>\n<p>가변 분할 할당 기법 : 미리 주기억장치에 분할해 놓는 것이 아닌 프로그램을 주기억장치에 적재하면서 필요한 만큼의 크기로 영역을 분할</p>\n<p>210409</p>\n</li>\n</ul>\n<h2>2) 가상 기억 장치의 배경 이론</h2>\n<h4>1) 페이지 크기에 따른 특징</h4>\n<ul>\n<li>\n<p>페이지 크기가 작을 경우</p>\n<ul>\n<li>단편화와 주기억장치로 이동하는 시간 감소</li>\n<li>불필요한 내용이 적재될 확률이 낮아 워킹 셋이 효율적으로 유지</li>\n<li>Locality에 더욱 일치하여 기억장치에 효율 상승</li>\n<li>페이지 맵 테이블 크기가 커지므로 매핑 속도가 늦어짐</li>\n<li>디스크 접근 횟수가 많아져 전체적인 입출력 시간이 늘어남</li>\n</ul>\n</li>\n<li>\n<p>페이지 크기가 클 경우</p>\n<ul>\n<li>단편화와 주기억장치로 이동하는 시간이 증가</li>\n<li>프로세스 수행에 불필요한 내용까지 적재될 수 있음</li>\n<li>페이지 맵 테이블 크기가 작아지므로 매핑 속도가 빨라짐</li>\n<li>디스크 접근 횟수가 줄어들어 전체적인 입출력 시간이 줄어듦</li>\n</ul>\n</li>\n</ul>\n<h4>2) 구역성(Locality)</h4>\n<ul>\n<li>프로세스가 실행되는 동안 주기억장치를 참조할 때 일부 페이지만 집중적으로 참조하는 성질이 있다는 이론</li>\n<li>스래싱을 방지하기 위한 워킹 셋 이론의 기반, 프로세스가 집중적으로 사용하는 페이지를 알아내는 방법</li>\n<li>\n<p><code class=\"language-text\">시간 구역성</code> : 프로세스가 실행되면서 하나의 페이지를 일정 시간 동안 집중적으로 액세스 하는 현상</p>\n<p>(순환, 서브 루틴, 스택, 집계에 사용되는 변수)</p>\n</li>\n<li>\n<p><code class=\"language-text\">공간 구역성</code> : 프로세스 실행 시 일정 위치의 페이지를 집중적으로 액세스하는 현상</p>\n<p>(배열 순회, 순차 코드, 변수의 선언 부분)</p>\n</li>\n</ul>\n<h4>3) 워킹 셋</h4>\n<ul>\n<li><em>자주 참조하는 페이지들의 집합</em></li>\n<li>자주 참조되는 워킹 셋을 주기억장치에 상주시켜 페이지 부재 및 페이지 교체 현상이 줄어들어 프로세스의 기억장치 사용이 안정됨</li>\n<li>워킹 셋은 시간에 따라 변화</li>\n</ul>\n<h4>4) 페이지 부재 빈도 방식</h4>\n<ul>\n<li><em>페이지 부재 빈도는 페이지 부재가 일어나는 횟수</em></li>\n<li>페이지 부재율에 따라 주기억장치에 있는 페이지 프레임 수를 조정하여 적정 수준으로 유지하는 방식</li>\n<li>운영체제는 프로세스 실행 초기에 임의의 페이지 프레임 할당 후 페이지 부재율에 따라 프레임을 할당하거나 회수</li>\n</ul>\n<h4>5) 프리 페이징</h4>\n<ul>\n<li><em>처음의 과도한 페이지 부재를 방지하기 위해 필요할 것 같은 모든 페이지를 한꺼번에 페이지 프레임에 적재하는 기법</em></li>\n</ul>\n<h4>6) 스래싱</h4>\n<ul>\n<li><em>프로세스의 처리 시간보다 페이지 교체에 소요되는 시간이 더 많아지는 현상</em></li>\n<li>전체 프로세스 성능이 저하됨</li>\n</ul>\n<h2>4) 가상 기억 장치의 관리 전략</h2>\n<h3>(1) 페이징 기법</h3>\n<ul>\n<li>가상기억장치의 보관되어 있는 프로그램과 주기억장치의 영역을 동일한 크기로 나눈 후 나눠진 프로그램을 동일하게 나눠진 주기억장치의 영역에 적재시켜 실행하는 기법</li>\n<li>프로그램을 일정한 크기로 나눈 크기를 페이지라 하고 페이지 크기로 일정하게 나누어진 주기억장치의 단위를 페이지 프레임이라고 함</li>\n<li>외부 단편화는 발생하지 않으나 <code class=\"language-text\">내부 단편화</code>는 발생할 수 있음</li>\n<li>Mapping 작업을 위해서 페이지 맵 테이블이 필요함</li>\n</ul>\n<h3>(2) 세그먼트 기법</h3>\n<ul>\n<li>가상기억장치에 보관되어 있는 프로그램을 다양한 크기의 논리적인 단위로 나눈 후 주기억장치에 적재시켜 실행시키는 방법</li>\n<li>프로그램을 논리적인 크기로 나눈 단위를 세그먼트라고 함</li>\n<li>내부 단편화는 발생하지 않으나 <code class=\"language-text\">외부 단편화</code>는 발생할 수 있음</li>\n<li>Mapping 작업을 위해서 세그먼트 맵 테이블이 필요함</li>\n<li>세그먼트가 주기억장치에 적재될 때 다른 세그먼트에게 할당된 영역을 침범할 수 없으며 이를 위해 기억장치 보호키가 필요</li>\n</ul>\n<h2>4) 페이지 교체 알고리즘</h2>\n<ul>\n<li>페이지 부재가 발생했을 때 가상 기억장치의 필요한 페이지를 주기억장치에 적재해야 하는데 이럴 경우 주기억장치의 모든 페이지 프레임이 사용 중이면 어떤 페이지 프레임을 선택하여 교체할 것인지 결정하는 기법</li>\n</ul>\n<h3>(1) OPT(OPTimal replacement, 최적 교체)</h3>\n<ul>\n<li><em>앞으로 가장 오랫동안 사용하지 않을 페이지를 교체(예상)</em></li>\n</ul>\n<h3>(2) FIFO(First In First Out)</h3>\n<ul>\n<li><em>페이지가 주기억장치에 적재될 때마다 시간을 기억시켜 가장 먼저 들어와서 오래 있었던 페이지를 교체</em></li>\n<li>먼저 들어온 것이 먼저 나감</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>순서</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>8</th>\n<th>9</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>요구</td>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n<td>2</td>\n<td>1</td>\n<td>2</td>\n<td>4</td>\n<td>2</td>\n<td>5</td>\n</tr>\n<tr>\n<td></td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td><code class=\"language-text\">1 -> 4</code></td>\n<td>4</td>\n<td>4</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>2</td>\n<td>2</td>\n<td>2</td>\n<td>2</td>\n<td>2</td>\n<td>2</td>\n<td>2</td>\n<td><code class=\"language-text\">2 -> 5</code></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td>3</td>\n<td>3</td>\n<td>3</td>\n<td>3</td>\n<td>3</td>\n<td>3</td>\n<td>3</td>\n</tr>\n<tr>\n<td>부재</td>\n<td>O</td>\n<td>O</td>\n<td>O</td>\n<td></td>\n<td></td>\n<td></td>\n<td>O</td>\n<td></td>\n<td>O</td>\n</tr>\n</tbody>\n</table>\n<h3>(3) LRU(Least Recently Used)</h3>\n<ul>\n<li><em>최근에 가장 오랫동안 사용하지 않은 페이지를 교체</em></li>\n<li>페이지마다 Counter나 Stack을 두어 현시점에서 가장 오래전에 사용된 페이지 교체</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>순서</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>8</th>\n<th>9</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>요구</td>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n<td>2</td>\n<td>1</td>\n<td>2</td>\n<td>4</td>\n<td>2</td>\n<td>5</td>\n</tr>\n<tr>\n<td></td>\n<td>1(1)</td>\n<td>1(1)</td>\n<td>1(1)</td>\n<td>1(1)</td>\n<td>1(5)</td>\n<td>1(5)</td>\n<td>1(5)</td>\n<td>1(5)</td>\n<td><code class=\"language-text\">1 -> 5_(9)</code></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>2(2)</td>\n<td>2(2)</td>\n<td>2(4)</td>\n<td>2(4)</td>\n<td>2(6)</td>\n<td>2(6)</td>\n<td>2(8)</td>\n<td>2(8)</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td>3(3)</td>\n<td>3(3)</td>\n<td>3(3)</td>\n<td>3(3)</td>\n<td><code class=\"language-text\">3 -> 4_(7)</code></td>\n<td>4(7)</td>\n<td>4(7)</td>\n</tr>\n<tr>\n<td>부재</td>\n<td>O</td>\n<td>O</td>\n<td>O</td>\n<td></td>\n<td></td>\n<td></td>\n<td>O</td>\n<td></td>\n<td>O</td>\n</tr>\n</tbody>\n</table>\n<h3>(4) LFU(Least Frequently Used)</h3>\n<ul>\n<li><em>사용 빈도가 가장 적은 페이지를 교체</em></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>순서</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>8</th>\n<th>9</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>요구</td>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n<td>2</td>\n<td>1</td>\n<td>2</td>\n<td>4</td>\n<td>2</td>\n<td>5</td>\n</tr>\n<tr>\n<td></td>\n<td>1 (+1)</td>\n<td>1 (+1)</td>\n<td>1 (+1)</td>\n<td>1 (+1)</td>\n<td>1 (+2)</td>\n<td>1 (+2)</td>\n<td>1 (+2)</td>\n<td>1 (+2)</td>\n<td>1 (+2)</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>2 (+1)</td>\n<td>2 (+1)</td>\n<td>2 (+2)</td>\n<td>2 (+2)</td>\n<td>2 (+3)</td>\n<td>2 (+3)</td>\n<td>2 (+4)</td>\n<td>2 (+4)</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td>3 (+1)</td>\n<td>3 (+1)</td>\n<td>3 (+1)</td>\n<td>3 (+1)</td>\n<td><code class=\"language-text\">3 -> 4  (+1)</code></td>\n<td>4 (+1)</td>\n<td><code class=\"language-text\">4 -> 5(+1)</code></td>\n</tr>\n<tr>\n<td>부재</td>\n<td>O</td>\n<td>O</td>\n<td>O</td>\n<td></td>\n<td></td>\n<td></td>\n<td>O</td>\n<td></td>\n<td>O</td>\n</tr>\n</tbody>\n</table>\n<h3>(5) NUR(Not Used Frequency)</h3>\n<ul>\n<li><em>최근에 사용하지 않은 페이지를 교체</em></li>\n<li>최근 사용 여부를 확인하기 위해 페이지마다 참조 비트와 변형 비트를 사용</li>\n</ul>\n<h3>(6) SCR(Second Change Replacement)</h3>\n<ul>\n<li><em>이전에 참조된 페이지가 다시 한번 참조된 경우 이후 교체될 순서에 다시 한번 기회를 주는 기법</em></li>\n<li>FIFO 알고리즘의 단점 보완</li>\n<li>2차 기회 교체 알고리즘</li>\n</ul>\n<h3>(7) 무작위 페이지 교체(Random Page Replacement)</h3>\n<ul>\n<li><em>임의의 페이지를 선택하여 교체</em></li>\n</ul>\n<h3>(8) MFU(Most Frequently Used)</h3>\n<ul>\n<li><em>주기억 장치에서 참조 횟수가 가장 많은 페이지를 교체</em></li>\n<li>가장 작은 계수를 가진 페이지는 방금 입력된 페이지이며 앞으로 사용될 확률이 크다는 것을 전제</li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#1-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4\">1. 프로세스</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#1-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-1\">1) 프로세스</a></li>\n<li>\n<p><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#2-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%A0%9C%EC%96%B4-%EB%B8%94%EB%A1%9D-pcbprocess-control-block\">2) 프로세스 제어 블록 PCB(Process Control Block)</a></p>\n<ul>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#1-%EC%A0%95%EC%9D%98\">(1) 정의</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#2-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%A0%9C%EC%96%B4-%EB%B8%94%EB%A1%9D%EC%9D%98-%EC%A0%95%EB%B3%B4\">(2) 프로세스 제어 블록의 정보</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#3-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%83%81%ED%83%9C-%EC%A0%84%EC%9D%B4\">3) 프로세스 상태 전이</a></p>\n<ul>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#4-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%83%81%ED%83%9C-%EC%A0%84%EC%9D%B4-%EA%B4%80%EB%A0%A8-%EC%9A%A9%EC%96%B4\">4) 프로세스 상태 전이 관련 용어</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#2-%EC%8A%A4%EB%A0%88%EB%93%9C\">2. 스레드</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#1-%EC%8A%A4%EB%A0%88%EB%93%9C%EC%9D%98-%EA%B5%AC%EC%84%B1-%EB%B0%8F-%ED%8A%B9%EC%A7%95\">1) 스레드의 구성 및 특징</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#2-%EB%8B%A8%EC%9D%BC-%EC%8A%A4%EB%A0%88%EB%93%9C%EC%99%80-%EB%8B%A4%EC%A4%91-%EC%8A%A4%EB%A0%88%EB%93%9C-%EB%AA%A8%EB%8D%B8\">2) 단일 스레드와 다중 스레드 모델</a></li>\n<li>\n<p><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#3-%EB%B3%91%ED%96%89-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4\">3) 병행 프로세스</a></p>\n<ul>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#1-%EB%B3%91%ED%96%89-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4\">(1) 병행 프로세스</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#2-%EC%9E%84%EA%B3%84-%EA%B5%AC%EC%97%AD\">(2) 임계 구역</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#3-%EC%83%81%ED%98%B8-%EB%B0%B0%EC%A0%9Cmutual-exclusion\">(3) 상호 배제(Mutual Exclusion)</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#4-%EC%84%B8%EB%A7%88%ED%8F%AC%EC%96%B4\">(4) 세마포어</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#5-%EB%AA%A8%EB%8B%88%ED%84%B0\">(5) 모니터</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#3-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81\">3. 프로세스 스케줄링</a></p>\n<ul>\n<li>\n<p><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#1-%EB%B9%84%EC%84%A0%EC%A0%90non-preemptive-%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81\">1) 비선점(Non-preemptive) 스케줄링</a></p>\n<ul>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#1-fifofirst-in-first-out-%EC%84%A0%EC%9E%85-%EC%84%A0%EC%B6%9C--fcfsfirst-come-first-service\">1) FIFO(First In First Out, 선입 선출) = FCFS(First Come First Service)</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#2-sjfshortest-job-first-%EB%8B%A8%EA%B8%B0-%EC%9E%91%EC%97%85-%EC%9A%B0%EC%84%A0\">2) SJF(Shortest Job First, 단기 작업 우선)</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#3-hrnhightest-response-next\">3) HRN(Hightest Response Next)</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#4-%EA%B8%B0%ED%95%9C%EB%B6%80deadline\">4) 기한부(Deadline)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#2-%EC%84%A0%EC%A0%90preemptive-%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81\">2) 선점(Preemptive) 스케줄링</a></p>\n<ul>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#1-rrround-robin-%EB%9D%BC%EC%9A%B4%EB%93%9C-%EB%A1%9C%EB%B9%88\">(1) RR(Round Robin 라운드 로빈)</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#2-srtshortest-remaining-time\">(2) SRT(Shortest Remaining Time)</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#3-mqmulti-level-queue-%EB%8B%A4%EB%8B%A8%EA%B3%84-%ED%81%90\">(3) MQ(Multi-level Queue, 다단계 큐)</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#4-mfqmulti-level-feedback-queue-%EB%8B%A4%EB%8B%A8%EA%B3%84-%ED%94%BC%EB%93%9C%EB%B0%B1-%ED%81%90\">(4) MFQ(Multi-level Feedback Queue, 다단계 피드백 큐)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#3-%EA%B5%90%EC%B0%A9%EC%83%81%ED%83%9Cdead-lock\">3) 교착상태(Dead Lock)</a></p>\n<ul>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#1-%EA%B5%90%EC%B0%A9-%EC%83%81%ED%83%9C\">(1) 교착 상태</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#2-%EA%B5%90%EC%B0%A9%EC%83%81%ED%83%9C-%EB%B0%9C%EC%83%9D%EC%9D%98-%ED%95%84%EC%9A%94-%EC%B6%A9%EB%B6%84-%EC%A1%B0%EA%B1%B4%EC%83%81%EC%A0%90%EB%B9%84%ED%99%98\">(2) 교착상태 발생의 필요 충분 조건<del>(상점비환)</del></a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#3-%EA%B5%90%EC%B0%A9-%EC%83%81%ED%83%9C-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\">(3) 교착 상태 해결 방법</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#4-%EA%B8%B0%EC%96%B5-%EC%9E%A5%EC%B9%98-%EA%B4%80%EB%A6%AC\">4. 기억 장치 관리</a></p>\n<ul>\n<li>\n<p><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#1-%EA%B8%B0%EC%96%B5-%EC%9E%A5%EC%B9%98-%EA%B4%80%EB%A6%AC-%EC%A0%84%EB%9E%B5%EC%9D%98-%EA%B0%9C%EC%9A%94\">1) 기억 장치 관리 전략의 개요</a></p>\n<ul>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#1-%EC%A0%80%EC%9E%A5%EC%9E%A5%EC%B9%98-%EA%B3%84%EC%B8%B5-%EA%B5%AC%EC%A1%B0%EC%9D%98-%ED%8A%B9%EC%A7%95\">(1) 저장장치 계층 구조의 특징</a></li>\n<li>\n<p><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#2-%EA%B8%B0%EC%96%B5%EC%9E%A5%EC%B9%98%EC%9D%98-%EA%B4%80%EB%A6%AC-%EC%A0%84%EB%9E%B5%EC%9D%98-%EA%B0%9C%EC%9A%94\">(2) 기억장치의 관리 전략의 개요</a></p>\n<ul>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#1-%EB%B0%98%EC%9E%85fetch-%EC%A0%84%EB%9E%B5\">(1) 반입(Fetch) 전략</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#2-%EB%B0%B0%EC%B9%98placement-%EC%A0%84%EB%9E%B5\">(2) 배치(Placement) 전략</a></li>\n</ul>\n</li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#3-%EA%B5%90%EC%B2%B4replacement-%EC%A0%84%EB%9E%B5\">(3) 교체(Replacement) 전략</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#2-%EC%A3%BC%EA%B8%B0%EC%96%B5%EC%9E%A5%EC%B9%98-%ED%95%A0%EB%8B%B9-%EA%B8%B0%EB%B2%95\">2) 주기억장치 할당 기법</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#1-%EC%A3%BC%EA%B8%B0%EC%96%B5%EC%9E%A5%EC%B9%98-%ED%95%A0%EB%8B%B9%EC%9D%98-%EA%B0%9C%EB%85%90\">(1) 주기억장치 할당의 개념</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#2-%EB%8B%A8%EC%9D%BC-%EB%B6%84%ED%95%A0-%ED%95%A0%EB%8B%B9-%EA%B8%B0%EB%B2%95\">(2) 단일 분할 할당 기법</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#3-%EB%8B%A4%EC%A4%91-%EB%B6%84%ED%95%A0-%ED%95%A0%EB%8B%B9-%EA%B8%B0%EB%B2%95\">(3) 다중 분할 할당 기법</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#2-%EA%B0%80%EC%83%81-%EA%B8%B0%EC%96%B5-%EC%9E%A5%EC%B9%98%EC%9D%98-%EB%B0%B0%EA%B2%BD-%EC%9D%B4%EB%A1%A0\">2) 가상 기억 장치의 배경 이론</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#1-%ED%8E%98%EC%9D%B4%EC%A7%80-%ED%81%AC%EA%B8%B0%EC%97%90-%EB%94%B0%EB%A5%B8-%ED%8A%B9%EC%A7%95\">1) 페이지 크기에 따른 특징</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#2-%EA%B5%AC%EC%97%AD%EC%84%B1locality\">2) 구역성(Locality)</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#3-%EC%9B%8C%ED%82%B9-%EC%85%8B\">3) 워킹 셋</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#4-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%B6%80%EC%9E%AC-%EB%B9%88%EB%8F%84-%EB%B0%A9%EC%8B%9D\">4) 페이지 부재 빈도 방식</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#5-%ED%94%84%EB%A6%AC-%ED%8E%98%EC%9D%B4%EC%A7%95\">5) 프리 페이징</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#6-%EC%8A%A4%EB%9E%98%EC%8B%B1\">6) 스래싱</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#4-%EA%B0%80%EC%83%81-%EA%B8%B0%EC%96%B5-%EC%9E%A5%EC%B9%98%EC%9D%98-%EA%B4%80%EB%A6%AC-%EC%A0%84%EB%9E%B5\">4) 가상 기억 장치의 관리 전략</a></p>\n<ul>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#1-%ED%8E%98%EC%9D%B4%EC%A7%95-%EA%B8%B0%EB%B2%95\">(1) 페이징 기법</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#2-%EC%84%B8%EA%B7%B8%EB%A8%BC%ED%8A%B8-%EA%B8%B0%EB%B2%95\">(2) 세그먼트 기법</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#4-%ED%8E%98%EC%9D%B4%EC%A7%80-%EA%B5%90%EC%B2%B4-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\">4) 페이지 교체 알고리즘</a></p>\n<ul>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#1-optoptimal-replacement-%EC%B5%9C%EC%A0%81-%EA%B5%90%EC%B2%B4\">(1) OPT(OPTimal replacement, 최적 교체)</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#2-fifofirst-in-first-out\">(2) FIFO(First In First Out)</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#3-lruleast-recently-used\">(3) LRU(Least Recently Used)</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#4-lfuleast-frequently-used\">(4) LFU(Least Frequently Used)</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#5-nurnot-used-frequency\">(5) NUR(Not Used Frequency)</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#6-scrsecond-change-replacement\">(6) SCR(Second Change Replacement)</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#7-%EB%AC%B4%EC%9E%91%EC%9C%84-%ED%8E%98%EC%9D%B4%EC%A7%80-%EA%B5%90%EC%B2%B4random-page-replacement\">(7) 무작위 페이지 교체(Random Page Replacement)</a></li>\n<li><a href=\"/2021%20%EC%A0%95%EB%B3%B4%20%EC%B2%98%EB%A6%AC%20%EA%B8%B0%EC%82%AC%20%EC%8B%A4%EA%B8%B0%20%EC%9A%94%EC%95%BD%2010-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%20%EA%B4%80%EB%A6%AC/#8-mfumost-frequently-used\">(8) MFU(Most Frequently Used)</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"2021 정보 처리 기사 실기 요약 10-응용-프로세스 관리","path":"/2021 정보 처리 기사 실기 요약 10-응용-프로세스 관리/","images":["images/1.jpg"],"category":"정보처리기사 실기 요약","tags":["정보처리기사 실기 요약","정보처리기사","정처기"],"date":"2021-05-02T21:01:00.000Z","components":null,"tweets":null,"summary":"2021 정보 처리 기사 실기 요약 10-응용-프로세스 관리 활용 입니다. 정처기 공부를 할 때 활용하세요."}},"posts":{"edges":[{"node":{"frontmatter":{"type":"portfolio","title":"MOIJA","images":["moija/images/moija.png","moija/images/moija1.png","moija/images/moija2.png","moija/images/moija3.png","moija/images/moija4.png","moija/images/moija5.png"],"path":"/portfolios/moija/","tags":null,"date":"2022-03-02T00:00:00.000Z","summary":null}}},{"node":{"frontmatter":{"type":"portfolio","title":"VUELOG","images":["vuelog/images/vuelog.png","vuelog/images/vuelog1.png","vuelog/images/vuelog2.png","vuelog/images/vuelog3.png","vuelog/images/vuelog4.png","vuelog/images/vuelog5.png","vuelog/images/vuelog6.png"],"path":"/portfolios/VUELOG/","tags":null,"date":"2022-03-01T00:00:00.000Z","summary":null}}},{"node":{"frontmatter":{"type":"portfolio","title":"DT CENTER","images":["dtcenter/images/dtcenter.png","dtcenter/images/dtcenter1.png","dtcenter/images/dtcenter2.png","dtcenter/images/dtcenter3.png"],"path":"/portfolios/DT CENTER/","tags":null,"date":"2022-02-21T00:00:00.000Z","summary":null}}},{"node":{"frontmatter":{"type":"portfolio","title":"COLORBERRY","images":["ColorBerry/images/colorberry.png","ColorBerry/images/colorberry2.png","ColorBerry/images/colorberry3.png","ColorBerry/images/colorberry4.png","ColorBerry/images/colorberry5.png","ColorBerry/images/colorberry6.png","ColorBerry/images/colorberry7.png","ColorBerry/images/colorberry8.png"],"path":"/portfolios/COLORBERRY/","tags":null,"date":"2022-02-20T00:00:00.000Z","summary":null}}},{"node":{"frontmatter":{"type":null,"title":"우아한 테크 캠프 4기 - 4주차 회고","images":["images/woowa.jpg"],"path":"/우아한 테크 캠프 4기 - 4주차 회고/","tags":["우아한 테크 캠프","우아한 테크 캠프 4기","우아한 리액트","리액트"],"date":"2021-08-02T19:21:00000Z","summary":"우아한 테크 캠프 4기 - 4주차 회고"}}},{"node":{"frontmatter":{"type":null,"title":"우아한 테크 캠프 4기 - 바닐라로 함수형 리액트 만들기 (1) - useState, useEffect 만들기","images":["images/woowa.jpg"],"path":"/우아한 테크 캠프 4기 - 바닐라로 함수형 리액트 만들기 (1) - useState, useEffect 만들기/","tags":["우아한 테크 캠프","우아한 테크 캠프 4기","우아한 리액트","리액트"],"date":"2021-07-11T19:21:00000Z","summary":"우아한 테크 캠프 4기 - 우아한 리액트 만들기 - useState, useEffect 만들기"}}},{"node":{"frontmatter":{"type":null,"title":"자바스크립트 요점 정리 - 클로저","images":["images/js.png"],"path":"/자바스크립트 요점 정리 - 클로저/","tags":["자바스크립트"],"date":"2021-06-12T01:00:00.000Z","summary":"자바스크립트 요점 정리 - 클로저"}}},{"node":{"frontmatter":{"type":null,"title":"react - Jest 사용하기","images":["images/react.jpg"],"path":"/react - Jest 사용하기/","tags":["리액트","react"],"date":"2021-06-06T01:06:00.000Z","summary":"react - Jest 사용하기 정리 자료입니다."}}},{"node":{"frontmatter":{"type":null,"title":"redux-toolkit - 튜토리얼","images":["images/react.jpg"],"path":"/redux-toolkit - 튜토리얼/","tags":["리액트","react","redux","redux-toolkit"],"date":"2021-06-05T01:06:00.000Z","summary":"redux-toolkit - 튜토리얼 정리 자료입니다."}}},{"node":{"frontmatter":{"type":null,"title":"redux-toolkit - createSlice","images":["images/react.jpg"],"path":"/redux-toolkit - createSlice/","tags":["리액트","react","redux","redux-toolkit"],"date":"2021-06-05T01:06:00.000Z","summary":"redux-toolkit - createSlice 정리 자료입니다."}}},{"node":{"frontmatter":{"type":null,"title":"자바스크립트 요점 정리 - REST API","images":["images/js.png"],"path":"/자바스크립트 요점 정리 - REST API/","tags":["자바스크립트"],"date":"2021-06-04T01:00:00.000Z","summary":"자바스크립트 요점 정리 - REST API 파트"}}},{"node":{"frontmatter":{"type":null,"title":"자바스크립트 요점 정리 - 타이머","images":["images/js.png"],"path":"/자바스크립트 요점 정리 - 타이머/","tags":["자바스크립트"],"date":"2021-06-04T01:00:00.000Z","summary":"자바스크립트 요점 정리 - 타이머 파트"}}},{"node":{"frontmatter":{"type":null,"title":"자바스크립트 요점 정리 - 프로토타입","images":["images/js.png"],"path":"/자바스크립트 요점 정리 - 프로토타입/","tags":["자바스크립트"],"date":"2021-06-03T01:00:00.000Z","summary":"자바스크립트 요점 정리 - 프로토타입 파트"}}},{"node":{"frontmatter":{"type":null,"title":"자바스크립트 요점 정리 - 실행 컨텍스트","images":["images/js.png"],"path":"/자바스크립트 요점 정리 - 실행 컨텍스트/","tags":["자바스크립트"],"date":"2021-05-25T01:00:00.000Z","summary":"자바스크립트 요점 정리 - 실행 컨텍스트"}}},{"node":{"frontmatter":{"type":null,"title":"2021 정보 처리 기사 실기 요약 1-프로그래밍 언어 활용(1)-개요","images":["images/1.jpg"],"path":"/2021 정보 처리 기사 실기 요약 1-프로그래밍 언어 활용(1)-개요/","tags":["정보처리기사 실기 요약","정보처리기사","정처기"],"date":"2021-05-21T22:23:00.000Z","summary":"2021 정보 처리 기사 실기 요약 1-프로그래밍 언어 활용(1)-개요 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"2021 정보 처리 기사 실기 요약 1-프로그래밍 언어(2)-언어 활용","images":["images/1.jpg"],"path":"/2021 정보 처리 기사 실기 요약 1-프로그래밍 언어(2)-언어 활용/","tags":["정보처리기사 실기 요약","정보처리기사","정처기"],"date":"2021-05-20T20:21:00.000Z","summary":"2020 정보 처리 기사 실기 요약 1-프로그래밍 언어(2)-언어 활용 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"2021 정보 처리 기사 실기 요약 2-요구 사항 확인","images":["images/1.jpg"],"path":"/2021 정보 처리 기사 실기 요약 2-요구 사항 확인/","tags":["정보처리기사 실기 요약","정보처리기사","정처기"],"date":"2021-05-19T17:21:00.000Z","summary":"2021 정보 처리 기사 실기 요약 2-요구 사항 확인 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"2021 정보 처리 기사 실기 요약 3-데이터 입출력 구현","images":["images/1.jpg"],"path":"/2021 정보 처리 기사 실기 요약 3-데이터 입출력 구현/","tags":["정보처리기사 실기 요약","정보처리기사","정처기"],"date":"2021-05-18T17:22:00.000Z","summary":"2021 정보 처리 기사 데이터 입출력 구현 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"2021 정보 처리 기사 실기 요약 4-통합 구현","images":["images/1.jpg"],"path":"/2021 정보 처리 기사 실기 요약 4-통합 구현/","tags":["정보처리기사 실기 요약","정보처리기사","정처기"],"date":"2021-05-17T05:31:00.000Z","summary":"2021 정보 처리 기사 통합 구현 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"2021 정보 처리 기사 실기 요약 5-서버 프로그램 구현","images":["images/1.jpg"],"path":"/2021 정보 처리 기사 실기 요약 5-서버 프로그램 구현/","tags":["정보처리기사 실기 요약","정보처리기사","정처기"],"date":"2021-05-16T06:31:00.000Z","summary":"2021 정보 처리 기사 서버 프로그램 구현 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"2021 정보 처리 기사 실기 요약 6-화면 설계","images":["images/1.jpg"],"path":"/2021 정보 처리 기사 실기 요약 6-화면 설계/","tags":["정보처리기사 실기 요약","정보처리기사","정처기"],"date":"2021-05-15T17:00:00.000Z","summary":"2021 정보 처리 기사 화면 설계 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"2021 정보 처리 기사 실기 요약 7-애플리케이션 테스트 관리","images":["images/1.jpg"],"path":"/2021 정보 처리 기사 실기 요약 7-애플리케이션 테스트 관리/","tags":["정보처리기사 실기 요약","정보처리기사","정처기"],"date":"2021-05-14T17:00:00.000Z","summary":"2021 정보 처리 기사 애플리케이션 테스트 관리 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"2021 정보 처리 기사 실기 요약 8-SQL 응용","images":["images/1.jpg"],"path":"/2021 정보 처리 기사 실기 요약 8-SQL 응용/","tags":["정보처리기사 실기 요약","정보처리기사","정처기"],"date":"2021-05-12T12:45:00.000Z","summary":"2021 정보 처리 기사 SQL 응용 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"2021 정보 처리 기사 실기 요약 9-소프트웨어 보안 구축","images":["images/1.jpg"],"path":"/2021 정보 처리 기사 실기 요약 9-소프트웨어 보안 구축/","tags":["정보처리기사 실기 요약","정보처리기사","정처기"],"date":"2021-05-11T19:00:00.000Z","summary":"2021 정보 처리 기사 소프트웨어 보안 구축 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"2021 정보 처리 기사 실기 요약 10-응용-네트워크","images":["images/1.jpg"],"path":"/2021 정보 처리 기사 실기 요약 10-응용-네트워크/","tags":["정보처리기사 실기 요약","정보처리기사","정처기"],"date":"2021-05-10T21:03:00.000Z","summary":"2021 정보 처리 기사 실기 요약 10-응용-네트워크 활용 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - Vue(3)","images":["images/2.jpg"],"path":"/프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - Vue(3)/","tags":["프론트엔드","개발자","면접","기술면접","Vue"],"date":"2021-05-07T01:00:00.000Z","summary":"프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - Vue(3)"}}},{"node":{"frontmatter":{"type":null,"title":"프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - Vue(2)","images":["images/2.jpg"],"path":"/프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - Vue(2)/","tags":["프론트엔드","개발자","면접","기술면접","Vue"],"date":"2021-05-06T01:00:00.000Z","summary":"프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - Vue(2)"}}},{"node":{"frontmatter":{"type":null,"title":"2021 정보 처리 기사 실기 요약 10-응용-운영체제 활용","images":["images/1.jpg"],"path":"/2021 정보 처리 기사 실기 요약 10-응용-운영체제 활용/","tags":["정보처리기사 실기 요약","정보처리기사","정처기"],"date":"2021-05-03T21:01:00.000Z","summary":"2021 정보 처리 기사 실기 요약 10-응용-운영체제 활용 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"2021 정보 처리 기사 실기 요약 10-응용-프로세스 관리","images":["images/1.jpg"],"path":"/2021 정보 처리 기사 실기 요약 10-응용-프로세스 관리/","tags":["정보처리기사 실기 요약","정보처리기사","정처기"],"date":"2021-05-02T21:01:00.000Z","summary":"2021 정보 처리 기사 실기 요약 10-응용-프로세스 관리 활용 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"2021 정보 처리 기사 실기 요약 11-제품 소프트웨어 패키징","images":["images/1.jpg"],"path":"/2021 정보 처리 기사 실기 요약 11-제품 소프트웨어 패키징/","tags":["정보처리기사 실기 요약","정보처리기사","정처기"],"date":"2021-05-01T23:03:00.000Z","summary":"2021 정보 처리 기사 제품 소프트웨어 패키징 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"벡엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - node","images":["images/2.jpg"],"path":"/벡엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - node/","tags":["벡엔드","개발자","면접","기술면접","node"],"date":"2021-04-20T01:00:00.000Z","summary":"벡엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - node"}}},{"node":{"frontmatter":{"type":null,"title":"프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - Nuxt","images":["images/2.jpg"],"path":"/프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - Nuxt/","tags":["프론트엔드","개발자","면접","기술면접","Nuxt"],"date":"2021-04-15T01:00:00.000Z","summary":"프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - Nuxt"}}},{"node":{"frontmatter":{"type":null,"title":"프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - Vue(1)","images":["images/2.jpg"],"path":"/프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - Vue(1)/","tags":["프론트엔드","개발자","면접","기술면접","Vue"],"date":"2021-04-15T01:00:00.000Z","summary":"프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - Vue(1)"}}},{"node":{"frontmatter":{"type":null,"title":"프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - React","images":["images/2.jpg"],"path":"/프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - React/","tags":["프론트엔드","개발자","면접","기술면접","React"],"date":"2021-04-14T01:00:00.000Z","summary":"프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - React"}}},{"node":{"frontmatter":{"type":null,"title":"프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - CSS","images":["images/2.jpg"],"path":"/프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - CSS/","tags":["프론트엔드","개발자","면접","기술면접","CSS"],"date":"2021-04-14T01:00:00.000Z","summary":"프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - CSS"}}},{"node":{"frontmatter":{"type":null,"title":"벡엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - 기술스택","images":["images/2.jpg"],"path":"/벡엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - 기술스택/","tags":["벡엔드","개발자","면접","기술면접","기술스택"],"date":"2021-04-09T01:00:00.000Z","summary":"벡엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - 기술스택"}}},{"node":{"frontmatter":{"type":null,"title":"벡엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - CS","images":["images/2.jpg"],"path":"/벡엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - cs/","tags":["벡엔드","개발자","면접","기술면접","CS"],"date":"2021-04-08T01:00:00.000Z","summary":"프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - 자바스크립트 파트"}}},{"node":{"frontmatter":{"type":null,"title":"자바스크립트 요점 정리 - this","images":["images/js.png"],"path":"/자바스크립트 요점 정리 - this/","tags":["자바스크립트"],"date":"2021-04-07T01:00:00.000Z","summary":"자바스크립트 요점 정리 - this 파트"}}},{"node":{"frontmatter":{"type":null,"title":"프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - 자바스크립트(1)","images":["images/2.jpg"],"path":"/프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - 자바스크립트(1)/","tags":["프론트엔드","개발자","면접","기술면접","자바스크립트"],"date":"2021-04-07T01:00:00.000Z","summary":"프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - 자바스크립트(1) 파트"}}},{"node":{"frontmatter":{"type":null,"title":"프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - 자바스크립트(2)","images":["images/2.jpg"],"path":"/프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - 자바스크립트(2)/","tags":["프론트엔드","개발자","면접","기술면접","자바스크립트"],"date":"2021-04-07T01:00:00.000Z","summary":"프론트엔드 개발자 면접 질문(기술면접) 질문 정리 모음 - 자바스크립트(2) 파트"}}},{"node":{"frontmatter":{"type":null,"title":"자바스크립트 요점 정리 - history api 정리","images":["images/js.png"],"path":"/자바스크립트 요점 정리 - history api/","tags":["자바스크립트"],"date":"2021-03-03T12:23:00.000Z","summary":"자바스크립트 요점 정리 - history api 정리"}}},{"node":{"frontmatter":{"type":null,"title":"프로그래머스 데브매칭 고양이 정리","images":["images/pg.jpg"],"path":"/프로그래머스 데브매칭 고양이 정리/","tags":["프로그래머스 데브매칭","고양이 사진첩"],"date":"2021-03-01T12:23:00.000Z","summary":"프로그래머스 데브매칭 고양이 정리입니다."}}},{"node":{"frontmatter":{"type":null,"title":"프로그래머스 데브매칭 상태관리","images":["images/pg.jpg"],"path":"/프로그래머스 데브매칭 상태관리/","tags":["프로그래머스 데브매칭","상태관리"],"date":"2021-03-01T12:23:00.000Z","summary":"프로그래머스 데브매칭 상태관리입니다."}}},{"node":{"frontmatter":{"type":null,"title":"프로그래머스 데브매칭 라우팅","images":["images/pg.jpg"],"path":"/프로그래머스 데브매칭 라우팅/","tags":["프로그래머스","데브매칭","소프트웨어"],"date":"2021-03-01T12:23:00.000Z","summary":"프로그래머스 데브매칭 라우팅입니다."}}},{"node":{"frontmatter":{"type":"portfolio","title":"MBTI WORLD","images":["mbtiworld/images/mbtiworld.png","mbtiworld/images/mbtiworld2.png","mbtiworld/images/mbtiworld3.png","mbtiworld/images/mbtiworld4.png","mbtiworld/images/mbtiworld5.png","mbtiworld/images/mbtiworld6.png","mbtiworld/images/mbtiworld7.png","mbtiworld/images/mbtiworld8.png","mbtiworld/images/mbtiworld9.png","mbtiworld/images/mbtiworld10.png"],"path":"/portfolios/MBTI WORLD/","tags":null,"date":"2021-02-19T00:00:00.000Z","summary":null}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보 처리 기사 실기 3-단답형 문제(3)","images":["images/1.jpg"],"path":"/2020 정보 처리 기사 실기 3-단답형 문제(3)/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-10-25T09:22:00000Z","summary":"2020 정보 처리 기사 실기 3-단답형 문제(3)입니다 정처기 공부를 할 때 활용하세요"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보 처리 기사 실기 4-단답형 문제(4)","images":["images/1.jpg"],"path":"/2020 정보 처리 기사 실기 4-단답형 문제(4)/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-10-15T09:24:00000Z","summary":"2020 정보 처리 기사 실기 4-단답형 문제(4)입니다 정처기 공부를 할 때 활용하세요"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보 처리 기사 실기 2-단답형 문제(2)","images":["images/1.jpg"],"path":"/2020 정보 처리 기사 실기 2-단답형 문제(2)/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-10-15T09:21:00000Z","summary":"2020 정보 처리 기사 실기 2-단답형 문제(2)입니다 정처기 공부를 할 때 활용하세요"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보 처리 기사 실기 1-단답형 문제(1)","images":["images/1.jpg"],"path":"/2020 정보 처리 기사 실기 1-단답형 문제(1)/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-10-14T16:21:00000Z","summary":"2020 정보 처리 기사 실기 1-단답형 문제(1)입니다 정처기 공부를 할 때 활용하세요"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보 처리 기사 실기 5-정보 관련 용어 정리","images":["images/1.jpg"],"path":"/2020 정보 처리 기사 실기 5-정보 관련 용어 정리/","tags":["정보처리기사 실기","정보처리기사","정처기"],"date":"2020-10-14T02:21:00.000Z","summary":"2020 정보 처리 기사 실기 5-정보 용어 정리 요약 입니다. 정처기 공부를 할 때 활용하세요."}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(5)-프로그래밍 언어 활용(3)","images":["images/2.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(5)-프로그래밍 언어 활용(3)/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-05-03T01:00:00.000Z","summary":"2020 정보처리기사 필기 요점 정리(5)-프로그래밍 언어 활용(3)"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(5)-프로그래밍 언어 활용(2)","images":["images/2.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(5)-프로그래밍 언어 활용(2)/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-05-02T01:00:00.000Z","summary":"응용 SW 기초 기술 활용"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(5)-프로그래밍 언어 활용(1)","images":["images/2.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(5)-프로그래밍 언어 활용(1)/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-05-01T01:00:00.000Z","summary":"2020 정보처리기사 필기 요점 정리(5)-프로그래밍 언어 활용(1)"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(4)-정보시스템 구축 관리(3)","images":["images/2.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(4)-정보시스템 구축 관리(3)/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-04-03T03:05:00.000Z","summary":"정보시스템 구축 관리"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(4)-정보시스템 구축 관리(2)","images":["images/2.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(4)-정보시스템 구축 관리(2)/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-04-02T03:05:00.000Z","summary":"2020 정보처리기사 필기 요점 정리(4)-정보시스템 구축 관리(2)"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(4)-정보시스템 구축 관리(1)","images":["images/2.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(4)-정보시스템 구축 관리(1)/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-04-01T03:05:00.000Z","summary":"2020 정보처리기사 필기 요점 정리(4)-정보시스템 구축 관리(1)"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(3)-소프트웨어 설계(3)","images":["images/2.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(3)-소프트웨어 설계(3)/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-03-03T02:01:00.000Z","summary":"2020 정보처리기사 필기 요점 정리(3)-소프트웨어 설계(3)"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(3)-소프트웨어 설계(2)","images":["images/2.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(3)-소프트웨어 설계(2)/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-03-02T02:01:00.000Z","summary":"2020 정보처리기사 필기 요점 정리(3)-소프트웨어 설계(2)"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(3)-소프트웨어 설계(1)","images":["images/2.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(3)-소프트웨어 설계(1)/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-03-01T02:01:00.000Z","summary":"2020 정보처리기사 필기 요점 정리(3)-소프트웨어 설계(1)"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(2)-소프트웨어 개발(3)","images":["images/2.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(2)-소프트웨어 개발(3)/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-02-03T05:00:00.000Z","summary":"2020 정보처리기사 필기 요점 정리(2)-소프트웨어 개발(3)"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(2)-소프트웨어 개발(2)","images":["images/2.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(2)-소프트웨어 개발(2)/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-02-02T05:00:00.000Z","summary":"2020 정보처리기사 필기 요점 정리(2)-소프트웨어 개발(2)"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(2)-소프트웨어 개발(1)","images":["images/2.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(2)-소프트웨어 개발(1)/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-02-01T05:00:00.000Z","summary":"2020 정보처리기사 필기 요점 정리(2)-소프트웨어 개발(1)"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(1)-데이터베이스 구축(3)","images":["images/2.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(1)-데이터베이스 구축(3)/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-01-03T05:00:00.000Z","summary":"2020 정보처리기사 필기 요점 정리(1)-데이터베이스 구축(3)"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(1)-데이터베이스 구축(2)","images":["images/2.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(1)-데이터베이스 구축(2)/","tags":["정보처리기사 필기","정보처리기사"],"date":"2020-01-02T05:00:00.000Z","summary":"2020 정보처리기사 필기 요점 정리(1)-데이터베이스 구축(2)"}}},{"node":{"frontmatter":{"type":null,"title":"2020 정보처리기사 필기 요점 정리(1)-데이터베이스 구축(1)","images":["images/2.jpg"],"path":"/2020 정보처리기사 필기 요점 정리(1)-데이터베이스 구축(1)/","tags":["정보처리기사 필기","정보처리기사","필기","데이터베이스 구축"],"date":"2020-01-01T05:00:00.000Z","summary":"2020 정보처리기사 필기 요점 정리(1)-데이터베이스 구축(1)"}}},{"node":{"frontmatter":{"type":"portfolio","title":"CAPTURE BLOG","images":["CaptureBlog/images/capture1.png","CaptureBlog/images/capture2.png","CaptureBlog/images/capture3.png","CaptureBlog/images/capture4.png","CaptureBlog/images/capture5.png","CaptureBlog/images/capture6.png"],"path":"/portfolios/CAPTURE BLOG/","tags":null,"date":"2020-01-01T00:00:00.000Z","summary":null}}},{"node":{"frontmatter":{"type":"portfolio","title":"LANGUAGE TOGETHER","images":["languageTogether/images/languagetogether.png","languageTogether/images/languagetogether2.png","languageTogether/images/languagetogether3.png","languageTogether/images/languagetogether4.png","languageTogether/images/languagetogether5.png","languageTogether/images/languagetogether6.png","languageTogether/images/languagetogether7.png","languageTogether/images/languagetogether8.png","languageTogether/images/languagetogether9.png"],"path":"/portfolios/LANGUAGE TOGETHER/","tags":null,"date":"2018-01-01T00:00:00.000Z","summary":null}}},{"node":{"frontmatter":{"type":"portfolio","title":"MOVIE STAR","images":["moviestar/images/moviestar.png","moviestar/images/moviestar2.png","moviestar/images/moviestar3.png","moviestar/images/moviestar4.png"],"path":"/portfolios/MOVIE STAR/","tags":null,"date":"2018-01-01T00:00:00.000Z","summary":null}}},{"node":{"frontmatter":{"type":"resume","title":"Resume","images":null,"path":"/resume/","tags":null,"date":"2000-01-01T00:00:00.000Z","summary":null}}}]}},"pageContext":{}},"staticQueryHashes":["3020484120"]}