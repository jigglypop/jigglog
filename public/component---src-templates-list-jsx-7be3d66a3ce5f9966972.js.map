{"version":3,"sources":["webpack:///./src/components/List/index.jsx","webpack:///./src/templates/List.jsx"],"names":["PostsWrapper","styled","div","ImageWrapper","List","data","location","useState","page","setPage","allPosts","getPosts","postCount","length","posts","slice","CONTENT_PER_PAGE","PREFIX","name","content","className","src","moon","map","node","frontmatter","images","tags","path","otherProps","Card","key","Pagination","count","Math","ceil","size","onChange","event","value","style","listStyle","color","marginBottom","propTypes","PropTypes","shape","isRequired","pageQuery","ListTemplate","props"],"mappings":"89DAYA,IAAMA,EAAeC,UAAOC,IAAV,wEAAGD,CAAH,4VAkCZE,EAAeF,UAAOC,IAAV,wEAAGD,CAAH,0jBA6CZG,EAAO,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAqB,KAAfC,SAAe,EACXC,mBAAS,GADE,IAC5BC,EAD4B,KACtBC,EADsB,KAE7BC,EAAWC,YAASN,GACpBO,EAAYF,EAASG,OACrBC,EAAQJ,EAASK,OACpBP,EAAO,GAAKQ,mBACbR,EAAOQ,oBAKT,OACE,oCACE,kBAAChB,EAAD,KACE,kBAAC,IAAD,KACE,yCAAWiB,SAAX,SACA,0BAAMC,KAAK,WAAWC,QAAO,UAAKF,SAAL,WAE/B,kBAACd,EAAD,KACE,yBAAKiB,UAAU,WACb,kBAAC,IAAD,KACE,yBAAKC,IAAKC,OAEZ,yBAAKF,UAAU,WAAf,eAGJ,yBAAKA,UAAU,YACZN,EAAMS,KACL,oBACEC,KACEC,YAAeC,EAFnB,EAEmBA,OAAQC,EAF3B,EAE2BA,KAAMC,EAFjC,EAEiCA,KAASC,EAF1C,qCAKE,kBAACC,EAAA,EAAD,GACEC,IAAKH,EACLA,KAAMA,EACNF,OAAQA,EACRC,KAAMA,GACFE,OAIV,kBAACG,EAAA,EAAD,CACEC,MAAOC,KAAKC,KAAKvB,EAAYI,oBAC7BR,KAAMA,EACN4B,KAAK,QACLC,SAtCW,SAACC,EAAOC,GAC3B9B,EAAQ8B,IAsCAC,MAAO,CACLC,UAAW,OACXC,MAAO,UACPC,aAAc,eAS5BvC,EAAKwC,UAAY,CACfvC,KAAMwC,IAAUC,MAAM,IAAIC,WAC1BzC,SAAUuC,IAAUC,MAAM,IAAIC,YAGjB3C,QC9IF4C,GAFEC,UANM,SAAAC,GAAK,OACxB,kBAAC,IAAWA,EACV,kBAAC,EAASA,KAMQ","file":"component---src-templates-list-jsx-7be3d66a3ce5f9966972.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport Card from \"~/components/Common/Card\";\r\nimport getPosts from \"~/utils/getPosts\";\r\nimport { PREFIX, CONTENT_PER_PAGE, PAGE_PER_SCREEN } from \"~/constants\";\r\nimport MoonBackgroundAnimation from \"../base/common/LargeMoon.js\";\r\nimport moon from \"../../components/parallax/common/moon.webp\";\r\nimport styled from \"styled-components\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport \"./styled.css\";\r\n\r\nconst PostsWrapper = styled.div`\r\n  background: linear-gradient(90deg, #5c258d, #4389a2) !important;\r\n  margin: auto;\r\n  padding: 120px 100px 100px;\r\n  max-width: 100%;\r\n  font-size: 0;\r\n  .cardpage {\r\n    padding: 100px;\r\n  }\r\n  @media (max-width: 1000px) {\r\n    padding: 70px 16px 0;\r\n  }\r\n\r\n  &:before,\r\n  &:after {\r\n    display: block;\r\n    content: \"\";\r\n    clear: both;\r\n  }\r\n\r\n  h1 {\r\n    margin: 0.67em 0;\r\n    font-size: 32px;\r\n  }\r\n\r\n  time {\r\n    margin: 1em 0;\r\n    font-size: 14px;\r\n  }\r\n  .cardpage {\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst ImageWrapper = styled.div`\r\n  .jb-wrap {\r\n    width: 30%;\r\n    margin: 10px auto;\r\n    position: relative;\r\n  }\r\n  .jb-wrap img {\r\n    width: 100%;\r\n    vertical-align: middle;\r\n  }\r\n  .jb-text {\r\n    color: white;\r\n    font-weight: 800;\r\n    text-shadow: 2px 2px 20px gray;\r\n    font-size: 30px;\r\n    text-align: center;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n  @media (max-width: 600px) {\r\n    .jb-wrap {\r\n      width: 30%;\r\n      margin: 10px auto;\r\n      position: relative;\r\n    }\r\n    .jb-wrap img {\r\n      width: 100%;\r\n      vertical-align: middle;\r\n    }\r\n    .jb-text {\r\n      color: white;\r\n      font-weight: 800;\r\n      text-shadow: 2px 2px 20px gray;\r\n      font-size: 14px;\r\n      text-align: center;\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  }\r\n`;\r\n\r\nconst List = ({ data, location }) => {\r\n  const [page, setPage] = useState(1);\r\n  const allPosts = getPosts(data);\r\n  const postCount = allPosts.length;\r\n  const posts = allPosts.slice(\r\n    (page - 1) * CONTENT_PER_PAGE,\r\n    page * CONTENT_PER_PAGE\r\n  );\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  return (\r\n    <>\r\n      <PostsWrapper>\r\n        <Helmet>\r\n          <title>{`${PREFIX}POST`}</title>\r\n          <meta name=\"og:title\" content={`${PREFIX}POST`} />\r\n        </Helmet>\r\n        <ImageWrapper>\r\n          <div className=\"jb-wrap\">\r\n            <MoonBackgroundAnimation>\r\n              <img src={moon} />\r\n            </MoonBackgroundAnimation>\r\n            <div className=\"jb-text\">BLOG LIST</div>\r\n          </div>\r\n        </ImageWrapper>\r\n        <div className=\"cadepage\">\r\n          {posts.map(\r\n            ({\r\n              node: {\r\n                frontmatter: { images, tags, path, ...otherProps },\r\n              },\r\n            }) => (\r\n              <Card\r\n                key={path}\r\n                path={path}\r\n                images={images}\r\n                tags={tags}\r\n                {...otherProps}\r\n              />\r\n            )\r\n          )}\r\n          <Pagination\r\n            count={Math.ceil(postCount / CONTENT_PER_PAGE)}\r\n            page={page}\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n            style={{\r\n              listStyle: \"none\",\r\n              color: \"primary\",\r\n              marginBottom: \"100px\",\r\n            }}\r\n          />\r\n        </div>\r\n      </PostsWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nList.propTypes = {\r\n  data: PropTypes.shape({}).isRequired,\r\n  location: PropTypes.shape({}).isRequired,\r\n};\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '~/components/layout';\r\nimport List from '~/components/List';\r\n\r\nconst ListTemplate = props => (\r\n  <Layout {...props}>\r\n    <List {...props} />\r\n  </Layout>\r\n);\r\n\r\nexport default ListTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query ListQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n        homepage\r\n      }\r\n    }\r\n    posts: allMarkdownRemark (\r\n      filter: { frontmatter: { hide: { ne: true } } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            type\r\n            title\r\n            images\r\n            path\r\n            tags\r\n            date\r\n            summary\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}