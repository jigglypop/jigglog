{"version":3,"sources":["webpack:///./src/components/Common/SimpleWrapper/index.js","webpack:///./src/components/IconSet/IconSetBig.js","webpack:///./src/components/Portfolios/index.jsx","webpack:///./src/templates/Portfolios.jsx"],"names":["SimpleWrapper","styled","div","LogoItem","props","second","IconSetUnder","IconObject","Grid","container","style","display","justifyContent","width","map","item","index","Math","floor","random","key","replace","toUpperCase","TitleBig","Content","url","name","wrap","Portfolios","parallax","portfolios","data","edges","onClick","useRef","length","scrollTo","ref","pages","backgroundColor","offset","speed","factor","backgroundImage","backgroundSize","node","frontmatter","path","title","description","images","iconset","site","src","require","alt","opacity","alignItems","zIndex","marginTop","to","IconSetBig","PREFIX","content","pageQuery","PortfoliosTemplate"],"mappings":"qHAAA,IAEMA,EAFN,UAEsBC,EAAOC,IAAV,oEAAGD,CAAH,oQA4BJD,O,iOCzBTG,EAAWF,IAAOC,IAAV,2EAAGD,CAAH,2OAOO,SAACG,GAAD,OAAWA,EAAMC,UAqCvBC,EAtBM,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACtB,OACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,MAAO,QAGRN,EAAWO,KAAI,SAACC,EAAMC,GAAP,OACd,kBAACb,EAAD,CACEE,OAAQY,KAAKC,MAAM,IAAAD,KAAKE,UAA8B,GACtDC,IAAKJ,GAFP,IAIID,EAAKM,QAAQ,OAAQ,IAAIC,oBCvB/BC,G,UATiBtB,YAAOD,KAAV,sEAAGC,CAAH,mEASHA,IAAOC,IAAV,uEAAGD,CAAH,qNAmBRuB,EAAUvB,IAAOC,IAAV,sEAAGD,CAAH,6GAQPwB,EAAM,SAACC,GAAD,IAAOC,EAAP,wEAERA,EAAO,OAAS,GAFR,2DAGyCD,EAHzC,eAIRC,EAAO,IAAM,KAkHFC,EA/GI,SAAC,GAIb,IACDC,EAHmBC,EAEnB,EAHJC,KACED,WAAcE,MAMVC,GADMC,mBACI,SAAClB,GACXc,EAAWK,OAAS,IAAMnB,EAC5Ba,EAASO,SAAS,GAElBP,EAASO,SAASpB,EAAQ,KAG9B,OACE,oCACE,kBAAC,WAAD,CAAUqB,IAAK,SAACA,GAAD,OAAUR,EAAWQ,GAAMC,MAAOR,EAAWK,OACxDzB,MAAO,CACL6B,gBAAiB,6CAErB,kBAAC,gBAAD,CACEC,OAAQ,EACRC,MAAO,EACPC,OAAQ,EACRhC,MAAO,CACLiC,gBAAiBlB,EAAI,SAAS,GAC9BmB,eAAgB,WAGnBd,EAAWhB,KACV,WAaEE,GAbF,QAEI6B,KACEC,YACEC,EAJR,EAIQA,KACAC,EALR,EAKQA,MACAC,EANR,EAMQA,YANR,IAOQC,cAPR,MAOiB,GAPjB,EAQQC,EARR,EAQQA,QARR,EASQC,KATR,OAeE,yBAAKhC,IAAKJ,GACR,kBAAC,gBAAD,CAAewB,OAAQxB,EAAOyB,MAAO,GACnC,yBACEY,IAAKC,UAAQ,YAAeJ,EAAO,KACnCK,IAAI,YACJ7C,MAAO,CAAE8C,QAAS,IAClBvB,QAAS,kBAAMA,EAAQjB,OAG3B,kBAAC,gBAAD,CACEwB,OAAQxB,EACRyB,OAAQ,EACR/B,MAAO,CACLC,QAAS,OACT8C,WAAY,SACZ7C,eAAgB,SAChB8C,OAAQ,IACRC,UAAW,UAGb,kBAAC,OAAD,CAAMC,GAAIb,GACR,kBAACxB,EAAD,KAAWyB,KAIf,kBAAC,gBAAD,CACER,OAAQxB,EACRyB,OAAQ,EACR/B,MAAO,CACLC,QAAS,OACT8C,WAAY,SACZ7C,eAAgB,UAElBqB,QAAS,kBAAMA,EAAQjB,KAEvB,kBAACQ,EAAD,KAAUyB,IAGZ,kBAAC,gBAAD,CACET,OAAQxB,EACRyB,OAAQ,EACR/B,MAAO,CACLC,QAAS,OACT8C,WAAY,SACZ7C,eAAgB,SAChB+C,UAAW,QAEb1B,QAAS,kBAAMA,EAAQjB,KAEvB,kBAAC6C,EAAD,CAAYtD,WAAY4C,UAMlC,kBAAC,IAAD,KACE,yCAAWW,SAAX,eACA,0BAAMpC,KAAK,WAAWqC,QAAO,UAAKD,SAAL,mBC/IxBE,GAFEC,UANY,SAAC7D,GAAD,OACzB,kBAAC,IAAWA,EACV,kBAAC,EAAeA,KAME","file":"component---src-templates-portfolios-jsx-d89cacca2dfd2fc8ff3b.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst SimpleWrapper = styled.div`\r\n  margin: auto;\r\n  padding: 120px 0 0;\r\n  max-width: 1200px;\r\n  font-size: 16px;\r\n  background-image: white;\r\n  @media (max-width: 614px) {\r\n    padding: 70px 16px 0;\r\n  }\r\n\r\n  &:before,\r\n  &:after {\r\n    display: block;\r\n    content: \"\";\r\n    clear: both;\r\n  }\r\n\r\n  h1 {\r\n    margin: 0.67em 0;\r\n    font-size: 36px;\r\n  }\r\n\r\n  time {\r\n    margin: 1em 0;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport default SimpleWrapper;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst LogoItem = styled.div`\r\n  color: white;\r\n  text-shadow: 2px 2px 20px white;\r\n  font-weight: 800;\r\n\r\n  font-size: 15px;\r\n  margin: 5px;\r\n  animation: blink ${(props) => props.second}s ease-in-out infinite alternate;\r\n  @media (max-width: 600px) {\r\n    font-size: 10px;\r\n  }\r\n\r\n  @keyframes blink {\r\n    30% {\r\n      opacity: 0.4;\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst IconSetUnder = ({ IconObject }) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        width: \"40%\",\r\n      }}\r\n    >\r\n      {IconObject.map((item, index) => (\r\n        <LogoItem\r\n          second={Math.floor(Math.random() * (2 - 0.5 + 0.1)) + 0.5}\r\n          key={index}\r\n        >\r\n          #{item.replace(\"logo\", \"\").toUpperCase()}\r\n        </LogoItem>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default IconSetUnder;\r\n","import React, { useRef } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { Link } from \"gatsby\";\r\nimport { PREFIX } from \"~/constants\";\r\nimport styled from \"styled-components\";\r\nimport SimpleWrapper from \"~/components/Common/SimpleWrapper\";\r\nimport { Parallax, ParallaxLayer } from \"react-spring/renderprops-addons\";\r\nimport IconSetBig from \"../IconSet/IconSetBig\";\r\nimport \"./styled.css\";\r\n\r\nexport const Wrapper = styled(SimpleWrapper)`\r\n\r\n  padding: 100px 0 0;\r\n\r\n  @media (max-width: 414px) {\r\n    padding: 70px 0 0;\r\n  }\r\n`;\r\n\r\nconst TitleBig = styled.div`\r\n  animation: blink 1.2s ease-in-out infinite alternate;\r\n\r\n  @keyframes blink {\r\n    50% {\r\n      opacity: 0.5;\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n  font-size: 50px;\r\n  font-weight: 800;\r\n  text-shadow: 4px 4px 40px white;\r\n  @media (max-width: 600px) {\r\n    font-size: 30px;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 800;\r\n  text-shadow: 4px 4px 40px white;\r\n  @media (max-width: 600px) {\r\n    font-size: 15px;\r\n  }\r\n`;\r\nconst url = (name, wrap = false) =>\r\n  `${\r\n    wrap ? \"url(\" : \"\"\r\n  }https://awv3node-homepage.surge.sh/build/assets/${name}.svg${\r\n    wrap ? \")\" : \"\"\r\n  }`;\r\n\r\nconst Portfolios = ({\r\n  data: {\r\n    portfolios: { edges: portfolios },\r\n  },\r\n}) => {\r\n  let parallax;\r\n\r\n  const ref = useRef();\r\n  const onClick = (index) => {\r\n    if (portfolios.length - 1 === index) {\r\n      parallax.scrollTo(0);\r\n    } else {\r\n      parallax.scrollTo(index + 1);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Parallax ref={(ref) => (parallax = ref)} pages={portfolios.length}\r\n          style={{\r\n            backgroundColor: \"linear-gradient(45deg, #8e2de2, #4a00e0)\",\r\n          }}>\r\n        <ParallaxLayer\r\n          offset={0}\r\n          speed={0}\r\n          factor={3}\r\n          style={{\r\n            backgroundImage: url(\"stars\", true),\r\n            backgroundSize: \"cover\",\r\n          }}\r\n        />\r\n        {portfolios.map(\r\n          (\r\n            {\r\n              node: {\r\n                frontmatter: {\r\n                  path,\r\n                  title,\r\n                  description,\r\n                  images = [],\r\n                  iconset,\r\n                  site,\r\n                },\r\n              },\r\n            },\r\n            index\r\n          ) => (\r\n            <div key={index}>\r\n              <ParallaxLayer offset={index} speed={1}>\r\n                <img\r\n                  src={require(`~/resources/${images[0]}`)}\r\n                  alt=\"portfolio\"\r\n                  style={{ opacity: 0.3 }}\r\n                  onClick={() => onClick(index)}\r\n                />\r\n              </ParallaxLayer>\r\n              <ParallaxLayer\r\n                offset={index}\r\n                speed={-0}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  zIndex: \"6\",\r\n                  marginTop: \"-10vw\",\r\n                }}\r\n              >\r\n                <Link to={path}>\r\n                  <TitleBig>{title}</TitleBig>\r\n                </Link>\r\n              </ParallaxLayer>\r\n\r\n              <ParallaxLayer\r\n                offset={index}\r\n                speed={-0}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onClick={() => onClick(index)}\r\n              >\r\n                <Content>{description}</Content>\r\n              </ParallaxLayer>\r\n\r\n              <ParallaxLayer\r\n                offset={index}\r\n                speed={-0}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginTop: \"10vw\",\r\n                }}\r\n                onClick={() => onClick(index)}\r\n              >\r\n                <IconSetBig IconObject={iconset} />\r\n              </ParallaxLayer>\r\n            </div>\r\n          )\r\n        )}\r\n      </Parallax>\r\n      <Helmet>\r\n        <title>{`${PREFIX}PORTFOLIOS`}</title>\r\n        <meta name=\"og:title\" content={`${PREFIX}PORTFOLIOS`} />\r\n      </Helmet>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Portfolios;\r\n","import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"~/components/layout\";\r\nimport Portfolios from \"~/components/Portfolios\";\r\n\r\nconst PortfoliosTemplate = (props) => (\r\n  <Layout {...props}>\r\n    <Portfolios {...props} />\r\n  </Layout>\r\n);\r\n\r\nexport default PortfoliosTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query PortfoliosQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n        homepage\r\n      }\r\n    }\r\n    portfolios: allMarkdownRemark(\r\n      filter: { frontmatter: { type: { eq: \"portfolio\" }, hide: { ne: true } } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            type\r\n            title\r\n            path\r\n            images\r\n            date\r\n            description\r\n            iconset\r\n            site\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}