{"version":3,"sources":["webpack:///./src/components/Common/Card/styled.js","webpack:///./src/components/Common/Card/index.jsx","webpack:///./src/components/Common/PostsWrapper/index.js","webpack:///./src/components/CategorizedList/index.jsx","webpack:///./src/templates/CategorizedList.jsx","webpack:///./src/components/Common/ClipText/index.js","webpack:///./src/utils/getPosts.js","webpack:///./src/components/Common/LargeWrapper/index.js","webpack:///./src/components/Common/List/styled.js","webpack:///./src/components/Common/OuterButton/index.js"],"names":["TagWrapper","styled","div","StyledCard","DivWrapper","Picture","img","Content","Card","tags","path","images","title","date","summary","to","Grid","container","item","xs","src","includes","require","className","map","tag","key","OuterButton","fontSize","height","borderColor","color","split","join","replace","PostsWrapper","CategorizedList","data","location","useState","page","setPage","category","pathname","allPosts","getPosts","filter","c","node","frontmatter","decodeURI","postCount","length","posts","slice","CONTENT_PER_PAGE","categorySet","type","push","result","reduce","object","currentValue","results","i","name","content","LargeWrapper","ClipText","style","display","otherProps","Pagination","count","Math","ceil","size","onChange","event","value","listStyle","marginBottom","pageQuery","CategorizedListTemplate","props","edges","hide","POST","ListWrapper","ListImage","ListTitle","ListCategory","ListContent","ListPage","button","borderSize"],"mappings":"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","file":"component---src-templates-categorized-list-jsx-5da350fa772be7a5977d.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const TagWrapper = styled.div`\r\n  font-weight: 800;\r\n`;\r\n\r\nexport const StyledCard = styled.div`\r\n  .grid {\r\n    margin-left: -5%;\r\n  }\r\n  @media (max-width: 1000px) {\r\n    .grid {\r\n      margin-left: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DivWrapper = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  hr {\r\n    margin: 10px;\r\n  }\r\n`;\r\n\r\nexport const Picture = styled.img`\r\n  width: 70%;\r\n  object-fit: cover;\r\n  margin-top: 5%;\r\n  margin-bottom: 5%;\r\n  margin-left: 5%;\r\n\r\n  @media (max-width: 1000px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  margin: 10px;\r\n  height: 200px;\r\n  div {\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n  }\r\n  h1.title {\r\n    margin-bottom: 20px;\r\n    line-height: 1.5em;\r\n    font-size: 20px;\r\n    font-weight: 800;\r\n  }\r\n  h1.summary {\r\n    margin-bottom: 20px;\r\n    line-height: 1.5em;\r\n    font-size: 13px;\r\n    font-weight: 800;\r\n  }\r\n  h1.date {\r\n    color: #66d9ef;\r\n    line-height: 1.5em;\r\n    font-size: 10px;\r\n    font-weight: 800;\r\n  }\r\n  @media (max-width: 1000px) {\r\n    h1.title {\r\n      line-height: 1.5em;\r\n      font-size: 15px;\r\n      font-weight: 800;\r\n    }\r\n    h1.summary {\r\n      line-height: 1.5em;\r\n      font-size: 10px;\r\n      font-weight: 800;\r\n    }\r\n    h1.date {\r\n      color: #66d9ef;\r\n      line-height: 1.5em;\r\n      font-size: 8px;\r\n      font-weight: 800;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TagItem = styled.div`\r\n  background: linear-gradient(45deg, #8a2387, #e94057, #f64f59) !important;\r\n  margin: 2px;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  padding-bottom: 2px;\r\n  padding-top: 2px;\r\n  border-radius: 10px;\r\n  margin-top: 30px;\r\n\r\n  h1.tagitem {\r\n    font-size: 10px;\r\n  }\r\n  @media (max-width: 1000px) {\r\n    h1.tagitem {\r\n      font-size: 6px;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport { useSpring } from \"react-spring\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport OuterButton from '../OuterButton'\r\nimport {\r\n  TagItem,\r\n  TagWrapper,\r\n  StyledCard,\r\n  DivWrapper,\r\n  Content,\r\n  Picture,\r\n} from \"./styled\";\r\n\r\n\r\nconst Card = ({ tags, path, images, title, date, summary }) => {\r\n\r\n  return (\r\n    <DivWrapper>\r\n        <Link to={path}>\r\n          <StyledCard>\r\n            <Content>\r\n              <Grid container>\r\n\r\n                <Grid item xs={3}>\r\n                  <Picture\r\n                    src={\r\n                      images.includes(\"//\")\r\n                        ? images\r\n                        : require(`~/resources/${images}`)\r\n                    }\r\n                  />\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12} >\r\n                  <h1 className=\"title\">{title}</h1>\r\n                  <h1 className=\"summary\">{summary}</h1>\r\n\r\n                  <TagWrapper>\r\n                    {tags.map((tag) => (\r\n                      <Link key={tag} to={`/tags/${tag}/1`}>\r\n                        <OuterButton fontSize=\"10px\" height=\"38px\" borderColor=\"#66d9ef\" color=\"#66d9ef\">\r\n                          <h4 className=\"tagitem\">#{tag}</h4>\r\n                        </OuterButton>\r\n                      </Link>\r\n                    ))}\r\n                  </TagWrapper>\r\n                  <h1 className=\"date\">\r\n                    {date\r\n                      ? date\r\n                          .split(\"T\")\r\n                          .join(\" \")\r\n                          .replace(\".000Z\", \"\")\r\n                      : date}\r\n                  </h1>\r\n\r\n                </Grid>\r\n              </Grid>\r\n            </Content>\r\n          </StyledCard>\r\n        </Link>\r\n      <hr />\r\n    </DivWrapper>\r\n  );\r\n};\r\n\r\n\r\nexport default Card;\r\n","import styled from \"styled-components\";\r\n\r\nconst PostsWrapper = styled.div`\r\n  margin: auto;\r\n  padding-top: 10vw;\r\n  padding-bottom: 10vw;\r\n  padding-left: 3vw;\r\n  padding-right: 3vw;\r\n  max-width: 100%;\r\n  font-size: 0;\r\n\r\n  @media (max-width: 1000px) {\r\n    padding: 3%;\r\n  }\r\n\r\n  &:before,\r\n  &:after {\r\n    display: block;\r\n    content: \"\";\r\n    clear: both;\r\n  }\r\n\r\n  h1 {\r\n    margin: 0.67em 0;\r\n    font-size: 32px;\r\n  }\r\n\r\n  time {\r\n    margin: 1em 0;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport default PostsWrapper;\r\n","import React, { useState } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport Card from \"~/components/Common/Card\";\r\nimport getPosts from \"~/utils/getPosts\";\r\nimport { CONTENT_PER_PAGE } from \"~/constants\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { Link } from \"gatsby\";\r\nimport PostsWrapper from \"../Common/PostsWrapper\";\r\nimport LargeWrapper from \"../Common/LargeWrapper\";\r\nimport OuterButton from \"../Common/OuterButton\";\r\nimport ClipText from \"../Common/ClipText\";\r\nimport { \r\n  ListWrapper, \r\n  ListImage, \r\n  ListTitle, \r\n  ListContent, \r\n  ListPage, \r\n  ListCategory\r\n} from '../Common/List/styled'\r\n\r\nconst CategorizedList = ({ data, location }) => {\r\n  const [page, setPage] = useState(1);\r\n  const [, , category] = location.pathname.split(\"/\");\r\n  const edgeSet = getPosts(data).filter(\r\n    ({\r\n      node: {\r\n        frontmatter: { category: c },\r\n      },\r\n    }) => decodeURI(category) === c\r\n  );\r\n  const allPosts = edgeSet;\r\n  const postCount = allPosts.length;\r\n  const posts = allPosts.slice(\r\n    (page - 1) * CONTENT_PER_PAGE,\r\n    page * CONTENT_PER_PAGE\r\n  );\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  // 카테고리셋\r\n  const categorySet = [];\r\n  getPosts(data).filter(({ node: { frontmatter: { type, category } } }) =>\r\n    type === null ? categorySet.push(category) : \"\"\r\n  );\r\n  const result = categorySet.reduce((object, currentValue) => {\r\n    if (!object[currentValue]) {\r\n      object[currentValue] = { key: currentValue, length: 0 };\r\n    }\r\n    object[currentValue][\"length\"]++;\r\n    return object;\r\n  }, {});\r\n\r\n  const results = [];\r\n  for (var i in result) {\r\n    results.push(result[i]);\r\n  }\r\n  return (\r\n    <>\r\n      <PostsWrapper>\r\n        <Helmet>\r\n          <title>{decodeURI(category)}</title>\r\n          <meta name=\"og:title\" content={decodeURI(category)} />\r\n        </Helmet>\r\n        <LargeWrapper>\r\n          <ListWrapper>\r\n            <ListImage>\r\n              <ClipText>\r\n                <h1>CATEGORY</h1>\r\n              </ClipText>\r\n            </ListImage>\r\n            <ListTitle>\r\n                <h3>카테고리</h3>\r\n            </ListTitle>\r\n            <ListCategory>\r\n              <div>\r\n              {results.map(({ key, length }) => (\r\n                <div style={{ display: \"inline-block\"}}>\r\n                  <Link to={`/categories/${key}/1`}>\r\n                    <OuterButton>\r\n                      <h4>{key}</h4>\r\n                    </OuterButton>\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n              </div>\r\n            </ListCategory>\r\n            <ListContent>\r\n            {posts.length === 0 ? <div>No posts.</div> : null}\r\n            {posts.map(\r\n              ({\r\n                node: {\r\n                  frontmatter: { images, tags, path, ...otherProps },\r\n                },\r\n              }) => (\r\n                <Card\r\n                  key={path}\r\n                  path={path}\r\n                  images={images}\r\n                  tags={tags}\r\n                  {...otherProps}\r\n                />\r\n              )\r\n            )}\r\n            </ListContent>\r\n            <ListPage>\r\n            <Pagination\r\n                count={Math.ceil(postCount / CONTENT_PER_PAGE)}\r\n                page={page}\r\n                size=\"large\"\r\n                onChange={handleChange}\r\n                style={{\r\n                  listStyle: \"none\",\r\n                  color: \"primary\",\r\n                  marginBottom: \"100px\",\r\n                }}\r\n              />\r\n            </ListPage>\r\n          </ListWrapper>\r\n        </LargeWrapper>\r\n      </PostsWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default CategorizedList;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '~/components/layout';\r\nimport CategorizedList from '~/components/CategorizedList';\r\n\r\nconst CategorizedListTemplate = props => (\r\n  <Layout {...props}>\r\n    <CategorizedList {...props} />\r\n  </Layout>\r\n);\r\n\r\nexport default CategorizedListTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query CategorizedListQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n        homepage\r\n      }\r\n    }\r\n    posts: allMarkdownRemark (\r\n      filter: { frontmatter: { hide: { ne: true } } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            type\r\n            title\r\n            category\r\n            images\r\n            path\r\n            tags\r\n            date\r\n            summary\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components'\r\n\r\nconst ClipText = styled.div`\r\n  background-size: cover;\r\n  position: relative; \r\n  height: 100%; \r\n\r\n  h1 {\r\n    background-color:black;\r\n    color:white;\r\n    font-size: 10vw; \r\n    font-weight: 800;\r\n    margin: 0 auto; \r\n    padding: 10px;\r\n    width: 95%;\r\n    text-align: center; \r\n    position: absolute; \r\n    top: 50%; \r\n    left: 50%; \r\n    transform: translate(-50%, -50%); \r\n    mix-blend-mode: multiply;\r\n    opacity:0.8\r\n  }\r\n`\r\n\r\nexport default ClipText","import { POST } from \"~/constants\";\r\n\r\nconst getPosts = (data) =>\r\n  data.posts.edges.filter(\r\n    ({\r\n      node: {\r\n        frontmatter: { hide, type },\r\n      },\r\n    }) => hide !== true && (type || POST) === POST\r\n  );\r\n\r\nexport default getPosts;\r\n","import styled from \"styled-components\";\r\n\r\nconst LargeWrapper = styled.div`\r\n  width: 100%;\r\n  background: rgb(31, 31, 36);\r\n  box-shadow: 6px 6px 8px black;\r\n  .pagination {\r\n    margin-top: 5%;\r\n    margin-left: 45%;\r\n  }\r\n  padding-bottom: 1%;\r\n`;\r\n\r\nexport default LargeWrapper;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ListWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 200px 100px 100px 1fr 200px;\r\n`;\r\n\r\nexport const ListImage = styled.div`\r\n    grid-row: 1/2;\r\n    background-image: url('/back.jpg');\r\n    background-size: cover;\r\n`;\r\n\r\nexport const ListTitle = styled.div`\r\n    grid-row: 2/3;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    background-color: black;\r\n    h3 {\r\n        font-size: 32px;\r\n        font-weight: 800;\r\n        color: white;\r\n    }\r\n`;\r\n\r\nexport const ListCategory = styled.div`\r\n    grid-row: 3/4;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    background-color: black;\r\n    overflow: scroll;\r\n    h3 {\r\n        font-size: 28px;\r\n        font-weight: 800;\r\n        color: white;\r\n    }\r\n`;\r\n\r\nexport const ListContent = styled.div`\r\n    grid-row: 4/5;\r\n`;\r\n\r\nexport const ListPage = styled.div`\r\n    grid-row: 5/6;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n`;","import styled from \"styled-components\";\r\n\r\n\r\nconst OuterButton = styled.button`\r\n  transition: all .2s ease-in-out;\r\n  transition: 0.5s;\r\n  border: ${props => props.borderSize? props.borderSize : '2px'} solid ${props => props.borderColor? props.borderColor: '#FF416C'};\r\n  background-color: transparent;\r\n  height: ${props => props.height? props.height : '40px'};\r\n  min-width: 150px;\r\n  margin: 5px;\r\n  h4 {\r\n    font-size: ${props => props.fontSize? props.fontSize : '12px'};\r\n    padding: 10px;\r\n    color: ${props => props.borderColor? props.borderColor: '#FF416C'};\r\n  }\r\n  cursor: pointer;\r\n  &:hover{\r\n      background: ${props => props.borderColor? props.borderColor: '#FF416C'};\r\n      transform: scale(1.1); \r\n      h4{\r\n          color: black;\r\n      }\r\n  }\r\n`;\r\nexport default OuterButton;"],"sourceRoot":""}