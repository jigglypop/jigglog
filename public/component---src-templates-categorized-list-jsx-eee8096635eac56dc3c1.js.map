{"version":3,"sources":["webpack:///./src/components/CategorizedList/styled.js","webpack:///./src/components/CategorizedList/index.jsx","webpack:///./src/templates/CategorizedList.jsx","webpack:///./src/components/base/common/moon.webp","webpack:///./src/components/base/common/Circle.js","webpack:///./src/components/base/common/LargeMoon.js"],"names":["CategoryWrapper","styled","div","ListImage","ListTitle","ListCategory","ListContent","ListPage","CategorizedList","data","location","useState","page","setPage","category","pathname","split","allPosts","getPosts","filter","c","node","frontmatter","decodeURI","postCount","length","posts","slice","CONTENT_PER_PAGE","categorySet","type","push","result","reduce","object","currentValue","key","results","i","PostsWrapper","name","content","LargeWrapper","ClipText","map","style","display","to","OuterButton","images","tags","path","otherProps","Card","Pagination","count","Math","ceil","size","onChange","event","value","listStyle","color","marginBottom","pageQuery","CategorizedListTemplate","props","module","exports","animated","MoonBackgroundAnimation","keyframes","Circle","moon"],"mappings":"+eAEaA,EAAkBC,IAAOC,IAAV,8EAAGD,CAAH,kEAKfE,EAAYF,IAAOC,IAAV,wEAAGD,CAAH,mBAITG,EAAYH,IAAOC,IAAV,wEAAGD,CAAH,kKAcTI,EAAeJ,IAAOC,IAAV,2EAAGD,CAAH,kLAeZK,EAAcL,IAAOC,IAAV,0EAAGD,CAAH,mBAIXM,EAAWN,IAAOC,IAAV,uEAAGD,CAAH,4F,0gDCxBrB,IAyGeO,EAzGS,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAAe,IACtBC,mBAAS,GADa,GACvCC,EADuC,KACjCC,EADiC,KAEnCC,EAFmC,EAEvBJ,EAASK,SAASC,MAAM,KAFD,MAUxCC,EAPUC,YAAST,GAAMU,QAC7B,gBAE6BC,EAF7B,EACEC,KACEC,YAAeR,SAFnB,OAIMS,UAAUT,KAAcM,KAG1BI,EAAYP,EAASQ,OACrBC,EAAQT,EAASU,OACpBf,EAAO,GAAKgB,mBACbhB,EAAOgB,oBAMHC,EAAc,GACpBX,YAAST,GAAMU,QAAO,oBAAGE,KAAQC,YAAeQ,EAA1B,EAA0BA,KAAMhB,EAAhC,EAAgCA,SAAhC,OACX,OAATgB,EAAgBD,EAAYE,KAAKjB,GAAY,MAE/C,IAAMkB,EAASH,EAAYI,QAAO,SAACC,EAAQC,GAKzC,OAJKD,EAAOC,KACVD,EAAOC,GAAgB,CAAEC,IAAKD,EAAcV,OAAQ,IAEtDS,EAAOC,GAAP,SACOD,IACN,IAEGG,EAAU,GAChB,IAAK,IAAIC,KAAKN,EACZK,EAAQN,KAAKC,EAAOM,IAEtB,OACE,oCACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,+BAAQhB,UAAUT,IAClB,0BAAM0B,KAAK,WAAWC,QAASlB,UAAUT,MAE3C,kBAAC4B,EAAA,EAAD,KACE,kBAAC1C,EAAD,KACE,kBAACG,EAAD,KACE,kBAACwC,EAAA,EAAD,KACE,0CAGJ,kBAACvC,EAAD,KACI,qCAEJ,kBAACC,EAAD,KACE,6BACCgC,EAAQO,KAAI,gBAAGR,EAAH,EAAGA,IAAH,EAAQX,OAAR,OACX,yBAAKoB,MAAO,CAAEC,QAAS,iBACrB,kBAAC,OAAD,CAAMC,GAAE,sBAAiBX,EAAjB,OACN,kBAACY,EAAA,EAAD,KACE,4BAAKZ,WAOf,kBAAC9B,EAAD,KACkB,IAAjBoB,EAAMD,OAAe,0CAAuB,KAC5CC,EAAMkB,KACL,oBACEvB,KACEC,YAAe2B,EAFnB,EAEmBA,OAAQC,EAF3B,EAE2BA,KAAMC,EAFjC,EAEiCA,KAASC,EAF1C,qCAKE,kBAACC,EAAA,EAAD,GACEjB,IAAKe,EACLA,KAAMA,EACNF,OAAQA,EACRC,KAAMA,GACFE,QAKV,kBAAC7C,EAAD,KACA,kBAAC+C,EAAA,EAAD,CACIC,MAAOC,KAAKC,KAAKjC,EAAYI,oBAC7BhB,KAAMA,EACN8C,KAAK,QACLC,SAzEO,SAACC,EAAOC,GAC3BhD,EAAQgD,IAyEIhB,MAAO,CACLiB,UAAW,OACXC,MAAO,UACPC,aAAc,iBCpGnBC,GAFEC,UANiB,SAAAC,GAAK,OACnC,kBAAC,IAAWA,EACV,kBAAC,EAAoBA,KAMH,e,qBCbtBC,EAAOC,QAAU,IAA0B,qD,8DCG5BpE,cAAOqE,WAASpE,KAA/B,6DAAeD,CAAf,wB,qBCGMsE,EAA0BC,YAAH,gEAKdvE,YAAOwE,GAAtB,gEAAexE,CAAf,+GAG0ByE,IAEXH","file":"component---src-templates-categorized-list-jsx-eee8096635eac56dc3c1.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const CategoryWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 200px 100px 100px 1fr 200px;\r\n`;\r\n\r\nexport const ListImage = styled.div`\r\n    grid-row: 1/2;\r\n`;\r\n\r\nexport const ListTitle = styled.div`\r\n    grid-row: 2/3;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    background-color: black;\r\n    h3 {\r\n        font-size: 32px;\r\n        font-weight: 800;\r\n        color: white;\r\n    }\r\n`;\r\n\r\nexport const ListCategory = styled.div`\r\n    grid-row: 3/4;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    background-color: black;\r\n    overflow: scroll;\r\n    h3 {\r\n        font-size: 28px;\r\n        font-weight: 800;\r\n        color: white;\r\n    }\r\n`;\r\n\r\nexport const ListContent = styled.div`\r\n    grid-row: 4/5;\r\n`;\r\n\r\nexport const ListPage = styled.div`\r\n    grid-row: 5/6;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n`;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport Card from \"~/components/Common/Card\";\r\nimport getPosts from \"~/utils/getPosts\";\r\nimport { CONTENT_PER_PAGE } from \"~/constants\";\r\nimport MoonBackgroundAnimation from \"../base/common/LargeMoon.js\";\r\nimport moon from \"../../components/parallax/common/moon.webp\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nimport { Link } from \"gatsby\";\r\nimport PostsWrapper from \"../Common/PostsWrapper\";\r\nimport ImageWrapper from \"../Common/ImageWrapper\";\r\n// import CategoryItem from \"../Common/CategoryItem\";\r\nimport LargeWrapper from \"../Common/LargeWrapper\";\r\nimport OuterButton from \"../Common/OuterButton\";\r\nimport ClipText from \"../Common/ClipText\";\r\nimport { CategoryWrapper, ListImage, ListTitle, ListContent, ListPage, ListCategory } from './styled'\r\n\r\nconst CategorizedList = ({ data, location }) => {\r\n  const [page, setPage] = useState(1);\r\n  const [, , category] = location.pathname.split(\"/\");\r\n  const edgeSet = getPosts(data).filter(\r\n    ({\r\n      node: {\r\n        frontmatter: { category: c },\r\n      },\r\n    }) => decodeURI(category) === c\r\n  );\r\n  const allPosts = edgeSet;\r\n  const postCount = allPosts.length;\r\n  const posts = allPosts.slice(\r\n    (page - 1) * CONTENT_PER_PAGE,\r\n    page * CONTENT_PER_PAGE\r\n  );\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  // 카테고리셋\r\n  const categorySet = [];\r\n  getPosts(data).filter(({ node: { frontmatter: { type, category } } }) =>\r\n    type === null ? categorySet.push(category) : \"\"\r\n  );\r\n  const result = categorySet.reduce((object, currentValue) => {\r\n    if (!object[currentValue]) {\r\n      object[currentValue] = { key: currentValue, length: 0 };\r\n    }\r\n    object[currentValue][\"length\"]++;\r\n    return object;\r\n  }, {});\r\n\r\n  const results = [];\r\n  for (var i in result) {\r\n    results.push(result[i]);\r\n  }\r\n  return (\r\n    <>\r\n      <PostsWrapper>\r\n        <Helmet>\r\n          <title>{decodeURI(category)}</title>\r\n          <meta name=\"og:title\" content={decodeURI(category)} />\r\n        </Helmet>\r\n        <LargeWrapper>\r\n          <CategoryWrapper>\r\n            <ListImage>\r\n              <ClipText>\r\n                <h1>CATEGORY</h1>\r\n              </ClipText>\r\n            </ListImage>\r\n            <ListTitle>\r\n                <h3>카테고리</h3>\r\n            </ListTitle>\r\n            <ListCategory>\r\n              <div>\r\n              {results.map(({ key, length }) => (\r\n                <div style={{ display: \"inline-block\"}}>\r\n                  <Link to={`/categories/${key}/1`}>\r\n                    <OuterButton>\r\n                      <h4>{key}</h4>\r\n                    </OuterButton>\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n              </div>\r\n            </ListCategory>\r\n            <ListContent>\r\n            {posts.length === 0 ? <div>No posts.</div> : null}\r\n            {posts.map(\r\n              ({\r\n                node: {\r\n                  frontmatter: { images, tags, path, ...otherProps },\r\n                },\r\n              }) => (\r\n                <Card\r\n                  key={path}\r\n                  path={path}\r\n                  images={images}\r\n                  tags={tags}\r\n                  {...otherProps}\r\n                />\r\n              )\r\n            )}\r\n            </ListContent>\r\n            <ListPage>\r\n            <Pagination\r\n                count={Math.ceil(postCount / CONTENT_PER_PAGE)}\r\n                page={page}\r\n                size=\"large\"\r\n                onChange={handleChange}\r\n                style={{\r\n                  listStyle: \"none\",\r\n                  color: \"primary\",\r\n                  marginBottom: \"100px\",\r\n                }}\r\n              />\r\n            </ListPage>\r\n          </CategoryWrapper>\r\n        </LargeWrapper>\r\n      </PostsWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default CategorizedList;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '~/components/layout';\r\nimport CategorizedList from '~/components/CategorizedList';\r\n\r\nconst CategorizedListTemplate = props => (\r\n  <Layout {...props}>\r\n    <CategorizedList {...props} />\r\n  </Layout>\r\n);\r\n\r\nexport default CategorizedListTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query CategorizedListQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n        homepage\r\n      }\r\n    }\r\n    posts: allMarkdownRemark (\r\n      filter: { frontmatter: { hide: { ne: true } } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            type\r\n            title\r\n            category\r\n            images\r\n            path\r\n            tags\r\n            date\r\n            summary\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","module.exports = __webpack_public_path__ + \"static/moon-f3a8c40e82bf8b0f8d61a88ddb7d34e8.webp\";","import styled from \"styled-components\";\r\nimport { animated } from \"react-spring/renderprops\";\r\n\r\nexport default styled(animated.div)`\r\n  /*border: 4px solid ${(props) => props.color};*/\r\n  border-radius: 50%;\r\n`;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nimport Circle from \"./Circle\";\r\nimport moon from \"./moon.webp\";\r\n// import moon from \"./moon.png\";\r\n\r\nconst MoonBackgroundAnimation = keyframes`\r\n  from {transform: rotate(0deg);}\r\n  to {transform: rotate(360deg);}\r\n`;\r\n\r\nexport default styled(Circle)`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${moon});\r\n  background-size: cover;\r\n  animation: ${MoonBackgroundAnimation} 120s linear infinite;\r\n`;\r\n"],"sourceRoot":""}