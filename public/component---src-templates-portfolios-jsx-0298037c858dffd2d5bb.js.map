{"version":3,"sources":["webpack:///./src/components/Common/SimpleWrapper/index.js","webpack:///./src/components/IconSet/IconSetBig.js","webpack:///./src/components/Portfolios/index.jsx","webpack:///./src/templates/Portfolios.jsx"],"names":["SimpleWrapper","styled","div","LogoImage","img","IconSetUnder","IconObject","style","display","justifyContent","Grid","container","width","indexOf","item","xs","src","htmllogo","csslogo","javascriptlogo","awslogo","cpluslogo","clogo","pythonlogo","javalogo","dartlogo","mysqllogo","djangologo","nodejslogo","flasklogo","springlogo","vuelogo","reactlogo","reduxlogo","gatsbylogo","tensorflowlogo","jquerylogo","Wrapper","TitleBig","Content","url","name","wrap","Portfolios","parallax","portfolios","data","edges","onClick","useRef","index","length","scrollTo","PREFIX","content","ref","pages","offset","speed","factor","backgroundImage","backgroundSize","map","node","frontmatter","path","title","description","images","iconset","require","alt","opacity","alignItems","to","marginTop","position","zIndex","IconSetBig","propTypes","PropTypes","shape","isRequired","pageQuery","PortfoliosTemplate","props"],"mappings":"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","file":"component---src-templates-portfolios-jsx-0298037c858dffd2d5bb.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst SimpleWrapper = styled.div`\r\n  margin: auto;\r\n  padding: 120px 0 0;\r\n  max-width: 1200px;\r\n  font-size: 16px;\r\n  background-image: white;\r\n  @media (max-width: 614px) {\r\n    padding: 70px 16px 0;\r\n  }\r\n\r\n  &:before,\r\n  &:after {\r\n    display: block;\r\n    content: \"\";\r\n    clear: both;\r\n  }\r\n\r\n  h1 {\r\n    margin: 0.67em 0;\r\n    font-size: 36px;\r\n  }\r\n\r\n  time {\r\n    margin: 1em 0;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport default SimpleWrapper;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport cpluslogo from \"./cplus.png\";\r\nimport awslogo from \"./aws.png\";\r\nimport jquerylogo from \"./jquery.png\";\r\nimport mysqllogo from \"./mysql.png\";\r\nimport pythonlogo from \"./python.png\";\r\nimport reactlogo from \"./react.png\";\r\nimport springlogo from \"./spring.png\";\r\nimport tensorflowlogo from \"./tensorflow.png\";\r\nimport djangologo from \"./django.png\";\r\nimport flasklogo from \"./flask.png\";\r\nimport dartlogo from \"./dart.png\";\r\nimport clogo from \"./c.png\";\r\nimport nodejslogo from \"./nodejs.png\";\r\nimport vuelogo from \"./vue.png\";\r\nimport javalogo from \"./java.png\";\r\nimport javascriptlogo from \"./javascripts.png\";\r\nimport reduxlogo from \"./redux.png\";\r\nimport gatsbylogo from \"./gatsby.png\";\r\n\r\nimport htmllogo from \"./html.png\";\r\nimport csslogo from \"./css.png\";\r\n\r\nconst LogoImage = styled.img`\r\n  -webkit-filter: grayscale(100%);\r\n  filter: gray;\r\n  align-items: center;\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\n\r\nconst IconSetUnder = ({ IconObject }) => {\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <Grid\r\n        container\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          width: \"35%\",\r\n        }}\r\n      >\r\n        {IconObject.indexOf(\"htmllogo\") !== -1 && (\r\n          <Grid item xs={1}>\r\n            <LogoImage src={htmllogo} />\r\n          </Grid>\r\n        )}\r\n        {IconObject.indexOf(\"csslogo\") !== -1 && (\r\n          <Grid item xs={1}>\r\n            <LogoImage src={csslogo} />\r\n          </Grid>\r\n        )}\r\n        {IconObject.indexOf(\"javascriptlogo\") !== -1 && (\r\n          <Grid item xs={1}>\r\n            <LogoImage src={javascriptlogo} />\r\n          </Grid>\r\n        )}\r\n        {IconObject.indexOf(\"awslogo\") !== -1 && (\r\n          <Grid item xs={1}>\r\n            <LogoImage src={awslogo} />\r\n          </Grid>\r\n        )}\r\n        {IconObject.indexOf(\"cpluslogo\") !== -1 && (\r\n          <Grid item xs={1}>\r\n            <LogoImage src={cpluslogo} />\r\n          </Grid>\r\n        )}\r\n        {IconObject.indexOf(\"clogo\") !== -1 && (\r\n          <Grid item xs={1}>\r\n            <LogoImage src={clogo} />\r\n          </Grid>\r\n        )}\r\n        {IconObject.indexOf(\"pythonlogo\") !== -1 && (\r\n          <Grid item xs={1}>\r\n            <LogoImage src={pythonlogo} />\r\n          </Grid>\r\n        )}\r\n        {IconObject.indexOf(\"javalogo\") !== -1 && (\r\n          <Grid item xs={1}>\r\n            <LogoImage src={javalogo} />\r\n          </Grid>\r\n        )}\r\n        {IconObject.indexOf(\"dartlogo\") !== -1 && (\r\n          <Grid item xs={1}>\r\n            <LogoImage src={dartlogo} />\r\n          </Grid>\r\n        )}\r\n        {IconObject.indexOf(\"mysqllogo\") !== -1 && (\r\n          <Grid item xs={1}>\r\n            <LogoImage src={mysqllogo} />\r\n          </Grid>\r\n        )}\r\n        {IconObject.indexOf(\"djangologo\") !== -1 && (\r\n          <Grid item xs={1}>\r\n            <LogoImage src={djangologo} />\r\n          </Grid>\r\n        )}\r\n        {IconObject.indexOf(\"nodejslogo\") !== -1 && (\r\n          <Grid item xs={1}>\r\n            <LogoImage src={nodejslogo} />\r\n          </Grid>\r\n        )}\r\n        {IconObject.indexOf(\"flasklogo\") !== -1 && (\r\n          <Grid item xs={1}>\r\n            <LogoImage src={flasklogo} />\r\n          </Grid>\r\n        )}\r\n        {IconObject.indexOf(\"springlogo\") !== -1 && (\r\n          <Grid item xs={1}>\r\n            <LogoImage src={springlogo} />\r\n          </Grid>\r\n        )}\r\n        {IconObject.indexOf(\"vuelogo\") !== -1 && (\r\n          <Grid item xs={1}>\r\n            <LogoImage src={vuelogo} />\r\n          </Grid>\r\n        )}\r\n        {IconObject.indexOf(\"reactlogo\") !== -1 && (\r\n          <Grid item xs={1}>\r\n            <LogoImage src={reactlogo} />\r\n          </Grid>\r\n        )}\r\n        {IconObject.indexOf(\"reduxlogo\") !== -1 && (\r\n          <Grid item xs={1}>\r\n            <LogoImage src={reduxlogo} />\r\n          </Grid>\r\n        )}\r\n        {IconObject.indexOf(\"gatsbylogo\") !== -1 && (\r\n          <Grid item xs={1}>\r\n            <LogoImage src={gatsbylogo} />\r\n          </Grid>\r\n        )}\r\n        {IconObject.indexOf(\"tensorflowlogo\") !== -1 && (\r\n          <Grid item xs={1}>\r\n            <LogoImage src={tensorflowlogo} />\r\n          </Grid>\r\n        )}\r\n        {IconObject.indexOf(\"jquerylogo\") !== -1 && (\r\n          <Grid item xs={1}>\r\n            <LogoImage src={jquerylogo} />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IconSetUnder;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component, useRef } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { Link } from \"gatsby\";\r\nimport { PREFIX } from \"~/constants\";\r\nimport styled from \"styled-components\";\r\nimport SimpleWrapper from \"~/components/Common/SimpleWrapper\";\r\nimport { Parallax, ParallaxLayer } from \"react-spring/renderprops-addons\";\r\nimport IconSetBig from \"../IconSet/IconSetBig\";\r\n\r\nexport const Wrapper = styled(SimpleWrapper)`\r\n  padding: 100px 0 0;\r\n\r\n  @media (max-width: 414px) {\r\n    padding: 70px 0 0;\r\n  }\r\n`;\r\nconst BlinkImage = styled.img`\r\n  animation: blink 0.5s ease-in-out infinite alternate;\r\n\r\n  @keyframes blink {\r\n    50% {\r\n      opacity: 0.1;\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TitleBig = styled.div`\r\n  font-family: \"NanumBarunGothic\" !important;\r\n  animation: blink 1.2s ease-in-out infinite alternate;\r\n\r\n  @keyframes blink {\r\n    50% {\r\n      opacity: 0.5;\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n  font-size: 50px;\r\n  font-weight: 800;\r\n  text-shadow: 4px 4px 40px white;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  font-family: \"NanumBarunGothic\" !important;\r\n  font-size: 20px;\r\n  font-weight: 800;\r\n  text-shadow: 4px 4px 40px white;\r\n`;\r\nconst url = (name, wrap = false) =>\r\n  `${\r\n    wrap ? \"url(\" : \"\"\r\n  }https://awv3node-homepage.surge.sh/build/assets/${name}.svg${\r\n    wrap ? \")\" : \"\"\r\n  }`;\r\n\r\nconst Portfolios = ({\r\n  data: {\r\n    portfolios: { edges: portfolios },\r\n  },\r\n}) => {\r\n  let parallax;\r\n\r\n  const ref = useRef();\r\n  const onClick = (index) => {\r\n    if (portfolios.length - 1 === index) {\r\n      parallax.scrollTo(0);\r\n    } else {\r\n      parallax.scrollTo(index + 1);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Helmet>\r\n          <title>{`${PREFIX}PORTFOLIOS`}</title>\r\n          <meta name=\"og:title\" content={`${PREFIX}PORTFOLIOS`} />\r\n        </Helmet>\r\n      </Wrapper>\r\n      <Parallax ref={(ref) => (parallax = ref)} pages={portfolios.length}>\r\n        <ParallaxLayer\r\n          offset={0}\r\n          speed={0}\r\n          factor={3}\r\n          style={{\r\n            backgroundImage: url(\"stars\", true),\r\n            backgroundSize: \"cover\",\r\n          }}\r\n        />\r\n        {portfolios.map(\r\n          (\r\n            {\r\n              node: {\r\n                frontmatter: { path, title, description, images = [], iconset },\r\n              },\r\n            },\r\n            index\r\n          ) => (\r\n            <>\r\n              <ParallaxLayer offset={index} speed={1}>\r\n                <img\r\n                  src={require(`~/resources/${images[0]}`)}\r\n                  alt=\"portfolio\"\r\n                  style={{ opacity: 0.3 }}\r\n                />\r\n              </ParallaxLayer>\r\n              <ParallaxLayer\r\n                offset={index}\r\n                speed={-0}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onClick={() => onClick(index)}\r\n              >\r\n                <Link to={path}>\r\n                  <TitleBig>{title}</TitleBig>\r\n                </Link>\r\n              </ParallaxLayer>\r\n              <ParallaxLayer\r\n                offset={index}\r\n                speed={-0}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginTop: \"5%\",\r\n                }}\r\n                onClick={() => onClick(index)}\r\n              >\r\n                <Link to={path}>\r\n                  <Content>{description}</Content>\r\n                </Link>\r\n              </ParallaxLayer>\r\n              <ParallaxLayer\r\n                offset={index}\r\n                speed={-0}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onClick={() => onClick(index)}\r\n              >\r\n                <mesh\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    marginTop: \"10%\",\r\n                    width: \"80%\",\r\n                    zIndex: \"6\",\r\n                  }}\r\n                >\r\n                  <IconSetBig IconObject={iconset} />\r\n                </mesh>\r\n              </ParallaxLayer>\r\n            </>\r\n          )\r\n        )}\r\n      </Parallax>\r\n    </>\r\n  );\r\n};\r\n\r\nPortfolios.propTypes = {\r\n  data: PropTypes.shape({}).isRequired,\r\n};\r\n\r\nexport default Portfolios;\r\n","import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"~/components/layout\";\r\nimport Portfolios from \"~/components/Portfolios\";\r\n\r\nconst PortfoliosTemplate = (props) => (\r\n  <Layout {...props}>\r\n    <Portfolios {...props} />\r\n  </Layout>\r\n);\r\n\r\nexport default PortfoliosTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query PortfoliosQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n        homepage\r\n      }\r\n    }\r\n    portfolios: allMarkdownRemark(\r\n      filter: { frontmatter: { type: { eq: \"portfolio\" }, hide: { ne: true } } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            type\r\n            title\r\n            path\r\n            images\r\n            date\r\n            description\r\n            iconset\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}