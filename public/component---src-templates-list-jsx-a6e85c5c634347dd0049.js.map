{"version":3,"sources":["webpack:///./src/components/Common/ClipText/index.js","webpack:///./src/components/Common/List/styled.js","webpack:///./src/components/List/index.jsx","webpack:///./src/templates/List.jsx"],"names":["ClipText","styled","div","ListWrapper","ListImage","ListTitle","ListContent","ListPage","List","data","location","useState","page","setPage","allPosts","getPosts","postCount","length","posts","slice","CONTENT_PER_PAGE","PostsWrapper","PREFIX","name","content","map","node","frontmatter","images","tags","path","otherProps","Card","key","Pagination","count","Math","ceil","size","onChange","event","value","pageQuery","ListTemplate","props"],"mappings":"icAyBeA,EAvBEC,IAAOC,IAAV,+DAAGD,CAAH,6RCADE,EAAcF,IAAOC,IAAV,0EAAGD,CAAH,kEAKXG,EAAYH,IAAOC,IAAV,wEAAGD,CAAH,2EAMTI,EAAYJ,IAAOC,IAAV,wEAAGD,CAAH,kKA6BTK,GAfeL,IAAOC,IAAV,2EAAGD,CAAH,kLAeEA,IAAOC,IAAV,0EAAGD,CAAH,oBAIXM,EAAWN,IAAOC,IAAV,uEAAGD,CAAH,4F,0gDC5BrB,IA4DeO,EA5DF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAqB,KAAfC,SAAe,EACXC,mBAAS,GADE,IAC5BC,EAD4B,KACtBC,EADsB,KAE7BC,EAAWC,YAASN,GACpBO,EAAYF,EAASG,OACrBC,EAAQJ,EAASK,OACpBP,EAAO,GAAKQ,mBACbR,EAAOQ,oBAKT,OACE,oCACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,yCAAWC,SAAX,SACA,0BAAMC,KAAK,WAAWC,QAAO,UAAKF,SAAL,WAE/B,kBAAC,IAAD,KACE,kBAACnB,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,EAAD,KACE,2CAGJ,kBAACC,EAAD,KACE,4CAEF,kBAACC,EAAD,KACCY,EAAMO,KACL,oBACEC,KACEC,YAAeC,EAFnB,EAEmBA,OAAQC,EAF3B,EAE2BA,KAAMC,EAFjC,EAEiCA,KAASC,EAF1C,qCAKE,kBAACC,EAAA,EAAD,GACEC,IAAKH,EACLA,KAAMA,EACNF,OAAQA,EACRC,KAAMA,GACFE,QAKV,kBAACxB,EAAD,KACE,kBAAC2B,EAAA,EAAD,CACEC,MAAOC,KAAKC,KAAKrB,EAAYI,oBAC7BR,KAAMA,EACN0B,KAAK,QACLC,SA1CO,SAACC,EAAOC,GAC3B5B,EAAQ4B,YCdCC,GAFEC,UANM,SAAAC,GAAK,OACxB,kBAAC,IAAWA,EACV,kBAAC,EAASA,KAMQ,e","file":"component---src-templates-list-jsx-a6e85c5c634347dd0049.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst ClipText = styled.div`\r\n  background-size: cover;\r\n  position: relative;\r\n  height: 100%;\r\n\r\n  h1 {\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 10vw;\r\n    font-weight: 800;\r\n    margin: 0 auto;\r\n    padding: 10px;\r\n    width: 95%;\r\n    text-align: center;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    mix-blend-mode: multiply;\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nexport default ClipText;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ListWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 200px 100px 100px 1fr 200px;\r\n`;\r\n\r\nexport const ListImage = styled.div`\r\n    grid-row: 1/2;\r\n    background-image: url('/back.jpg');\r\n    background-size: cover;\r\n`;\r\n\r\nexport const ListTitle = styled.div`\r\n    grid-row: 2/3;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    background-color: black;\r\n    h3 {\r\n        font-size: 32px;\r\n        font-weight: 800;\r\n        color: white;\r\n    }\r\n`;\r\n\r\nexport const ListCategory = styled.div`\r\n    grid-row: 3/4;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    background-color: black;\r\n    overflow: scroll;\r\n    h3 {\r\n        font-size: 28px;\r\n        font-weight: 800;\r\n        color: white;\r\n    }\r\n`;\r\n\r\nexport const ListContent = styled.div`\r\n    grid-row: 4/5;\r\n`;\r\n\r\nexport const ListPage = styled.div`\r\n    grid-row: 5/6;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n`;","import React, { useEffect, useState } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport Card from \"~/components/Common/Card\";\r\nimport getPosts from \"~/utils/getPosts\";\r\nimport { PREFIX, CONTENT_PER_PAGE } from \"~/constants\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport \"./styled.css\";\r\nimport PostsWrapper from \"../Common/PostsWrapper\";\r\nimport LargeWrapper from \"../Common/LargeWrapper\";\r\nimport ClipText from \"../Common/ClipText\";\r\nimport { \r\n  ListWrapper,\r\n  ListImage, \r\n  ListTitle, \r\n  ListContent, \r\n  ListPage, \r\n} from '../Common/List/styled'\r\n\r\nconst List = ({ data, location }) => {\r\n  const [page, setPage] = useState(1);\r\n  const allPosts = getPosts(data);\r\n  const postCount = allPosts.length;\r\n  const posts = allPosts.slice(\r\n    (page - 1) * CONTENT_PER_PAGE,\r\n    page * CONTENT_PER_PAGE\r\n  );\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  return (\r\n    <>\r\n      <PostsWrapper>\r\n        <Helmet>\r\n          <title>{`${PREFIX}POST`}</title>\r\n          <meta name=\"og:title\" content={`${PREFIX}POST`} />\r\n        </Helmet>\r\n        <LargeWrapper>\r\n          <ListWrapper>\r\n            <ListImage>\r\n              <ClipText>\r\n                <h1>BLOG LIST</h1>\r\n              </ClipText>\r\n            </ListImage>\r\n            <ListTitle>\r\n              <h3>블로그 모든 글 목록</h3>\r\n            </ListTitle>\r\n            <ListContent>\r\n            {posts.map(\r\n              ({\r\n                node: {\r\n                  frontmatter: { images, tags, path, ...otherProps },\r\n                },\r\n              }) => (\r\n                <Card\r\n                  key={path}\r\n                  path={path}\r\n                  images={images}\r\n                  tags={tags}\r\n                  {...otherProps}\r\n                />\r\n              )\r\n            )}\r\n            </ListContent>\r\n            <ListPage>\r\n              <Pagination\r\n                count={Math.ceil(postCount / CONTENT_PER_PAGE)}\r\n                page={page}\r\n                size=\"large\"\r\n                onChange={handleChange}\r\n              />\r\n            </ListPage>\r\n          </ListWrapper>\r\n        </LargeWrapper>\r\n      </PostsWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '~/components/layout';\r\nimport List from '~/components/List';\r\n\r\nconst ListTemplate = props => (\r\n  <Layout {...props}>\r\n    <List {...props} />\r\n  </Layout>\r\n);\r\n\r\nexport default ListTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query ListQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n        homepage\r\n      }\r\n    }\r\n    posts: allMarkdownRemark (\r\n      filter: { frontmatter: { hide: { ne: true } } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            type\r\n            title\r\n            images\r\n            path\r\n            tags\r\n            date\r\n            summary\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}