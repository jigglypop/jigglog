{"version":3,"sources":["webpack:///./src/components/CategorizedList/index.jsx","webpack:///./src/templates/CategorizedList.jsx","webpack:///./src/components/CategorizedList/moon.png"],"names":["TagWrapper","styled","div","CategorizedList","data","location","page","getPage","category","pathname","split","allPosts","getPosts","filter","c","node","frontmatter","decodeURI","postCount","length","posts","slice","CONTENT_PER_PAGE","categorySet","type","push","result","reduce","object","currentValue","key","results","i","PostsWrapper","name","content","Grid","container","className","map","item","xs","to","src","moon","images","tags","path","otherProps","Card","Pagination","prefix","propTypes","PropTypes","shape","isRequired","pageQuery","CategorizedListTemplate","props","module","exports"],"mappings":"2+DAeA,IAAMA,EAAaC,IAAOC,IAAV,8EAAGD,CAAH,y7BA4EVE,EAAkB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACzBC,EAAOC,YAAQF,GACVG,EAFmC,EAEvBH,EAASI,SAASC,MAAM,KAFD,MAUxCC,EAPUC,YAASR,GAAMS,QAC7B,gBAE6BC,EAF7B,EACEC,KACEC,YAAeR,SAFnB,OAIMS,UAAUT,KAAcM,KAG1BI,EAAYP,EAASQ,OACrBC,EAAQT,EAASU,OACpBf,EAAO,GAAKgB,mBACbhB,EAAOgB,oBAGHC,EAAc,GACpBX,YAASR,GAAMS,QAAO,oBAAGE,KAAQC,YAAeQ,EAA1B,EAA0BA,KAAMhB,EAAhC,EAAgCA,SAAhC,OACX,OAATgB,EAAgBD,EAAYE,KAAKjB,GAAY,MAE/C,IAAMkB,EAASH,EAAYI,QAAO,SAACC,EAAQC,GAKzC,OAJKD,EAAOC,KACVD,EAAOC,GAAgB,CAAEC,IAAKD,EAAcV,OAAQ,IAEtDS,EAAOC,GAAP,SACOD,IACN,IAEGG,EAAU,GAChB,IAAK,IAAIC,KAAKN,EACZK,EAAQN,KAAKC,EAAOM,IAEtB,OACE,oCACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,+BAAQhB,UAAUT,IAClB,0BAAM0B,KAAK,WAAWC,QAASlB,UAAUT,MAE3C,kBAACR,EAAD,KACE,kBAACoC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,gBACvBP,EAAQQ,KAAI,gBAAGT,EAAH,EAAGA,IAAH,EAAQX,OAAR,OACX,kBAACiB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGX,IAAKA,GACrB,wBAAIQ,UAAU,gBACZ,kBAAC,OAAD,CAAMI,GAAE,sBAAiBZ,EAAjB,OAA2BA,SAK3C,yBAAKa,IAAKC,MACV,wBAAIN,UAAU,iBAAiBrB,UAAUT,IACzC,wBAAI8B,UAAU,kBAAd,SAGgB,IAAjBlB,EAAMD,OAAe,0CAAuB,KAC5CC,EAAMmB,KACL,oBACExB,KACEC,YAAe6B,EAFnB,EAEmBA,OAAQC,EAF3B,EAE2BA,KAAMC,EAFjC,EAEiCA,KAASC,EAF1C,qCAKE,kBAACC,EAAA,EAAD,GACEnB,IAAKiB,EACLA,KAAMA,EACNF,OAAQA,EACRC,KAAMA,GACFE,QAKZ,kBAACE,EAAA,EAAD,CACEC,OAAM,sBAAiB3C,EAAjB,KACNU,UAAWA,EACXb,SAAUA,MAMlBF,EAAgBiD,UAAY,CAC1BhD,KAAMiD,IAAUC,MAAM,IAAIC,WAC1BlD,SAAUgD,IAAUC,MAAM,IAAIC,YAGjBpD,QCpKFqD,GAFEC,UANiB,SAAAC,GAAK,OACnC,kBAAC,IAAWA,EACV,kBAAC,EAAoBA,KAMH,e,qBCbtBC,EAAOC,QAAU,IAA0B","file":"component---src-templates-categorized-list-jsx-9ec0443536a3e1452e02.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport PostsWrapper from \"~/components/Common/PostsWrapper\";\r\nimport Card from \"~/components/Common/Card\";\r\nimport Pagination from \"~/components/Common/Pagination\";\r\nimport getPosts from \"~/utils/getPosts\";\r\nimport getPage from \"~/utils/getPage\";\r\nimport { CONTENT_PER_PAGE } from \"~/constants\";\r\n\r\nimport moon from \"./moon.png\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst TagWrapper = styled.div`\r\n  .Wrapper {\r\n    width: 40%;\r\n    margin: 10px auto;\r\n    position: relative;\r\n  }\r\n\r\n  img {\r\n    width: 40%;\r\n    opacity: 0.4;\r\n    vertical-align: middle;\r\n    position: relative;\r\n    left: 50%;\r\n    margin-top: 40vh;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n  .Wrapper-Grid {\r\n    display: flex;\r\n    align-items: center;\r\n    text-align: center;\r\n    justify-content: center;\r\n\r\n    position: absolute;\r\n    width: 400px;\r\n    z-index: 10;\r\n    margin-top: 400px;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n  .Wrapper-text {\r\n    color: white;\r\n    font-weight: 800;\r\n    text-shadow: 2px 2px 20px gray;\r\n    font-size: 12px;\r\n  }\r\n  .Wrapper-title {\r\n    color: white;\r\n    font-weight: 800;\r\n    margin-top: -80vh;\r\n\r\n    text-shadow: 4px 4px 40px white;\r\n    font-size: 40px;\r\n    position: relative;\r\n    text-align: center;\r\n    animation: blink 1.2s ease-in-out infinite alternate;\r\n\r\n    @keyframes blink {\r\n      50% {\r\n        opacity: 0.5;\r\n      }\r\n      100% {\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n  .Wrapper-titles {\r\n    color: white;\r\n    font-weight: 800;\r\n    margin-bottom: 50vh;\r\n\r\n    text-shadow: 4px 4px 40px white;\r\n    font-size: 20px;\r\n    position: relative;\r\n    text-align: center;\r\n    animation: blink 1.2s ease-in-out infinite alternate;\r\n\r\n    @keyframes blink {\r\n      50% {\r\n        opacity: 0.5;\r\n      }\r\n      100% {\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst CategorizedList = ({ data, location }) => {\r\n  const page = getPage(location);\r\n  const [, , category] = location.pathname.split(\"/\");\r\n  const edgeSet = getPosts(data).filter(\r\n    ({\r\n      node: {\r\n        frontmatter: { category: c },\r\n      },\r\n    }) => decodeURI(category) === c\r\n  );\r\n  const allPosts = edgeSet;\r\n  const postCount = allPosts.length;\r\n  const posts = allPosts.slice(\r\n    (page - 1) * CONTENT_PER_PAGE,\r\n    page * CONTENT_PER_PAGE\r\n  );\r\n  // 카테고리셋\r\n  const categorySet = [];\r\n  getPosts(data).filter(({ node: { frontmatter: { type, category } } }) =>\r\n    type === null ? categorySet.push(category) : \"\"\r\n  );\r\n  const result = categorySet.reduce((object, currentValue) => {\r\n    if (!object[currentValue]) {\r\n      object[currentValue] = { key: currentValue, length: 0 };\r\n    }\r\n    object[currentValue][\"length\"]++;\r\n    return object;\r\n  }, {});\r\n\r\n  const results = [];\r\n  for (var i in result) {\r\n    results.push(result[i]);\r\n  }\r\n  return (\r\n    <>\r\n      <PostsWrapper>\r\n        <Helmet>\r\n          <title>{decodeURI(category)}</title>\r\n          <meta name=\"og:title\" content={decodeURI(category)} />\r\n        </Helmet>\r\n        <TagWrapper>\r\n          <Grid container className=\"Wrapper-Grid\">\r\n            {results.map(({ key, length }) => (\r\n              <Grid item xs={3} key={key}>\r\n                <h1 className=\"Wrapper-text\">\r\n                  <Link to={`/categories/${key}/1`}>{key}</Link>\r\n                </h1>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          <img src={moon} />\r\n          <h1 className=\"Wrapper-title\">{decodeURI(category)}</h1>\r\n          <h1 className=\"Wrapper-titles\">카테고리</h1>\r\n        </TagWrapper>\r\n\r\n        {posts.length === 0 ? <div>No posts.</div> : null}\r\n        {posts.map(\r\n          ({\r\n            node: {\r\n              frontmatter: { images, tags, path, ...otherProps },\r\n            },\r\n          }) => (\r\n            <Card\r\n              key={path}\r\n              path={path}\r\n              images={images}\r\n              tags={tags}\r\n              {...otherProps}\r\n            />\r\n          )\r\n        )}\r\n      </PostsWrapper>\r\n      <Pagination\r\n        prefix={`/categories/${category}/`}\r\n        postCount={postCount}\r\n        location={location}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nCategorizedList.propTypes = {\r\n  data: PropTypes.shape({}).isRequired,\r\n  location: PropTypes.shape({}).isRequired,\r\n};\r\n\r\nexport default CategorizedList;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '~/components/layout';\r\nimport CategorizedList from '~/components/CategorizedList';\r\n\r\nconst CategorizedListTemplate = props => (\r\n  <Layout {...props}>\r\n    <CategorizedList {...props} />\r\n  </Layout>\r\n);\r\n\r\nexport default CategorizedListTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query CategorizedListQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n        homepage\r\n      }\r\n    }\r\n    posts: allMarkdownRemark (\r\n      filter: { frontmatter: { hide: { ne: true } } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            type\r\n            title\r\n            category\r\n            images\r\n            path\r\n            tags\r\n            date\r\n            summary\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","module.exports = __webpack_public_path__ + \"static/moon-62a08f42ca1f8af3cd82ef580e951ba4.png\";"],"sourceRoot":""}